<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KWEngine3</name>
    </assembly>
    <members>
        <member name="T:KWEngine3.Audio.Audio">
            <summary>
            Helfer-Klasse für Audioeffekte
            </summary>
        </member>
        <member name="M:KWEngine3.Audio.Audio.PlaySound(System.String,System.Boolean,System.Single)">
            <summary>
            Spielt einen Ton ab
            </summary>
            <param name="audiofile">Audiodatei</param>
            <param name="playLooping">looped playback?</param>
            <param name="volume">Lautstärke</param>
            <returns>ID des verwendeten Audiokanals</returns>
        </member>
        <member name="M:KWEngine3.Audio.Audio.ChangeSoundGain(System.Int32,System.Single)">
            <summary>
            Ändert die Lautstärke eines Tons
            </summary>
            <param name="sourceId">id der Audiospur</param>
            <param name="gain">Lautstärke (0.0f bis 1.0f)</param>
        </member>
        <member name="M:KWEngine3.Audio.Audio.StopSound(System.String)">
            <summary>
            Stoppt einen Ton
            </summary>
            <param name="audiofile">Audiodatei</param>
        </member>
        <member name="M:KWEngine3.Audio.Audio.PreloadSound(System.String)">
            <summary>
            Lädt eine Audiodatei in den Arbeitsspeicher
            </summary>
            <param name="audiofile">Audiodatei</param>
        </member>
        <member name="M:KWEngine3.Audio.Audio.StopSound(System.Int32)">
            <summary>
            Stoppt den angegebenen Audiokanal
            </summary>
            <param name="sourceId">Lanalnummer</param>
        </member>
        <member name="M:KWEngine3.Audio.Audio.StopAllSound">
            <summary>
            Stoppt alle Töne
            </summary>
        </member>
        <member name="T:KWEngine3.Audio.CachedSound">
            <summary>
            Vorgeladener Audioton
            </summary>
        </member>
        <member name="P:KWEngine3.Audio.CachedSound.AudioData">
            <summary>
            Audiodaten
            </summary>
        </member>
        <member name="P:KWEngine3.Audio.CachedSound.WaveFormat">
            <summary>
            Waveformat
            </summary>
        </member>
        <member name="M:KWEngine3.Audio.CachedSound.#ctor(System.String)">
            <summary>
            Konstruktor für das Erzeugen eines gecacheten Tons
            </summary>
            <param name="audioFileName">Dateiname</param>
        </member>
        <member name="T:KWEngine3.Audio.CSOgg.csBuffer">
            <summary>
            Summary description for csBuffer.
            </summary>
        </member>
        <member name="T:KWEngine3.Audio.CSOgg.Packet">
            <summary>
            Summary description for Packet.
            </summary>
        </member>
        <member name="T:KWEngine3.Audio.CSOgg.Page">
            <summary>
            Summary description for Page.
            </summary>
        </member>
        <member name="T:KWEngine3.Audio.CSOgg.StreamState">
            <summary>
            Summary description for StreamState.
            </summary>
        </member>
        <member name="T:KWEngine3.Audio.CSOgg.SyncState">
            <summary>
            Summary description for SyncState.
            </summary>
        </member>
        <member name="F:KWEngine3.Audio.CSVorbis.Block.pcm">
            necessary stream state for linking to the framing abstraction
        </member>
        <member name="M:KWEngine3.Audio.GLAudioEngine.Dispose">
            <summary>
            Entlädt alle Audioressourcen aus dem Arbeitsspeicher
            </summary>
        </member>
        <member name="P:KWEngine3.Audio.OggDecoder.OggDecodeStream.BitsPerSample">
            <summary>
            Anzahl der Bits pro Sample
            </summary>
        </member>
        <member name="P:KWEngine3.Audio.OggDecoder.OggDecodeStream.SampleRate">
            <summary>
            Anzahl der Samples Pro Sekunde
            </summary>
        </member>
        <member name="P:KWEngine3.Audio.OggDecoder.OggDecodeStream.ChannelCount">
            <summary>
            Anzahl der Kanäle
            </summary>
        </member>
        <member name="P:KWEngine3.Audio.WaveFormat.SampleRate">
            <summary>
            Sample Rate
            </summary>
        </member>
        <member name="P:KWEngine3.Audio.WaveFormat.BitsPerSample">
            <summary>
            Bits per Sample
            </summary>
        </member>
        <member name="P:KWEngine3.Audio.WaveFormat.Channels">
            <summary>
            Mono or Stereo
            </summary>
        </member>
        <member name="M:KWEngine3.Audio.WaveFormat.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a WaveFormat for given Parameters
            </summary>
            <param name="samplerate">Sample rate (i.e. 44100)</param>
            <param name="bitspersample">Bits per sample (i.e. 16)</param>
            <param name="channels">Channel count (i.e. 1 or 2)</param>
        </member>
        <member name="M:KWEngine3.Editor.KWBuilderOverlay.RecreateFontDeviceTexture">
            <summary>
            Recreates the device texture used to render text.
            </summary>
        </member>
        <member name="M:KWEngine3.Editor.KWBuilderOverlay.Render">
            <summary>
            Renders the ImGui draw list data.
            </summary>
        </member>
        <member name="M:KWEngine3.Editor.KWBuilderOverlay.Update(OpenTK.Windowing.Desktop.GameWindow,System.Single)">
            <summary>
            Updates ImGui input and IO configuration state.
            </summary>
        </member>
        <member name="M:KWEngine3.Editor.KWBuilderOverlay.SetPerFrameImGuiData(System.Single)">
            <summary>
            Sets per-frame data based on the associated window.
            This is called by Update(float).
            </summary>
        </member>
        <member name="M:KWEngine3.Editor.KWBuilderOverlay.Dispose">
            <summary>
            Frees all graphics resources used by the renderer.
            </summary>
        </member>
        <member name="T:KWEngine3.IntersectionTestMode">
            <summary>
            Gibt an, welche Arten von Hitboxen für die Kollisionsmessung berücksichtigt werden sollen
            </summary>
        </member>
        <member name="F:KWEngine3.IntersectionTestMode.CheckAllHitboxTypes">
            <summary>
            Misst beide Arten: ConvexHull und Plane
            </summary>
        </member>
        <member name="F:KWEngine3.IntersectionTestMode.CheckConvexHullsOnly">
            <summary>
            Limitiert die Messung auf konvexe Hüllen (Convex Hull)
            </summary>
        </member>
        <member name="F:KWEngine3.IntersectionTestMode.CheckPlanesOnly">
            <summary>
            Limitiert die Messung auf Ebenen (Planes)
            </summary>
        </member>
        <member name="T:KWEngine3.RayMode">
            <summary>
            Bestimmt, wie viele Strahlen für die Messung der Bodennähe verwendet und in welche Richtung sie geschossen werden
            </summary>
        </member>
        <member name="F:KWEngine3.RayMode.SingleY">
            <summary>
            Verwendet einen Strahl aus der Mitte der Hitbox entlang der lokalen negativen Y-Achse
            </summary>
        </member>
        <member name="F:KWEngine3.RayMode.SingleZ">
            <summary>
            Verwendet einen Strahl aus der Mitte der Hitbox entlang der lokalen negativen Z-Achse
            </summary>
        </member>
        <member name="F:KWEngine3.RayMode.TwoRays2DPlatformerY">
            <summary>
            Verwendet zwei Strahlen entlang der lokalen negativen Y-Achse der Instanz (für 2D-Platformer)
            </summary>
        </member>
        <member name="F:KWEngine3.RayMode.FourRaysZ">
            <summary>
            Verwendet vier Strahlen entlang der lokalen negativen Z-Achse der Instanz (für Top-Down-Platformer)
            </summary>
        </member>
        <member name="F:KWEngine3.RayMode.FourRaysY">
            <summary>
            Verwendet vier Strahlen entlang der lokalen negativen Y-Achse der Instanz (für 3D-Platformer)
            </summary>
        </member>
        <member name="F:KWEngine3.RayMode.FiveRaysY">
            <summary>
            Verwendet fünf Strahlen entlang der lokalen negativen Y-Achse der Instanz (für 3D-Platformer)
            </summary>
        </member>
        <member name="T:KWEngine3.ColliderType">
            <summary>
            Art des Kollisionstyps
            </summary>
        </member>
        <member name="F:KWEngine3.ColliderType.ConvexHull">
            <summary>
            Hat eine konvexe Hülle (Standardtyp)
            </summary>
        </member>
        <member name="F:KWEngine3.ColliderType.PlaneCollider">
            <summary>
            Eignet sich ausschließlich für raytraced Kollisionen
            </summary>
        </member>
        <member name="T:KWEngine3.PositionMode">
            <summary>
            Gibt an, auf welchen Fixpunkt sich die SetPosition()-Methode bezieht, wenn sie aufgerufen wird (Standardwert: Position)
            </summary>
        </member>
        <member name="F:KWEngine3.PositionMode.Position">
            <summary>
            Bezieht sich auf die tatsächliche Position des Objekts (Standard)
            </summary>
        </member>
        <member name="F:KWEngine3.PositionMode.CenterOfHitbox">
            <summary>
            Bezieht sich auf den Mittelpunkt der Hitbox
            </summary>
        </member>
        <member name="F:KWEngine3.PositionMode.BottomOfAABBHitbox">
            <summary>
            Bezieht sich auf die unterste Kante der achsenparallelen Hitbox (z.B. für 2D-Platformer)
            </summary>
        </member>
        <member name="T:KWEngine3.FlowFieldMode">
            <summary>
            Modus, der bestimmt, wie genau das FlowField Hindernisse erkennt (Standard: Simple)
            </summary>
        </member>
        <member name="F:KWEngine3.FlowFieldMode.Simple">
            <summary>
            Pro Zelle wird ein Strahl in der Zellenmitte verwendet, um Hindernisse zu finden (ungenau, aber schneller)
            </summary>
        </member>
        <member name="F:KWEngine3.FlowFieldMode.Box">
            <summary>
            Pro Zelle wird die gesamte Zelle als Hitbox mit den Hitboxen anderer Objekte verglichen (genauer, aber langsamer)
            </summary>
        </member>
        <member name="T:KWEngine3.FoliageType">
            <summary>
            Art des Bodengewächses
            </summary>
        </member>
        <member name="F:KWEngine3.FoliageType.GrassFresh">
            <summary>
            Gras (Variante 1)
            </summary>
        </member>
        <member name="F:KWEngine3.FoliageType.GrassDry">
            <summary>
            Gras (Variante 2)
            </summary>
        </member>
        <member name="F:KWEngine3.FoliageType.GrassDesert">
            <summary>
            Gras (Variante 3)
            </summary>
        </member>
        <member name="F:KWEngine3.FoliageType.GrassMinecraft">
            <summary>
            Gras (Variante 4)
            </summary>
        </member>
        <member name="F:KWEngine3.FoliageType.Fern">
            <summary>
            Strauch
            </summary>
        </member>
        <member name="T:KWEngine3.InstanceMode">
            <summary>
            Modus der Instanzplatzierung für RenderObject-Instanzen
            </summary>
        </member>
        <member name="F:KWEngine3.InstanceMode.Absolute">
            <summary>
            Jede zusätzliche Instanz hat eine unabhängige Position/Rotation/Skalierung
            </summary>
        </member>
        <member name="F:KWEngine3.InstanceMode.Relative">
            <summary>
            Jede zusätzliche hat eine vom Hauptinstanzelement abhängige Position/Rotation/Skalierung
            </summary>
        </member>
        <member name="T:KWEngine3.TextAlignMode">
            <summary>
            Modus der Textanordnung in einem HUDObject
            </summary>
        </member>
        <member name="F:KWEngine3.TextAlignMode.Left">
            <summary>
            Linksbündig
            </summary>
        </member>
        <member name="F:KWEngine3.TextAlignMode.Center">
            <summary>
            Zentriert
            </summary>
        </member>
        <member name="F:KWEngine3.TextAlignMode.Right">
            <summary>
            Rechtsbündig
            </summary>
        </member>
        <member name="T:KWEngine3.SkyboxType">
            <summary>
            Modus der Skybox (Standard: CubeMap)
            </summary>
        </member>
        <member name="F:KWEngine3.SkyboxType.CubeMap">
            <summary>
            Skybox liegt als 'unified cube map' vor
            </summary>
        </member>
        <member name="F:KWEngine3.SkyboxType.Equirectangular">
            <summary>
            Skybox liegt Gleichwinkelbild vor
            </summary>
        </member>
        <member name="T:KWEngine3.ExplosionAnimation">
            <summary>
            Art der Animationsbewegung
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionAnimation.Spread">
            <summary>
            Standard-Animationsalgorithmus
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionAnimation.WindUp">
            <summary>
            Partikel wandern entlang der positiven y-Achse nach oben
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionAnimation.WhirlwindUp">
            <summary>
            Partikel wirbeln entlang der positiven y-Achse nach oben
            </summary>
        </member>
        <member name="T:KWEngine3.CapsuleHitboxType">
            <summary>
            Form der Kapsel-Hitbox
            </summary>
        </member>
        <member name="F:KWEngine3.CapsuleHitboxType.Default">
            <summary>
            Standardmodus
            </summary>
        </member>
        <member name="F:KWEngine3.CapsuleHitboxType.Sloped">
            <summary>
            Kapsel ist in der unteren Hälfte stärker abgerundet 
            </summary>
        </member>
        <member name="T:KWEngine3.CapsuleHitboxMode">
            <summary>
            Modus für das Setzen der Kapsel-Hitbox bei 3D-Modellen
            </summary>
        </member>
        <member name="F:KWEngine3.CapsuleHitboxMode.Default">
            <summary>
            Standardmodus, der je nach 3D-Modell errät, welcher Modus geeignet sein könnte (Standard)
            </summary>
        </member>
        <member name="F:KWEngine3.CapsuleHitboxMode.AlwaysMeshTransform">
            <summary>
            Benutze immer die Informationen aus dem 3D-Modell-Mesh ohne Knochenskelett
            </summary>
        </member>
        <member name="F:KWEngine3.CapsuleHitboxMode.AlwaysArmatureTransform">
            <summary>
            Benutze immer die Informationen aus dem Knochenskelett (Armature) des Modells (falls vorhanden)
            </summary>
        </member>
        <member name="T:KWEngine3.ParticleType">
            <summary>
            Art der Partikel
            </summary>
        </member>
        <member name="F:KWEngine3.ParticleType.BurstFire1">
            <summary>
            Feuer 1
            </summary>
        </member>
        <member name="F:KWEngine3.ParticleType.BurstFire2">
            <summary>
            Feuer 2
            </summary>
        </member>
        <member name="F:KWEngine3.ParticleType.BurstFire3">
            <summary>
            Feuer 3
            </summary>
        </member>
        <member name="F:KWEngine3.ParticleType.BurstElectricity">
            <summary>
            Elektroschock
            </summary>
        </member>
        <member name="F:KWEngine3.ParticleType.BurstBubblesColored">
            <summary>
            Bälle
            </summary>
        </member>
        <member name="F:KWEngine3.ParticleType.BurstBubblesMonochrome">
            <summary>
            Bälle (farblos)
            </summary>
        </member>
        <member name="F:KWEngine3.ParticleType.BurstFirework1">
            <summary>
            Feuerwerk 1
            </summary>
        </member>
        <member name="F:KWEngine3.ParticleType.BurstFirework2">
            <summary>
            Feuerwerk 2
            </summary>
        </member>
        <member name="F:KWEngine3.ParticleType.BurstHearts">
            <summary>
            Herzen
            </summary>
        </member>
        <member name="F:KWEngine3.ParticleType.BurstOneUps">
            <summary>
            Pluszeichen
            </summary>
        </member>
        <member name="F:KWEngine3.ParticleType.BurstShield">
            <summary>
            Schild
            </summary>
        </member>
        <member name="F:KWEngine3.ParticleType.BurstTeleport1">
            <summary>
            Teleport 1
            </summary>
        </member>
        <member name="F:KWEngine3.ParticleType.BurstTeleport2">
            <summary>
            Teleport 2
            </summary>
        </member>
        <member name="F:KWEngine3.ParticleType.BurstTeleport3">
            <summary>
            Teleport 3
            </summary>
        </member>
        <member name="F:KWEngine3.ParticleType.LoopSmoke1">
            <summary>
            Rauch 1 (Loop)
            </summary>
        </member>
        <member name="F:KWEngine3.ParticleType.LoopSmoke2">
            <summary>
            Rauch 2 (Loop)
            </summary>
        </member>
        <member name="F:KWEngine3.ParticleType.LoopSmoke3">
            <summary>
            Rauch 3 (Loop)
            </summary>
        </member>
        <member name="T:KWEngine3.ExplosionType">
            <summary>
            Art der Explosion
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionType.Cube">
            <summary>
            Würfelpartikel in alle Richtungen
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionType.CubeRingY">
            <summary>
            Würfelpartikel um die Y-Achse
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionType.CubeRingZ">
            <summary>
            Würfelpartikel um die Z-Achse
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionType.Sphere">
            <summary>
            Kugelpartikel in alle Richtungen
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionType.SphereRingY">
            <summary>
            Kugelpartikel um die Y-Achse
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionType.SphereRingZ">
            <summary>
            Kugelpartikel um die Z-Achse
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionType.Star">
            <summary>
            Sternenpartikel in alle Richtungen
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionType.StarRingY">
            <summary>
            Sternenpartikel um die Y-Achse
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionType.StarRingZ">
            <summary>
            Sternenpartikel um die Z-Achse
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionType.Heart">
            <summary>
            Herzpartikel in alle Richtungen
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionType.HeartRingY">
            <summary>
            Herzpartikel um die Y-Achse
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionType.HeartRingZ">
            <summary>
            Herzpartikel um die Z-Achse
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionType.Skull">
            <summary>
            Schädelpartikel in alle Richtungen
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionType.SkullRingY">
            <summary>
            Schädelpartikel um die Y-Achse
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionType.SkullRingZ">
            <summary>
            Schädelpartikel um die Z-Achse
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionType.Dollar">
            <summary>
            Dollarpartikel in alle Richtungen
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionType.DollarRingY">
            <summary>
            Dollarpartikel um die Y-Achse
            </summary>
        </member>
        <member name="F:KWEngine3.ExplosionType.DollarRingZ">
            <summary>
            Dollarpartikel um die Z-Achse
            </summary>
        </member>
        <member name="T:KWEngine3.MetallicType">
            <summary>
            Metalltyp
            </summary>
        </member>
        <member name="F:KWEngine3.MetallicType.Default">
            <summary>
            Standard
            </summary>
        </member>
        <member name="F:KWEngine3.MetallicType.PlasticOrGlassLow">
            <summary>
            Plastik/Glass
            </summary>
        </member>
        <member name="F:KWEngine3.MetallicType.PlasticOrGlassHigh">
            <summary>
            Plastik/Glass
            </summary>
        </member>
        <member name="F:KWEngine3.MetallicType.Diamond">
            <summary>
            Diamant
            </summary>
        </member>
        <member name="F:KWEngine3.MetallicType.Iron">
            <summary>
            Eisen
            </summary>
        </member>
        <member name="F:KWEngine3.MetallicType.Copper">
            <summary>
            Kupfer
            </summary>
        </member>
        <member name="F:KWEngine3.MetallicType.Gold">
            <summary>
            Gold
            </summary>
        </member>
        <member name="F:KWEngine3.MetallicType.Aluminium">
            <summary>
            Aluminium
            </summary>
        </member>
        <member name="F:KWEngine3.MetallicType.Silver">
            <summary>
            Silber
            </summary>
        </member>
        <member name="T:KWEngine3.EngineMode">
            <summary>
            Modus der Engine
            </summary>
        </member>
        <member name="F:KWEngine3.EngineMode.Edit">
            <summary>
            Editor
            </summary>
        </member>
        <member name="F:KWEngine3.EngineMode.Play">
            <summary>
            Game
            </summary>
        </member>
        <member name="T:KWEngine3.LightType">
            <summary>
            Lichttyp
            </summary>
        </member>
        <member name="F:KWEngine3.LightType.Point">
            <summary>
            Punktlicht (in alle Richtungen scheinend)
            </summary>
        </member>
        <member name="F:KWEngine3.LightType.Directional">
            <summary>
            Gerichtetes Licht (in eine Richtung scheinend)
            </summary>
        </member>
        <member name="F:KWEngine3.LightType.Sun">
            <summary>
            Sonnenlicht (in eine Richtung scheinend aber ohne Entfernungsbegrenzung)
            </summary>
        </member>
        <member name="T:KWEngine3.ShadowQuality">
            <summary>
            Qualität der Lichtschatten
            </summary>
        </member>
        <member name="F:KWEngine3.ShadowQuality.NoShadow">
            <summary>
            Kein Schattenwurf
            </summary>
        </member>
        <member name="F:KWEngine3.ShadowQuality.Low">
            <summary>
            Niedrige Qualität
            </summary>
        </member>
        <member name="F:KWEngine3.ShadowQuality.Medium">
            <summary>
            Mittlere Qualität
            </summary>
        </member>
        <member name="F:KWEngine3.ShadowQuality.High">
            <summary>
            Hohe Qualität
            </summary>
        </member>
        <member name="T:KWEngine3.ProjectionType">
            <summary>
            Steuert die 3D-Darstellung der Kamera
            </summary>
        </member>
        <member name="F:KWEngine3.ProjectionType.Perspective">
            <summary>
            Nahe Objekte werden größer gezeichnet als ferne Objekte (Standard)
            </summary>
        </member>
        <member name="F:KWEngine3.ProjectionType.Orthographic">
            <summary>
            Alle Objekte werden ungeachtet der Kameradistanz gleich groß gezeichnet (ideal für 2D)
            </summary>
        </member>
        <member name="T:KWEngine3.GridType">
            <summary>
            Einheit zur Anzeige eines 10 Einheiten großen Gitternetzes
            </summary>
        </member>
        <member name="F:KWEngine3.GridType.None">
            <summary>
            Kein Gitternetz
            </summary>
        </member>
        <member name="F:KWEngine3.GridType.GridXZ">
            <summary>
            Ein Gitternetz auf der durch die XZ-Achsen aufgespannten Ebene
            </summary>
        </member>
        <member name="F:KWEngine3.GridType.GridXY">
            <summary>
            Ein Gitternetz auf der durch die XY-Achsen aufgespannten Ebene
            </summary>
        </member>
        <member name="T:KWEngine3.FontFace">
            <summary>
            Schriftart der HUD-Objekte
            </summary>
        </member>
        <member name="F:KWEngine3.FontFace.Anonymous">
            <summary>
            "Anonymous" (Standardschriftart)
            </summary>
        </member>
        <member name="F:KWEngine3.FontFace.MajorMonoDisplay">
            <summary>
            "Major Mono Display"
            </summary>
        </member>
        <member name="F:KWEngine3.FontFace.NovaMono">
            <summary>
            "Nova Mono"
            </summary>
        </member>
        <member name="F:KWEngine3.FontFace.XanhMono">
            <summary>
            "Xanh Mono"
            </summary>
        </member>
        <member name="T:KWEngine3.PostProcessingQuality">
            <summary>
            Aktivierung von Post-Processing-Effekten (Standard: hohe Qualität)
            </summary>
        </member>
        <member name="F:KWEngine3.PostProcessingQuality.High">
            <summary>
            Standard
            </summary>
        </member>
        <member name="F:KWEngine3.PostProcessingQuality.Low">
            <summary>
            Niedrige Qualität (Artefaktbildung möglich)
            </summary>
        </member>
        <member name="F:KWEngine3.PostProcessingQuality.Disabled">
            <summary>
            Ausgeschaltet
            </summary>
        </member>
        <member name="T:KWEngine3.CubeSide">
            <summary>
            Seite des KWCube
            </summary>
        </member>
        <member name="F:KWEngine3.CubeSide.All">
            <summary>
            Alle Würfelseiten
            </summary>
        </member>
        <member name="F:KWEngine3.CubeSide.Front">
            <summary>
            Frontseite (+Z)
            </summary>
        </member>
        <member name="F:KWEngine3.CubeSide.Back">
            <summary>
            Rückseite (-Z)
            </summary>
        </member>
        <member name="F:KWEngine3.CubeSide.Left">
            <summary>
            Links (-X)
            </summary>
        </member>
        <member name="F:KWEngine3.CubeSide.Right">
            <summary>
            Rechts (+X)
            </summary>
        </member>
        <member name="F:KWEngine3.CubeSide.Top">
            <summary>
            Oben (+Y)
            </summary>
        </member>
        <member name="F:KWEngine3.CubeSide.Bottom">
            <summary>
            Unten (-Y)
            </summary>
        </member>
        <member name="T:KWEngine3.TextureType">
            <summary>
            Art der Textur (Standard: Diffuse)
            </summary>
        </member>
        <member name="F:KWEngine3.TextureType.Albedo">
            <summary>
            Standardtextur
            </summary>
        </member>
        <member name="F:KWEngine3.TextureType.Normal">
            <summary>
            Normal Map
            </summary>
        </member>
        <member name="F:KWEngine3.TextureType.Metallic">
            <summary>
            Metallic Map (PBR Workflow)
            </summary>
        </member>
        <member name="F:KWEngine3.TextureType.Roughness">
            <summary>
            Roughness Map (PBR Workflow)
            </summary>
        </member>
        <member name="F:KWEngine3.TextureType.Emissive">
            <summary>
            Emissive Map
            </summary>
        </member>
        <member name="F:KWEngine3.TextureType.Transparency">
            <summary>
            Transparency Map
            </summary>
        </member>
        <member name="T:KWEngine3.Plane">
            <summary>
            Bezeichnet die beiden Achsen, die die gewünschte Ebene aufspannen.
            </summary>
        </member>
        <member name="F:KWEngine3.Plane.YZ">
            <summary>
            YZ
            </summary>
        </member>
        <member name="F:KWEngine3.Plane.XZ">
            <summary>
            XZ
            </summary>
        </member>
        <member name="F:KWEngine3.Plane.XY">
            <summary>
            XY
            </summary>
        </member>
        <member name="F:KWEngine3.Plane.Camera">
            <summary>
            Kamerablickebene
            </summary>
        </member>
        <member name="T:KWEngine3.Axis">
            <summary>
            Bezeichnet die Achse
            </summary>
        </member>
        <member name="F:KWEngine3.Axis.X">
            <summary>
            X
            </summary>
        </member>
        <member name="F:KWEngine3.Axis.Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="F:KWEngine3.Axis.Z">
            <summary>
            Z
            </summary>
        </member>
        <member name="F:KWEngine3.Axis.Camera">
            <summary>
            Kamerablickebene
            </summary>
        </member>
        <member name="T:KWEngine3.Exceptions.EngineException">
            <summary>
            Ausnahmefehlerklasse der Engine (noch nicht überall verwendet)
            </summary>
        </member>
        <member name="M:KWEngine3.Exceptions.EngineException.#ctor(System.String)">
            <summary>
            Standardkonstruktor
            </summary>
            <param name="msg">Fehlermeldung</param>
        </member>
        <member name="T:KWEngine3.Exceptions.GameObjectException">
            <summary>
            Ausnahmefehlerklasse für GameObject-Instanzen
            </summary>
        </member>
        <member name="M:KWEngine3.Exceptions.GameObjectException.#ctor(System.String)">
            <summary>
            Standardkonstruktor
            </summary>
            <param name="message">Fehlernachricht</param>
        </member>
        <member name="T:KWEngine3.GameObjects.EngineObject">
            <summary>
            Oberklasse aller GameObject- und RenderObject-Instanzen
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.Name">
            <summary>
            Names des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.IsDepthTesting">
            <summary>
            Setzt bzw. gibt an, ob das Objekt von anderen Objekten aufgrund der Entfernung zur Kamera verdeckt werden kann (Standard: true)
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.DisableBackfaceCulling">
            <summary>
            Gibt an, ob für das Objekt auch die der Kamera abgewandten Seiten gerendet werden sollen. Dies kann helfen, einseitige Meshes korrekt zu rendern.
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.IsShadowCaster">
            <summary>
            Gibt an, ob das Objekt Schatten werfen und empfangen kann (Standard: false)
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.IsAffectedByLight">
            <summary>
            Gibt an, ob das Objekt von Lichtquellen und dem Ambient Light beeinflusst wird (Standard: true)
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.IsInsideScreenSpace">
            <summary>
            Gibt an, ob sich das Objekt gerade auf dem Bildschirm befindet
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.CurrentWorld">
            <summary>
            Verweis auf die aktuelle Welt
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.Window">
            <summary>
            Verweis auf das Anwendungsfenster
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.SkipRender">
            <summary>
            Gibt an, ob das Objekt nicht gerendert werden soll
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.HasTransparencyTexture">
            <summary>
            Setzt manuell fest, ob das Objekt Texturen aufweist, die einen Alpha-Kanal besitzen
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.IsTransparent">
            <summary>
            Gibt an, ob das Objekt Transparenzanteile besitzt
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.IsInvisible">
            <summary>
            Gibt an, ob das Objekt gerade vollständig unsichtbar ist
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.Center">
            <summary>
            Mittelpunkt des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.Dimensions">
            <summary>
            Maße des Objekts (jeweils maximal)
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.AABBLow">
            <summary>
            Erfragt die auf der Y-Achse niedrigste Position des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.AABBLeft">
            <summary>
            Erfragt die auf der X-Achse linkste Position des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.AABBRight">
            <summary>
            Erfragt die auf der X-Achse rechteste Position des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.AABBHigh">
            <summary>
            Erfragt die auf der Y-Achse höchste Position des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.AABBBack">
            <summary>
            Erfragt die auf der Z-Achse hinterste Position des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.AABBFront">
            <summary>
            Erfragt die auf der Z-Achse vorderste Position des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.LookAtVector">
            <summary>
            (Normalisierter) Blickrichtungsvektor des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.LookAtVectorLocalUp">
            <summary>
            (Normalisierter) Lokaler Oben-Vektor des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.LookAtVectorLocalRight">
            <summary>
            (Normalisierter) Lokaler Rechts-Vektor des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.ApplicationTime">
            <summary>
            Anzahl der Sekunden, die die Anwendung bereits läuft
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.WorldTime">
            <summary>
            Anzahl der Sekunden, die die aktuelle Welt bereits läuft
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.Act">
            <summary>
            Abstrakte Methode die von jeder erbenden Klasse implementiert werden muss
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetModel(System.String)">
            <summary>
            Setzt das 3D-Modell des Objekts
            </summary>
            <param name="modelname">Name des 3D-Modells</param>
            <returns>true, wenn das Modell gesetzt werden konnte</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.ToString">
            <summary>
            Gibt den Namen des Objekts zurück
            </summary>
            <returns>Informationen zum Objekt</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.GetModelName">
            <summary>
            Erfragt den Namen des aktuell gesetzten 3D-Modells
            </summary>
            <returns>Modellname</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetOpacity(System.Single)">
            <summary>
            Setzt die Sichtbarkeit des Objekts (Standard: 1)
            </summary>
            <param name="o">Sichtbarkeit (0 bis 1)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetColor(System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Farbtönung des Objekts
            </summary>
            <param name="r">Rotanteil (zwischen 0 und 1)</param>
            <param name="g">Grünanteil (zwischen 0 und 1)</param>
            <param name="b">Blauanteil (zwischen 0 und 1)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetColorEmissive(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Setzt die selbstleuchtende Farbtönung des Objekts
            </summary>
            <param name="r">Rotanteil (zwischen 0 und 2)</param>
            <param name="g">Grünanteil (zwischen 0 und 2)</param>
            <param name="b">Blauanteil (zwischen 0 und 2)</param>
            <param name="intensity">Helligkeit (zwischen 0 und 10)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetMetallic(System.Single,System.Int32)">
            <summary>
            Setzt fest, wie metallisch das Objekt ist
            </summary>
            <param name="m">Metallwert (zwischen 0 und 1)</param>
            <param name="meshId">ID des zu ändernden Meshs/Materials (Standard: 0)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetMetallicType(KWEngine3.MetallicType)">
            <summary>
            Setzt die Art des Metalls
            </summary>
            <param name="type">Metalltyp</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetRoughness(System.Single,System.Int32)">
            <summary>
            Setzt die Rauheit der Objektoberfläche (Standard: 1)
            </summary>
            <param name="r">Rauheit (zwischen 0 und 1)</param>
            <param name="meshId">ID des zu ändernden Meshs/Materials (Standard: 0)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetTexture(System.String,KWEngine3.TextureType,System.Int32)">
            <summary>
            Setzt die Textur des Objekts
            </summary>
            <param name="filename">Dateiname der Textur (inkl. relativem Pfad)</param>
            <param name="type">Art der Textur (Standard: Albedo)</param>
            <param name="meshId">ID des 3D-Modellanteils (Standard: 0)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetTextureOffset(System.Single,System.Single)">
            <summary>
            Setzt die Texturverschiebung auf dem Objekt
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetTextureOffset(System.Single,System.Single,System.Int32)">
            <summary>
            Setzt die Texturverschiebung auf dem Objekt
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            /// <param name="meshId">ID des 3D-Modellanteils (Standard: 0)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetTextureClip(System.Single,System.Single)">
            <summary>
            Beschneidet den durch SetTextureRepeat() und SetTextureOffset() gewählten Texturteil weiter (für den Fall, dass z.B. Spritesheets einen zu großen Rand pro Zelle haben) 
            </summary>
            <param name="x">Beschneidung auf x-Achse (positiver Wert = Beschnitt nach innen, negativer Wert = Beschnitt nach außen)</param>
            <param name="y">Beschneidung auf y-Achse (positiver Wert = Beschnitt nach innen, negativer Wert = Beschnitt nach außen)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetTextureRepeat(System.Single,System.Single)">
            <summary>
            Setzt die Texturwiederholung auf dem Objekt (Standard: 1)
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetTextureRepeat(System.Single,System.Single,System.Int32)">
            <summary>
            Setzt die Texturwiederholung auf einem einzelnen Mesh eines Objekts (Standard: 1)
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="meshIndex">Nullbasierter Index des zu ändernden Meshs/Materials</param>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.TextureRepeat">
            <summary>
            Erfragt die aktuellen Werte für die Texturwiederholung
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.TextureOffset">
            <summary>
            Erfragt die aktuellen Werte für die Texturverschiebung
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetScale(System.Single)">
            <summary>
            Setzt die Größenskalierung des Objekts (muss > 0 sein)
            </summary>
            <param name="s">Skalierung</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.Move(System.Single)">
            <summary>
            Bewegt das Objekt in seiner Blickrichtung
            </summary>
            <param name="units">Bewegungseinheiten</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.MoveXZ(System.Single)">
            <summary>
            Bewegt das Objekt in seiner Blickrichtung (ohne Höhenunterschied)
            </summary>
            <param name="units">Bewegungseinheiten</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.MoveUp(System.Single)">
            <summary>
            Bewegt das Objekt entlang seines lokalen "Oben"-Vektors
            </summary>
            <param name="units">Bewegungseinheiten</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.MoveAlongVector(OpenTK.Mathematics.Vector3,System.Single)">
            <summary>
            Bewegt das Objekt um die gegebenen Einheiten entlang eines Vektors
            </summary>
            <param name="v">Richtungsvektor</param>
            <param name="units">Bewegungseinheiten</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.MoveOffset(System.Single,System.Single,System.Single)">
            <summary>
            Bewegt das Objekt entlang der drei Weltachsen
            </summary>
            <param name="x">Bewegungseinheiten in x-Richtung</param>
            <param name="y">Bewegungseinheiten in y-Richtung</param>
            <param name="z">Bewegungseinheiten in z-Richtung</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.MoveOffset(OpenTK.Mathematics.Vector3)">
            <summary>
            Bewegt das Objekt entlang der drei Weltachsen
            </summary>
            <param name="offset">Bewegungseinheiten in 3D</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetScale(OpenTK.Mathematics.Vector3)">
            <summary>
            Setzt die Skalierung der Instanz
            </summary>
            <param name="s">Skalierung in Reihenfolge X, Y, Z</param>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.Position">
            <summary>
            Position des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.Rotation">
            <summary>
            Rotation/Orientierung des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.Scale">
            <summary>
            Größe des Objekts
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetPosition(System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Position des Objekts
            </summary>
            <param name="x">Position auf x-Achse</param>
            <param name="y">Position auf y-Achse</param>
            <param name="z">Position auf z-Achse</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetPosition(OpenTK.Mathematics.Vector3)">
            <summary>
            Setzt die Position des Objekts
            </summary>
            <param name="position">Position in 3D</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetPositionX(System.Single)">
            <summary>
            Setzt die x-Position der Instanz auf den gegebenen Wert
            </summary>
            <param name="x">Positionswert</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetPositionY(System.Single)">
            <summary>
            Setzt die y-Position der Instanz auf den gegebenen Wert
            </summary>
            <param name="y">Positionswert</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetPositionZ(System.Single)">
            <summary>
            Setzt die z-Position der Instanz auf den gegebenen Wert
            </summary>
            <param name="z">Positionswert</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetRotation(System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Orientierung/Rotation des Objekts
            </summary>
            <param name="x">Rotation um lokale x-Achse in Grad</param>
            <param name="y">Rotation um lokale y-Achse in Grad</param>
            <param name="z">Rotation um lokale z-Achse in Grad</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.AddRotation(OpenTK.Mathematics.Quaternion)">
            <summary>
            Fügt die übergebene Rotation der bestehenden hinzu
            </summary>
            <param name="additionalRotation">hinzuzufügende Rotatation</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.AddRotationX(System.Single,System.Boolean)">
            <summary>
            Erhöht die Rotation um die x-Achse
            </summary>
            <param name="r">Grad</param>
            <param name="worldSpace">true, wenn um die Weltachse statt um die lokale Achse rotiert werden soll</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.AddRotationY(System.Single,System.Boolean)">
            <summary>
            Erhöht die Rotation um die y-Achse
            </summary>
            <param name="r">Grad</param>
            <param name="worldSpace">true, wenn um die Weltachse statt um die lokale Achse rotiert werden soll</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.AddRotationZ(System.Single,System.Boolean)">
            <summary>
            Erhöht die Rotation um die z-Achse
            </summary>
            <param name="r">Grad</param>
            <param name="worldSpace">true, wenn um die Weltachse statt um die lokale Achse rotiert werden soll</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetRotation(OpenTK.Mathematics.Quaternion)">
            <summary>
            Setzt die Rotation mit Hilfe eines Quaternion-Objekts
            </summary>
            <param name="rotation">Rotation</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetScale(System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Größenskalierung des Objekts entlang seiner lokalen drei Achsen
            </summary>
            <param name="x">Skalierung in x-Richtung</param>
            <param name="y">Skalierung in y-Richtung</param>
            <param name="z">Skalierung in z-Richtung</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.GetRotationToTarget(OpenTK.Mathematics.Vector3)">
            <summary>
            Erfragt die Rotation, die zu einem bestimmten Ziel notwendig wäre
            </summary>
            <param name="target">Ziel</param>
            <returns>Rotation (als Quaternion)</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.TurnTowardsXYZ(OpenTK.Mathematics.Vector3)">
            <summary>
            Dreht das Objekt, so dass es zur Zielkoordinate blickt
            </summary>
            <param name="target">Zielkoordinate</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.AdjustRotationToCameraRotation">
            <summary>
            Gleicht die Rotation der Instanz an die der Kamera an
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.TurnTowardsXY(System.Single,System.Single)">
            <summary>
            Dreht das Objekt, so dass es zur Zielkoordinate blickt
            </summary>
            <param name="targetX">X-Koordinate</param>
            <param name="targetY">Y-Koordinate</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.TurnTowardsXY(OpenTK.Mathematics.Vector3)">
            <summary>
            Verändert die Rotation der Instanz, so dass sie in Richtung der XY-Koordinaten blickt. Z-Unterschiede Unterschiede werden ignoriert.
            [Geeignet, wenn die Kamera entlang der z-Achse blickt (Standard)]
            </summary>
            <param name="target">Zielkoordinaten</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.TurnTowardsXZ(System.Single,System.Single)">
            <summary>
            Verändert die Rotation der Instanz, so dass sie in Richtung der XZ-Koordinaten blickt. Vertikale Unterschiede werden ignoriert.
            (Geeignet, wenn die Kamera entlang der y-Achse blickt)
            </summary>
            <param name="targetX">Zielkoordinate der x-Achse</param>
            <param name="targetZ">Zielkoordinate der z-Achse</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.TurnTowardsXZ(OpenTK.Mathematics.Vector3)">
            <summary>
            Verändert die Rotation der Instanz, so dass sie in Richtung der XZ-Koordinaten blickt. Vertikale Unterschiede werden ignoriert.
            (Geeignet, wenn die Kamera entlang der y-Achse blickt)
            </summary>
            <param name="target">Zielkoordinaten</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.GetRotationEulerAngles">
            <summary>
            Konvertiert die aktuelle Rotation in Gradangaben für jede der drei Weltachsen
            </summary>
            <returns>Gradangaben für die aktuelle Rotation des Objekts um die x-, y- und z-Achse</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetRotationToMatchSurfaceNormal(OpenTK.Mathematics.Vector3)">
            <summary>
            Setzt die Rotation passend zum übergebenen Ebenenvektor (surface normal), um z.B. das Objekt zu kippen, wenn es auf einer Schräge steht.
            </summary>
            <param name="surfaceNormal">Ebenenvektor</param>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.IsAnimated">
            <summary>
            Gibt an, ob das Objekt gerade eine Animation ausgewählt hat
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.EngineObject.HasAnimations">
            <summary>
            Gibt an, ob das Objekt über Animationen verfügt
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetAnimationID(System.Int32)">
            <summary>
            Setzt die Animationsnummer des Objekts (muss >= 0 sein)
            </summary>
            <param name="id">ID</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetAnimationPercentage(System.Single)">
            <summary>
            Setzt den Stand der Animation zwischen 0% und 100% (0 bis 1)
            </summary>
            <param name="p">Stand (Werte zwischen 0 und 1)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.EngineObject.SetAnimationPercentageAdvance(System.Single)">
            <summary>
            Führt die Animation um einen gegebenen Teil fort
            </summary>
            <param name="p">relativer Fortschritt der Animation</param>
        </member>
        <member name="T:KWEngine3.GameObjects.ExplosionObject">
            <summary>
            Explosionsklasse
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.ExplosionObject.Position">
            <summary>
            Position der Explosion
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.ExplosionObject.ColorEmissive">
            <summary>
            Glühfarbe der Explosion
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.ExplosionObject.SetColorEmissive(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Glühfarbe der Explosionspartikel
            </summary>
            <param name="red">Rot (0 bis 2)</param>
            <param name="green">Grün (0 bis 2)</param>
            <param name="blue">Blau (0 bis 2)</param>
            <param name="intensity">Helligkeit (0 bis 10)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ExplosionObject.SetPosition(System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Position des Objekts
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="z">z</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ExplosionObject.SetPosition(OpenTK.Mathematics.Vector3)">
            <summary>
            Setzt die Position des Objekts
            </summary>
            <param name="position">Position</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ExplosionObject.SetRadius(System.Single)">
            <summary>
            Setzt den Explosionsradius
            </summary>
            <param name="radius">Radius</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ExplosionObject.SetParticleSize(System.Single)">
            <summary>
            Setzt die Partikelgröße
            </summary>
            <param name="size">Größe je Partikel</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ExplosionObject.SetAlgorithm(KWEngine3.ExplosionAnimation)">
            <summary>
            Setzt den Bewegungsalgorithmus der Partikel
            </summary>
            <param name="e">Algorithmustyp</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ExplosionObject.#ctor(System.Int32,System.Single,System.Single,System.Single,KWEngine3.ExplosionType)">
            <summary>
            Explosionskonstruktormethode
            </summary>
            <param name="particleCount">Anzahl der Partikel</param>
            <param name="particleSize">Größe der Partikel</param>
            <param name="explosionRadius">Radius der Explosion</param>
            <param name="durationInSeconds">Dauer der Explosion in Sekunden</param>
            <param name="type">Art der Explosion</param>
        </member>
        <member name="T:KWEngine3.GameObjects.FoliageObject">
            <summary>
            Klasse für Bodengewächse (z.B. Gras)
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.FoliageObject.#ctor(KWEngine3.FoliageType)">
            <summary>
            Konstruktormethode für das Bodengewächs mit einer Instanz
            </summary>
            <param name="type">Art des Gewächses</param>
        </member>
        <member name="M:KWEngine3.GameObjects.FoliageObject.#ctor(KWEngine3.FoliageType,System.Int32)">
            <summary>
            Konstruktormethode für das Bodengewächs mit mehreren Instanzen
            </summary>
            <param name="type">Art des Gewächses</param>
            <param name="instanceCount">Anzahl der Instanzen (Werte zwischen 1 und 262144)</param>
        </member>
        <member name="P:KWEngine3.GameObjects.FoliageObject.Name">
            <summary>
            Name des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.FoliageObject.Type">
            <summary>
            Art des Bodengewächses
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.FoliageObject.IsInsideScreenSpace">
            <summary>
            Gibt an, ob sich das Objekt im Sichtbereich der Kamera befindet
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.FoliageObject.Color">
            <summary>
            Gibt die Tönung und Leuchtkraft des Bodengewächses an
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.FoliageObject.Position">
            <summary>
            Gibt die Position des Bodengewächses an
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.FoliageObject.Roughness">
            <summary>
            Gibt die aktuelle Rauheit der Gewächsoberfläche an
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.FoliageObject.PatchSize">
            <summary>
            Gibt die Ausweitung des Gewächses an
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.FoliageObject.FoliageCount">
            <summary>
            Gibt die Anzahl der für das Gewächs gerenderten Instanzen zurück
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.FoliageObject.IsShadowReceiver">
            <summary>
            Gibt an, ob Schatten auf das Objekt geworfen werden können (Standard: true)
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.FoliageObject.IsAffectedByLight">
            <summary>
            Gibt an, ob dieses Objekt auf Licht reagiert (Standard: true)
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.FoliageObject.IsSizeReducedAtCorners">
            <summary>
            Gibt an, ob die Gewächsbestandteile zum Rand der Gewächsfläche in ihrer Größe verringert werden (Standard: true)
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.FoliageObject.SetInstanceCount(System.Int32)">
            <summary>
            Setzt die (ungefähre) Anzahl an benötigten Instanzen für das Gewächs
            </summary>
            <param name="instanceCount">Anzahl der gewünschten Instanzen</param>
        </member>
        <member name="M:KWEngine3.GameObjects.FoliageObject.SetSwayFactor(System.Single)">
            <summary>
            Gibt an, wie stark das Gras sich im Wind wiegt
            </summary>
            <param name="swayFactor">Verstärkungsfaktor (Werte zwischen 0 und 1, Standard: 0.05f)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.FoliageObject.SetRoughness(System.Single)">
            <summary>
            Gibt an, wie rau die Oberfläche des Gewächses ist (0f = glatt, 1f = rau)
            </summary>
            <param name="r">Grad der Rauheit</param>
        </member>
        <member name="M:KWEngine3.GameObjects.FoliageObject.SetColor(OpenTK.Mathematics.Vector4)">
            <summary>
            Setzt die Tönung und Leuchtkraft des Bodengewächses
            </summary>
            <param name="color">Tönung (RGB zwischen 0 und 1) und Leuchtkraft (zwischen 0 und 8, Standardwert: 0)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.FoliageObject.SetPosition(OpenTK.Mathematics.Vector3)">
            <summary>
            Setzt die Position des Gewächsmittelpunkts
            </summary>
            <param name="position">neue Position</param>
        </member>
        <member name="M:KWEngine3.GameObjects.FoliageObject.SetPosition(System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Position des Gewächsmittelpunkts
            </summary>
            <param name="x">neue X-Position</param>
            <param name="y">neue Y-Position</param>
            <param name="z">neue Z-Position</param>
        </member>
        <member name="M:KWEngine3.GameObjects.FoliageObject.SetColor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Tönung und Leuchtkraft des Bodengewächses
            </summary>
            <param name="r">Rotanteil (zwischen 0 und 1)</param>
            <param name="g">Rotanteil (zwischen 0 und 1)</param>
            <param name="b">Rotanteil (zwischen 0 und 1)</param>
            <param name="intensity">Leuchtkraft (zwischen 0 und 8, Standardwert: 0)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.FoliageObject.SetPatchSize(System.Single,System.Single)">
            <summary>
            Setzt die Fläche um die Position, auf die Bodengewächsinstanzen verteilt werden
            </summary>
            <param name="x">Ausbreitung in der Breite (Minimum: 1f, Maximum 1024f)</param>
            <param name="z">Ausbreitung in der Tiefe (Minimum: 1f,  Maximum 1024f)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.FoliageObject.SetScale(System.Single,System.Single,System.Single)">
            <summary>
            Gibt die Größe je Gewächsteil an(Standardwert: 1)
            </summary>
            <param name="width">Breite eines einzelnes Gewächsteils (muss positiv sein)</param>
            <param name="height">Höhe eines einzelnes Gewächsteils (muss positiv sein)</param>
            <param name="depth">Tiefe eines einzelnes Gewächsteils (muss positiv sein)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.FoliageObject.SetScale(System.Single)">
            <summary>
            Gibt die Größe je Gewächsteil an (Standardwert: 1)
            </summary>
            <param name="s">Skalierungsfaktor</param>
        </member>
        <member name="M:KWEngine3.GameObjects.FoliageObject.SetScale(OpenTK.Mathematics.Vector3)">
            <summary>
            Gibt die Größe je Gewächsteil an (Standardwert: 1)
            </summary>
            <param name="s">Skalierung (jede Vektorkomponente muss positiv sein, Maximalwert: 4096)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.FoliageObject.AttachToTerrain(KWEngine3.GameObjects.TerrainObject)">
            <summary>
            Richtet das Gewächs bzgl. seiner Höhe am übergebenen Terrain aus
            </summary>
            <param name="t">Terrain-Objekt, an dem sich das Gewächs orientieren soll</param>
        </member>
        <member name="M:KWEngine3.GameObjects.FoliageObject.DetachFromTerrain">
            <summary>
            Löst die Bindung zum aktuell festgelegten Terrain-Objekt
            </summary>
        </member>
        <member name="T:KWEngine3.GameObjects.GameObject">
            <summary>
            GameObject-Klasse
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.GameObject.ID">
            <summary>
            Interne ID des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.GameObject.FlowFieldCost">
            <summary>
            Gibt die Kosten dieser Instanz auf einem (optionalen) Flowfield an (1 = kein Hindernis, 255 = unüberwindbares Hindernis; Standardwert: 1)
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.GameObject.IsCollisionObject">
            <summary>
            Gibt an, ob das Objekt ein Kollisionen erzeugen und überprüfen kann
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.ResetColliderModel">
            <summary>
            Löscht ein ggf. verwendetes benutzerdefiniertes Collider-Modell für die aktuelle Instanz
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.SetColliderModel(System.String)">
            <summary>
            Setzt ein benutzerdefiniertes Collider-Modell für die GameObject-Instanz (muss zuvor via KWEngine.LoadModelCollider() importiert worden sein)
            </summary>
            <param name="colliderModelName">Name des Collider-Modells</param>
        </member>
        <member name="P:KWEngine3.GameObjects.GameObject.UpdateLast">
            <summary>
            Gibt an, ob das Objekt in der Liste aller Objekte zuletzt aktualisiert werden soll (z.B. für Spielerfiguren)
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.#ctor">
            <summary>
            Standardkonstruktor (erzeugt mit einem Würfel als 3D-Modell)
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.#ctor(System.String)">
            <summary>
            Konstruktormethode, der der 3D-Modellname mitgegeben werden kann
            </summary>
            <param name="modelname">Name des zu verwendenden 3D-Modells</param>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.GetOBBBottom">
            <summary>
            Erfragt die gemittelte Bodenposition der (ggf. rotierten) Objekt-Hitbox
            </summary>
            <returns>Bodenposition (Mittelwert)</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.GetOBBTop">
            <summary>
            Erfragt die gemittelte Kopfposition der (ggf. rotierten) Objekt-Hitbox
            </summary>
            <returns>Kopfposition (Mittelwert)</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.SetPosition(System.Single,System.Single,System.Single,KWEngine3.PositionMode)">
            <summary>
            Setzt die Position des Objekts
            </summary>
            <param name="x">Position auf x-Achse</param>
            <param name="y">Position auf y-Achse</param>
            <param name="z">Position auf z-Achse</param>
            <param name="mode">Bestimmt, auf welchen Fixpunkt des Objekts sich die Positionsangaben beziehen sollen</param>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.SetPosition(OpenTK.Mathematics.Vector3,KWEngine3.PositionMode)">
            <summary>
            Setzt die Position des Objekts
            </summary>
            <param name="position">Position auf XYZ-Achse</param>
            <param name="mode">Bestimmt, auf welchen Fixpunkt des Objekts sich die Positionsangaben beziehen sollen</param>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.SetPositionY(System.Single,KWEngine3.PositionMode)">
            <summary>
            Setzt die y-Position der Instanz auf den gegebenen Wert
            </summary>
            <param name="y">Position auf y-Achse</param>
            <param name="mode">Bestimmt, auf welchen Fixpunkt des Objekts sich die Positionsangaben beziehen sollen</param>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.RaytraceTerrainBelowPosition(OpenTK.Mathematics.Vector3)">
            <summary>
            Prüft auf eine Strahlenkollision mit einem Terrain-Objekt direkt unterhalb der angegebenen Position
            </summary>
            <param name="position">Startposition des nach unten gerichteten Teststrahls</param>
            <returns>Ergebnis der Strahlenkollisionsmessung</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.RaytraceTerrainBelowPositionExt(OpenTK.Mathematics.Vector3,KWEngine3.RayMode,System.Single)">
            <summary>
            Prüft auf eine Strahlenkollision mit einem Terrain-Objekt direkt unterhalb der angegebenen Position
            </summary>
            <param name="position">Startposition des nach unten gerichteten Teststrahls</param>
            <param name="rayMode">Art der Messung (Standard: SingleY)</param>
            <param name="sizeFactor">Skalierungsfaktor der Strahlen (falls mehrere Strahlen verwendet werden)</param>
            <returns>Ergebnis der Strahlenkollisionsmessung</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.GetIntersection(KWEngine3.IntersectionTestMode)">
            <summary>
            Prüft, ob das Objekt gerade mit anderen Objekten kollidiert und gibt die erstbeste Kollision zurück
            </summary>
            <param name="mode">Gibt an, ob die Kollisionsmessung auf einen bestimmten Hitboxtyp eingegrenzt werden soll (Standard: CheckAllHitboxTypes)</param>
            <returns>zuerst gefundene Kollision (kann null sein)</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.GetIntersection``1(KWEngine3.IntersectionTestMode)">
            <summary>
            Prüft, ob das Objekt gerade mit anderen Objekten eines bestimmten Typs kollidiert und gibt die erstbeste Kollision zurück
            </summary>
            <typeparam name="T">(Basis-)Klasse der zu untersuchenden Objekte</typeparam>
            <param name="mode">Gibt an, ob die Kollisionsmessung auf einen bestimmten Hitboxtyp eingegrenzt werden soll (Standard: CheckAllHitboxTypes)</param>
            <returns>zuerst gefundene Kollision (kann null sein)</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.GetIntersections(KWEngine3.IntersectionTestMode)">
            <summary>
            Prüft auf Kollisionen mit umgebenden GameObject-Instanzen
            </summary>
            <param name="mode">Gibt an, ob die Kollisionsmessung auf einen bestimmten Hitboxtyp eingegrenzt werden soll (Standard: CheckAllHitboxTypes)</param>
            <returns>Liste mit gefundenen Kollisionen</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.GetIntersections(OpenTK.Mathematics.Vector3,KWEngine3.IntersectionTestMode)">
            <summary>
            Prüft auf Kollisionen mit umgebenden GameObject-Instanzen
            </summary>
            <param name="offset">Optionale Verschiebung der Hitbox</param>
            <param name="mode">Gibt an, ob die Kollisionsmessung auf einen bestimmten Hitboxtyp eingegrenzt werden soll (Standard: CheckAllHitboxTypes)</param>
            <returns>Liste mit gefundenen Kollisionen</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.GetIntersections``1(KWEngine3.IntersectionTestMode)">
            <summary>
            Prüft auf Kollisionen mit umgebenden GameObject-Instanzen eines bestimmten Typs
            </summary>
            <typeparam name="T">(Basis-)Klasse der zu prüfenden Instanzen</typeparam>
            <param name="mode">Gibt an, ob die Kollisionsmessung auf einen bestimmten Hitboxtyp eingegrenzt werden soll (Standard: CheckAllHitboxTypes)</param>
            <returns>Liste mit gefundenen Kollisionen</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.GetIntersections``1(OpenTK.Mathematics.Vector3,KWEngine3.IntersectionTestMode)">
            <summary>
            Prüft auf Kollisionen mit umgebenden GameObject-Instanzen eines bestimmten Typs
            </summary>
            <param name="offset">Optionale Verschiebung der Hitbox</param>
            <param name="mode">Gibt an, ob die Kollisionsmessung auf einen bestimmten Hitboxtyp eingegrenzt werden soll (Standard: CheckAllHitboxTypes)</param>
            <typeparam name="T">(Basis-)Klasse der zu prüfenden Instanzen</typeparam>
            <returns>Liste mit gefundenen Kollisionen</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.IsMouseCursorInsideMyHitbox">
            <summary>
            Erfragt, ob der Mauszeiger auf der Hitbox des Objekts liegt
            </summary>
            <returns>true, wenn sich der Mauszeiger innerhalb der Hitbox des Objekts befindet</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.GetDistanceTo(OpenTK.Mathematics.Vector3,System.Boolean)">
            <summary>
            Misst die Distanz zu einem Punkt
            </summary>
            <param name="position">Zielpunkt</param>
            <param name="absolute">wenn true, wird die Position-Eigenschaft verwendet, andernfalls die Hitbox-Mitte</param>
            <returns>Distanz</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.GetDistanceTo(KWEngine3.GameObjects.GameObject,System.Boolean)">
            <summary>
            Misst die Distanz zu einem GameObject
            </summary>
            <param name="g">GameObject-Instanz</param>
            <param name="absolute">wenn true, wird die Position-Eigenschaft verwendet, andernfalls die Hitbox-Mitte</param>
            <returns>Distanz</returns>
        </member>
        <member name="P:KWEngine3.GameObjects.GameObject.Keyboard">
            <summary>
            Verweis auf die Keyboard-Aktivitäten
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.GameObject.Mouse">
            <summary>
            Verweis auf die Mausaktivitäten
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.GameObject.MouseMovement">
            <summary>
            Gibt die Strecke an, die der Mauszeiger seit der letzten Überprüfung zurückgelegt hat
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.SetHitboxScale(System.Single)">
            <summary>
            Setzt die Größenskalierung der Objekt-Hitbox (muss > 0 sein)
            </summary>
            <param name="s">Skalierung</param>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.SetHitboxScale(System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Größenskalierung der Objekt-Hitbox (muss > 0 sein)
            </summary>
            <param name="x">Skalierung in lokale x-Richtung</param>
            <param name="y">Skalierung in lokale x-Richtung</param>
            <param name="z">Skalierung in lokale x-Richtung</param>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.MoveAndStrafeAlongCamera(System.Int32,System.Int32,System.Single)">
            <summary>
            Bewegt das Objekt entlang der Blickrichtung der Kamera
            </summary>
            <param name="move">1 = Vorwärts, -1 = Rückwärts</param>
            <param name="strafe">1 = Rechts, -1 = Links</param>
            <param name="units">Bewegungseinheiten</param>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.MoveAndStrafeAlongCameraXZ(System.Int32,System.Int32,System.Single)">
            <summary>
            Bewegt das Objekt entlang der Blickrichtung der Kamera (ohne Höhenunterschied)
            </summary>
            <param name="move">1 = Vorwärts, -1 = Rückwärts</param>
            <param name="strafe">1 = Rechts, -1 = Links</param>
            <param name="units">Bewegungseinheiten</param>
        </member>
        <member name="P:KWEngine3.GameObjects.GameObject.IsAttachedToGameObject">
            <summary>
            Gibt an, ob dieses Objekt an einem anderen Objekt angeheftet wurde
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.IsLookingAt(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Prüft, ob das Objekt in Richtung des gegebenen Punkts blickt
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="z">z</param>
            <param name="diameter">Durchmesser um den Punkt</param>
            <param name="offsetY">(optionale) y-Verschiebung der Blickrichtung</param>
            <returns>true, wenn die aktuelle Blickrichtung den Punkt inkl. Durchmesser schneidet</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.IsLookingAt(OpenTK.Mathematics.Vector3,System.Single,System.Single)">
            <summary>
            Prüft, ob das Objekt in Richtung des gegebenen Punkts blickt
            </summary>
            <param name="target">Zielposition</param>
            <param name="diameter">Durchmesser um das Ziel</param>
            <param name="offsetY">(optionale) y-Verschiebung der Blickrichtung</param>
            <returns>true, wenn die aktuelle Blickrichtung den Punkt inkl. Durchmesser schneidet</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.AttachGameObjectToBone(KWEngine3.GameObjects.GameObject,System.String)">
            <summary>
            Bindet eine andere GameObject-Instanz an den jeweiligen Knochen des aktuell verwendeten Modells
            </summary>
            <param name="g">Anzuhängende Instanz</param>
            <param name="boneName">Name des Knochens, an den die Instanz angehängt werden soll</param>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.DetachGameObjectFromBone(System.String)">
            <summary>
            Entfernt die Bindung (Attachment) einer GameObject-Instanz 
            </summary>
            <param name="boneName">Name des Knochens</param>
            <returns>Wenn der Vorgang erfolgreich ist, ist der Rückgabewert die abgekoppelte Instanz (andernfalls wird null zurückgegeben)</returns>
        </member>
        <member name="P:KWEngine3.GameObjects.GameObject.HasAttachedGameObjects">
            <summary>
            Liefert true, wenn mind. eine GameObject-Instanz an einen Knochen des aufrufenden Objekts gebunden ist
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.GetBoneNamesForAttachedGameObject">
            <summary>
            Liefert eine Liste der Knochennamen, an die aktuell eine andere GameObject-Instanz gebunden ist
            </summary>
            <returns>Liste der verwendeten Knochennamen (für Attachments)</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.GetGameObjectThatIAmAttachedTo">
            <summary>
            Liefert die Referenz auf das Objekt, an das die aktuelle Instanz gebunden ist
            </summary>
            <returns>GameObject, an das die Instanz (via Knochen) gebunden ist</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.GetAttachedGameObjectForBone(System.String)">
            <summary>
            Liefert die an einen Knochen gebundene GameObject-Instanz
            </summary>
            <param name="boneName">Knochenname</param>
            <returns>Gebundene GameObject-Instanz</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.CompareTo(KWEngine3.GameObjects.GameObject)">
            <summary>
            Vergleicht das Objekt bzgl. seiner Entfernung zur Kamera mit einem anderen Objekt
            </summary>
            <param name="other">anderes GameObjekt</param>
            <returns>1, wenn das aufrufende Objekt näher an der Kamera ist, sonst -1</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.SetHitboxToCapsule(System.Boolean,KWEngine3.CapsuleHitboxType)">
            <summary>
            Ersetzt die eigentliche Hitbox-Form mit der für Spielfiguren gängigen Kapselform
            </summary>
            <param name="adjustFootLevelToZero">Legt die Höhe der Unterkante stets auf Y=0 fest (wenn true)</param>
            <param name="type">Variation der Kapsel</param>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.SetHitboxToCapsule(System.Single,System.Single,System.Single,OpenTK.Mathematics.Vector3,KWEngine3.CapsuleHitboxType)">
            <summary>
            Ersetzt die eigentliche Hitbox-Form mit der für Spielfiguren gängigen Kapselform
            </summary>
            <param name="width">Breite der Kapsel (X-Achse)</param>
            <param name="height">Höhe der Kapsel (Y-Achse)</param>
            <param name="depth">Tiefe der Kapsel (Z-Achse)</param>
            <param name="offset">Verschiebung der Kapsel</param>
            <param name="type">Variation der Kapsel</param>
        </member>
        <member name="P:KWEngine3.GameObjects.GameObject.AnimationPercentage">
            <summary>
            Gibt Auskunft über den Prozentwert der aktuell gewählten Animation (Werte zwischen 0f und 1f)
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.GameObject.AnimationID">
            <summary>
            Gibt an, welche Animations-ID für diese Instanz aktuell gewählt ist. Beträgt der Wert -1, ist keine Animation gewählt.
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.GameObject.BlendTextureStates">
            <summary>
            Gibt an, ob Änderungen an TextureOffset-Werten für die Render-Phase interpoliert werden (Standard: true) 
            (für 2D-Objekte mit Spritesheet-Animationen sollte dieser Wert auf 'false' gesetzt werden)
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.RaytraceObjectsNearby(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Type[])">
            <summary>
            Schießt einen Strahl von der angegebenen Position in die angegebene Richtung und prüft, ob dieser Strahl in der Nähe liegende Objekte des angegebenen Typs trifft (Präzise, aber langsam!)
            </summary>
            <remarks>Es werden nur Objekte in unmittelbarer Nähe betrachtet. Die Strahlenlänge hängt von dem globalen Wert KWEngine.SweepAndPruneTolerance ab</remarks>
            <example>
            <code>
            List&lt;RayIntersectionExt&gt; results = RaytraceObjectsNearby(new Vector3(0, 2, 0), -Vector3.UnitY, typeof(Floor), typeof(Wall));
            </code>
            </example>
            <param name="rayOrigin">Startpunkt des Strahls</param>
            <param name="rayDirectionNormalized">Normalisierter Richtungsvektor des Strahls (z.B. -Vector3.UnitY für einen Strahl nach unten)</param>
            <param name="typelist">Liste der Typen (Klassen), die für den Strahl getestet werden sollen</param>
            <returns>Nach Entfernung aufsteigend sortierte Liste der Messergebnisse</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.RaytraceObjectsNearby(System.Single,System.Single,System.Single,OpenTK.Mathematics.Vector3,System.Type[])">
            <summary>
            Schießt einen Strahl von der angegebenen Position in die angegebene Richtung und prüft, ob dieser Strahl in der Nähe liegende Objekte des angegebenen Typs trifft (Präzise, aber langsam!)
            </summary>
            <remarks>Es werden nur Objekte in unmittelbarer Nähe betrachtet. Die Strahlenlänge hängt von dem globalen Wert KWEngine.SweepAndPruneTolerance ab</remarks>
            <example>
            <code>
            List&lt;RayIntersectionExt&gt; results = RaytraceObjectsNearby(0, 2, 0, -Vector3.UnitY, typeof(Floor), typeof(Wall));
            </code>
            </example>
            <param name="rayPositionX">X-Komponente des Strahlstartpunkts</param>
            <param name="rayPositionY">Y-Komponente des Strahlstartpunkts</param>
            <param name="rayPositionZ">Z-Komponente des Strahlstartpunkts</param>    
            <param name="rayDirectionNormalized">Normalisierter Richtungsvektor des Strahls (z.B. -Vector3.UnitY für einen Strahl nach unten)</param>
            <param name="typelist">Liste der Typen (Klassen), die für den Strahl getestet werden sollen</param>
            <returns>Nach Entfernung aufsteigend sortierte Liste der Messergebnisse</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.RaytraceObjectsBelowPosition(KWEngine3.RayMode,System.Single,System.Single,System.Single,System.Type[])">
            <summary>
            Schießt mehrere Strahlen von der Mitte der Instanz nach unten und prüft, ob diese Strahlen in der Nähe liegende Objekte des angegebenen Typs treffen (Präzise, aber langsamer!)
            </summary>
            <param name="rayMode">Richtung und Anzahl der Teststrahlen</param>
            <param name="sizeFactor">Wenn mehrere Strahlen gewählt sind, werden diese innerhalb der Hitbox des Aufrufers gemäß dieses Faktors verteilt. Ist der Faktor 1, befinden sich die Strahlen an den Hitboxrändern. Ist er größer, befinden sich die Strahlen außerhalb der Hitbox. Ist der Faktor kleiner als 1, befinden sich die Strahlen weiter innerhalb der Hitbox</param>
            <param name="minDistance">Trifft ein Strahl ein Objekt, wird es als Ergebnis verworfen, wenn die Strahlendistanz kleiner als die angegebene Distanz ist (abhängig von der Größe des Aufrufers)</param>
            <param name="maxDistance">Trifft ein Strahl ein Objekt, wird es als Ergebnis verworfen, wenn die Strahlendistanz größer als die angegebene Distanz ist (abhängig von der Größe des Aufrufers)</param>
            <param name="typelist">Liste der Typen (Klassen), die für den Strahl getestet werden sollen</param>
            <returns>Ergebnis des Strahlentests</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.RaytraceObjectsNearbyFast(System.Single,System.Single,System.Single,OpenTK.Mathematics.Vector3,System.Type[])">
            <summary>
            Schießt einen Strahl von der angegebenen Position in die angegebene Richtung und prüft, ob dieser Strahl in der Nähe liegende Objekte des angegebenen Typs trifft
            </summary>
            <remarks>Es werden nur Objekte in der Nähe betrachtet. Die Strahlenlänge hängt von dem globalen Wert KWEngine.SweepAndPruneTolerance ab</remarks>
            <example>
            <code>
            List&lt;RayIntersection&gt; results = RaytraceObjectsNearbyFast(0, 2, 0, -Vector3.UnitY, typeof(Floor), typeof(Wall));
            </code>
            </example>
            <param name="rayPositionX">X-Komponente des Strahlstartpunkts</param>
            <param name="rayPositionY">Y-Komponente des Strahlstartpunkts</param>
            <param name="rayPositionZ">Z-Komponente des Strahlstartpunkts</param>        
            <param name="rayDirectionNormalized">Normalisierter Richtungsvektor des Strahls (z.B. -Vector3.UnitY für einen Strahl nach unten)</param>
            <param name="typelist">Liste der Typen (Klassen), die für den Strahl getestet werden sollen</param>
            <returns>Nach Entfernung aufsteigend sortierte Liste der Messergebnisse</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.RaytraceObjectsNearbyFast(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Type[])">
            <summary>
            Schießt einen Strahl von der angegebenen Position in die angegebene Richtung und prüft, ob dieser Strahl in der Nähe liegende Objekte des angegebenen Typs trifft
            </summary>
            <remarks>Es werden nur Objekte in der Nähe betrachtet. Die Strahlenlänge hängt von dem globalen Wert KWEngine.SweepAndPruneTolerance ab</remarks>
            <example>
            <code>
            List&lt;RayIntersection&gt; results = RaytraceObjectsNearbyFast(new Vector3(0, 2, 0), -Vector3.UnitY, typeof(Floor), typeof(Wall));
            </code>
            </example>
            <param name="rayOrigin">Startpunkt des Strahls</param>
            <param name="rayDirectionNormalized">Normalisierter Richtungsvektor des Strahls (z.B. -Vector3.UnitY für einen Strahl nach unten)</param>
            <param name="typelist">Liste der Typen (Klassen), die für den Strahl getestet werden sollen</param>
            <returns>Nach Entfernung aufsteigend sortierte Liste der Messergebnisse</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.RaytraceObjectsNearbyFast(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Schießt einen Strahl von der angegebenen Position in die angegebene Richtung und prüft, ob dieser Strahl in der Nähe liegende Objekt trifft
            </summary>
            <remarks>Es werden nur Objekte in der Nähe betrachtet. Die Strahlenlänge hängt von dem globalen Wert KWEngine.SweepAndPruneTolerance ab</remarks>
            <example>
            <code>
            List&lt;RayIntersection&gt; results = RaytraceObjectsNearbyFast(new Vector3(0, 2, 0), -Vector3.UnitY);
            </code>
            </example>
            <param name="rayOrigin">Startpunkt des Strahls</param>
            <param name="rayDirectionNormalized">Normalisierter Richtungsvektor des Strahls (z.B. -Vector3.UnitY für einen Strahl nach unten)</param>
            <returns>Nach Entfernung aufsteigend sortierte Liste der Messergebnisse</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.RaytraceObjectsNearbyFast(System.Single,System.Single,System.Single,OpenTK.Mathematics.Vector3)">
            <summary>
            Schießt einen Strahl von der angegebenen Position in die angegebene Richtung und prüft, ob dieser Strahl in der Nähe liegende Objekt trifft
            </summary>
            <remarks>Es werden nur Objekte in unmittelbarer Nähe betrachtet. Die Strahlenlänge hängt von dem globalen Wert KWEngine.SweepAndPruneTolerance ab</remarks>
            <example>
            <code>
            List&lt;RayIntersection&gt; results = RaytraceObjectsNearbyFast(0, 2, 0, -Vector3.UnitY);
            </code>
            </example>
            <param name="rayPositionX">X-Komponente des Strahlstartpunkts</param>
            <param name="rayPositionY">Y-Komponente des Strahlstartpunkts</param>
            <param name="rayPositionZ">Z-Komponente des Strahlstartpunkts</param>
            <param name="rayDirectionNormalized">Normalisierter Richtungsvektor des Strahls (z.B. -Vector3.UnitY für einen Strahl nach unten)</param>
            <returns>Nach Entfernung aufsteigend sortierte Liste der Messergebnisse</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.RemoveHitbox(System.Int32)">
            <summary>
            Löscht eine Hitbox mit dem gegebenen Index für die aktuelle Instanz
            </summary>
            <param name="hitboxIndex">Index der Hitbox</param>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.SetModel(System.String)">
            <summary>
            Setzt das 3D-Modell des Objekts
            </summary>
            <param name="modelname">Name des 3D-Modells</param>
            <returns>true, wenn das Modell gesetzt werden konnte</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.GameObject.DetachAllBoneAttachments(System.Boolean)">
            <summary>
            Entfernt die Verbindung zu allen am Instanzmodell anhaftenden GameObject-Instanzen (Bone-Attachments)
            </summary>
            <param name="deleteAttachments">wenn true, werden die anhaftenden Instanzen nicht nur abgekoppelt sondern auch aus der Welt gelöscht (Standard: false)</param>
        </member>
        <member name="T:KWEngine3.GameObjects.HUDObject">
            <summary>
            HUD-Oberklasse
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.HUDObject.IsVisible">
            <summary>
            Gibt an, ob das HUDObject sichtbar ist oder nicht (Standard: true)
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.HUDObject.CurrentWorld">
            <summary>
            Verweis auf die aktuelle Welt
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.HUDObject.Position">
            <summary>
            Position des Objekts auf dem Bildschirm
            (die Koordinaten (0;0) beschreiben die linke obere Ecke)
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.HUDObject.Name">
            <summary>
            Name der Instanz
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObject.SetPosition(System.Single,System.Single)">
            <summary>
            Setzt die Position
            </summary>
            <param name="x">Breite in Pixeln</param>
            <param name="y">Höhe in Pixeln</param>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObject.SetPosition(OpenTK.Mathematics.Vector2)">
            <summary>
            Setzt die Position
            </summary>
            <param name="p">Höhe in Pixeln</param>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObject.CenterOnScreen">
            <summary>
            Zentriert das Objekt im Fenster
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObject.IsMouseCursorOnMe">
            <summary>
            Prüft, ob der Mauszeiger auf dem HUD-Objekt ist
            </summary>
            <returns>true, wenn die Maus auf dem HUD-Objekt ist</returns>
        </member>
        <member name="P:KWEngine3.GameObjects.HUDObject.Color">
            <summary>
            Aktuelle Färbung des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.HUDObject.Opacity">
            <summary>
            Aktuelle Sichtbarkeit des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.HUDObject.GlowColor">
            <summary>
            AKtuelle Glühfarbe des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.HUDObject.GlowIntensity">
            <summary>
            Aktuelle Glühintensität des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.HUDObject.Scale">
            <summary>
            Aktuelle Größe des Objekts (bei Text gilt die Größe je Zeichen)
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObject.SetColor(System.Single,System.Single,System.Single)">
            <summary>
            Färbung des Objekts
            </summary>
            <param name="red">Rot</param>
            <param name="green">Grün</param>
            <param name="blue">Blau</param>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObject.SetOpacity(System.Single)">
            <summary>
            Setzt die Sichtbarkeit des Objekts
            </summary>
            <param name="o">Sichtbarkeit (zwischen 0 und 1)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObject.SetColorEmissive(System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Glühfarbe des Objekts
            </summary>
            <param name="red">Rot (zwischen 0 und 1)</param>
            <param name="green">Grün (zwischen 0 und 1)</param>
            <param name="blue">Blau (zwischen 0 und 1)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObject.SetColorEmissiveIntensity(System.Single)">
            <summary>
            Setzt die Glühintensität des Objekts
            </summary>
            <param name="intensity">Intensität (zwischen 0 und 1)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObject.SetScale(System.Single,System.Single)">
            <summary>
            Setzt die Größe (bei Text gilt die Größe je Zeichen)
            </summary>
            <param name="width">Breite (gültige Werte zwischen 0.001 und 2048)</param>
            <param name="height">Höhe (gültige Werte zwischen 0.001 und 2048)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObject.SetScale(System.Single)">
            <summary>
            Setzt die Größe (Breite und Höhe gleichermaßen)
            </summary>
            <param name="scale">Größe der Buchstaben bzw. des Bilds (in Pixeln)</param>
        </member>
        <member name="T:KWEngine3.GameObjects.HUDObjectImage">
            <summary>
            Klasse zur Anzeige von Bildern im HUD
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObjectImage.#ctor">
            <summary>
            Standardkonstruktor für bildbasierte HUD-Objekte, der noch keine Bilddatei festlegt
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObjectImage.#ctor(System.String)">
            <summary>
            Standardkonstruktor für bildbasierte HUD-Objekte
            </summary>
            <param name="filename">Name der Bilddatei</param>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObjectImage.IsMouseCursorOnMe">
            <summary>
            Prüft, ob der Mauszeiger über dem Bildobjekt liegt
            </summary>
            <returns>true, wenn dies der Fall ist</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObjectImage.SetTexture(System.String)">
            <summary>
            Setzt das anzuzeigende Bild (als Textur) und skaliert das Objekt auf die Originalgröße dieses Bildes
            </summary>
            <param name="filename">Name der Bilddatei</param>
        </member>
        <member name="T:KWEngine3.GameObjects.HUDObjectText">
            <summary>
            Klasse zur Darstellung von einfachen Textzeilen
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObjectText.#ctor(System.String)">
            <summary>
            Standardkonstruktor der HUDObjectText-Instanz
            </summary>
            <param name="text">Darzustellender Text (maximal 256 Zeichen)</param>
        </member>
        <member name="P:KWEngine3.GameObjects.HUDObjectText.Font">
            <summary>
            Schriftart des HUD-Objekts
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObjectText.SetFont(KWEngine3.FontFace)">
            <summary>
            Setzt die Schriftart der Instanz
            </summary>
            <param name="fontFace">zu nutzende Schriftart</param>
        </member>
        <member name="P:KWEngine3.GameObjects.HUDObjectText.TextAlignment">
            <summary>
            Aktueller Modus der Textanordnung
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObjectText.SetTextAlignment(KWEngine3.TextAlignMode)">
            <summary>
            Setzt den Modus der Textanordnung
            </summary>
            <param name="textAlignment">neuer Modus</param>
        </member>
        <member name="P:KWEngine3.GameObjects.HUDObjectText.Text">
            <summary>
            Erfragt den aktuell für das Objekt festgelegten Text
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObjectText.SetText(System.String,System.Boolean)">
            <summary>
            Setzt den Text (maximal 256 Zeichen)
            </summary>
            <param name="text">zu setzender Text</param>
            <param name="trim">Leerzeichen zu Beginn und am Ende der Zeichenkette werden abgeschnitten (Standardwert: true)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObjectText.SetCharacterDistanceFactor(System.Single)">
            <summary>
            Verringert oder erhöht die Distanz zwischen Zeichen (Standardwert: 1, gültige Werte von -100 bis +100)
            </summary>
            <param name="distanceFactor">Distanzfaktor</param>
        </member>
        <member name="P:KWEngine3.GameObjects.HUDObjectText.CharacterDistanceFactor">
            <summary>
            Gibt den aktuellen Distanzfaktor für die Abstände zwischen Zeichen an
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.HUDObjectText.IsMouseCursorOnMe">
            <summary>
            Prüft, ob der Mauszeiger auf dem Textobjekt liegt
            </summary>
            <returns>true, wenn Mauszeiger über dem Textobjekt liegt</returns>
        </member>
        <member name="T:KWEngine3.GameObjects.Intersection">
            <summary>
            Kollisionsklasse
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.Intersection.Object">
            <summary>
            Das Objekt, mit dem kollidiert wurde
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.Intersection.MeshName">
            <summary>
            Der Name der Hitbox, mit der kollidiert wurde
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.Intersection.Type">
            <summary>
            Art der getroffenen Hitbox
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.Intersection.MTV">
            <summary>
            Minimal-Translation-Vector (für Kollisionskorrektur)
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.Intersection.MTVUpToTop">
            <summary>
            Minimal-Translation-Vector für die Y-Achse, der immer auf die oberste Fläche des Kollisionsobjekts verschiebt
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.Intersection.MTVUp">
            <summary>
            Minimal-Translation-Vector für die Y-Achse
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.Intersection.ColliderSurfaceNormal">
            <summary>
            Gibt den Ebenenvektor der Oberfläche des Objekts an, mit dem die Kollision stattfand
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.Intersection.CalculateVolume">
            <summary>
            Berechnet das Volumen der Kollision (wie viel von Objekt B schneidet sich mit Objekt A?)
            </summary>
            <remarks>
            Funktioniert lediglich, wenn beide Hitboxen vom Typ ConvexHull sind
            </remarks>
            <returns>IntersectionVolume-Instanz mit genaueren Angaben zum Volumen</returns>
        </member>
        <member name="T:KWEngine3.GameObjects.IntersectionVolume">
            <summary>
            Enthält erweiterte Informationen zum Kollisionsvolumen
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.IntersectionVolume.Center">
            <summary>
            Gibt den Mittelpunkt des Kollisionsvolumens an
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.IntersectionVolume.SpanX">
            <summary>
            Gibt die Breite des Kollisionsvolumens entlang der X-Achse an
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.IntersectionVolume.SpanY">
            <summary>
            Gibt die Höhe des Kollisionsvolumens entlang der Y-Achse an
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.IntersectionVolume.SpanZ">
            <summary>
            Gibt die Tiefe des Kollisionsvolumens entlang der Z-Achse an
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.IntersectionVolume.DirectionFromHitboxCenter">
            <summary>
            Gibt die relative Richtung ausgehend von der Hitbox-Mitte hin zum Kollisionsvolumen an
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.IntersectionVolume.DistanceFromHitboxCenter">
            <summary>
            Gibt die Distanz des Kollisionsvolumens zur Hitbox-Mitte an
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.IntersectionVolume.VolumeVertices">
            <summary>
            Die Eckpunkte des Kollisionsvolumens
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.IntersectionVolume.IsValid">
            <summary>
            Gibt an, ob die Messungen valide sind (nur dann sollten die Messdaten verwendet werden!)
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.IntersectionVolume.#ctor(System.Collections.Generic.List{OpenTK.Mathematics.Vector3},OpenTK.Mathematics.Vector3)">
            <summary>
            Konstruktormethode für das Volumen einer Kollision
            </summary>
            <param name="vertices">Liste der Schnittpunkte</param>
            <param name="hitboxCenter">Zentraler Punkt der Hitbox des Aufrufers</param>
        </member>
        <member name="T:KWEngine3.GameObjects.LightObject">
            <summary>
            Klasse für Sonnen-/Punktlichter und gerichtete Lichter (spot lights)
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.LightObject.IsInsideScreenSpace">
            <summary>
            Befinden sich das Lichtobjekt und seine Lichtstrahlen aktuell auf dem Bildschirm?
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.LightObject.ID">
            <summary>
            Engine-interne ID
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.LightObject.Name">
            <summary>
            Name des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.LightObject.ShadowCasterType">
            <summary>
            Schattenqualität des Lichts (maximal 3 Schattenlichter pro Welt möglich)
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.LightObject.#ctor(KWEngine3.LightType,KWEngine3.ShadowQuality)">
            <summary>
            Standardkonstruktormethode für Lichtobjekte
            </summary>
            <param name="lightType">Art des Lichts (Sonne, Punktlicht oder gerichtetes Licht?)</param>
            <param name="shadowType">Schattenqualität des Lichts</param>
        </member>
        <member name="M:KWEngine3.GameObjects.LightObject.SetShadowBias(System.Single)">
            <summary>
            Feintuning für den Schatteneffekt des Lichts (im Bereich [-0.1f;+0.1f])
            </summary>
            <param name="bias">Bias-Wert (Standardwert: 0.00006f)</param>
        </member>
        <member name="P:KWEngine3.GameObjects.LightObject.Type">
            <summary>
            Art des Lichts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.LightObject.CurrentWorld">
            <summary>
            Verweis auf die aktuelle Welt
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.LightObject.SetPosition(System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Position des Lichtobjekts
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="z">z</param>
        </member>
        <member name="M:KWEngine3.GameObjects.LightObject.SetPosition(OpenTK.Mathematics.Vector3)">
            <summary>
            Setzt die Position des Lichtobjekts
            </summary>
            <param name="position">3D-Koordinate</param>
        </member>
        <member name="M:KWEngine3.GameObjects.LightObject.SetTarget(System.Single,System.Single,System.Single)">
            <summary>
            Setzt das Ziel des Lichts (bzw. dadurch dessen Richtung)
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="z">z</param>
        </member>
        <member name="M:KWEngine3.GameObjects.LightObject.SetTarget(OpenTK.Mathematics.Vector3)">
            <summary>
            Setzt das Ziel des Lichts (bzw. dadurch dessen Richtung)
            </summary>
            <param name="target">3D-Koordinate</param>
        </member>
        <member name="M:KWEngine3.GameObjects.LightObject.SetColor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Setzt Lichtfarbe- und intensität
            </summary>
            <param name="r">Rotintensität (0 bis 1)</param>
            <param name="g">Grünintensität (0 bis 1)</param>
            <param name="b">Blauintensität (0 bis 1)</param>
            <param name="intensity">Helligkeit (0 bis 4096)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.LightObject.SetColor(OpenTK.Mathematics.Vector4)">
            <summary>
            Setzt Lichtfarbe- und intensität
            </summary>
            <param name="c">Rot-/Grün-/Blau-Intensität (0 bis 1) plus Helligkeit (0 bis 4096)</param>
        </member>
        <member name="P:KWEngine3.GameObjects.LightObject.Color">
            <summary>
            Gibt die aktuelle Lichtfarbe zurück
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.LightObject.MoveOffset(System.Single,System.Single,System.Single)">
            <summary>
            Bewegt die Instanz in die entsprechende Achsenrichtung
            </summary>
            <param name="x">Bewegung in x-Achse</param>
            <param name="y">Bewegung in y-Achse</param>
            <param name="z">Bewegung in z-Achse</param>
        </member>
        <member name="M:KWEngine3.GameObjects.LightObject.MoveOffsetTarget(System.Single,System.Single,System.Single)">
            <summary>
            Bewegt die Zielposition der Instanz in die entsprechende Achsenrichtung
            </summary>
            <param name="x">Bewegung in x-Achse</param>
            <param name="y">Bewegung in y-Achse</param>
            <param name="z">Bewegung in z-Achse</param>
        </member>
        <member name="M:KWEngine3.GameObjects.LightObject.SetFOV(System.Single)">
            <summary>
            Setzt den Blickwinkel des Lichts (gilt nur für Sonnenlicht und gerichtetes Licht)
            </summary>
            <param name="fov">Blickwinkel in Grad</param>
        </member>
        <member name="M:KWEngine3.GameObjects.LightObject.SetNearFar(System.Single,System.Single)">
            <summary>
            Setzt die Nah- und Ferngrenze (Reichweite) des Lichts
            </summary>
            <param name="near">Nahgrenze (mind. 0.1f)</param>
            <param name="far">Ferngrenze (muss größer als die Nahgrenze sein, Standardwert: 100)</param>
        </member>
        <member name="P:KWEngine3.GameObjects.LightObject.Position">
            <summary>
            Gibt die aktuelle Position des Lichtobjekts zurück
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.LightObject.Target">
            <summary>
            Gibt die aktuelle Zielposition des Lichtobjekts zurück (nur für gerichtete Lichter gültig)
            </summary>
        </member>
        <member name="T:KWEngine3.GameObjects.ParticleObject">
            <summary>
            Partikelklasse
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.ParticleObject.Position">
            <summary>
            Position des Partikels
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.ParticleObject.SetDuration(System.Single)">
            <summary>
            Setzt die Dauer der Loop-Partikel
            </summary>
            <param name="durationInSeconds">Dauer (in Sekunden)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ParticleObject.SetPosition(OpenTK.Mathematics.Vector3)">
            <summary>
            Setzt die Positon
            </summary>
            <param name="pos">Positionsdaten</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ParticleObject.SetPosition(System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Position
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="z">z</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ParticleObject.SetColor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Partikelfärbung
            </summary>
            <param name="red">Rot</param>
            <param name="green">Grün</param>
            <param name="blue">Blau</param>
            <param name="alpha">Transparenz (0 bis 1)</param>
        </member>
        <member name="P:KWEngine3.GameObjects.ParticleObject.Color">
            <summary>
            Erfragt die aktuelle Färbung des Partikelobjekts
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.ParticleObject.#ctor(System.Single,KWEngine3.ParticleType)">
            <summary>
            Konstruktormethode für Partikel
            </summary>
            <param name="scale">Skalierung</param>
            <param name="type">Art der Partikelanimation</param>
        </member>
        <member name="T:KWEngine3.GameObjects.RenderObject">
            <summary>
            Klasse für ein nicht-animiertes, statisches Objekt ohne Teilnahme an der Spielmechanik
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.RenderObject.InstanceCount">
            <summary>
            Gibt die beim Erstellen des Objekts festgelegte Anzahl an Instanzen an
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.RenderObject.Mode">
            <summary>
            Gibt an, ob jede zusätzliche Instanz absolut oder relativ zur Hauptinstanz positioniert wird (Standard: absolut)
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.RenderObject.#ctor">
            <summary>
            Standardkonstruktor (erzeugt mit einem Würfel als 3D-Modell)
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.RenderObject.#ctor(System.String)">
            <summary>
            Konstruktormethode, der der 3D-Modellname mitgegeben werden kann
            </summary>
            <param name="modelname">Name des zu verwendenden 3D-Modells</param>
        </member>
        <member name="M:KWEngine3.GameObjects.RenderObject.SetAdditionalInstanceCount(System.Int32,KWEngine3.InstanceMode)">
            <summary>
            Konfiguriert die Anzahl der gewünschten Instanzen (Kopien) für das Objekt. 
            Es sind maximal 1023 zusätzliche Instanzen möglich.
            </summary>
            <param name="instanceCount">Anzahl zusätzlich zu erstellender Instanzen (0 für keine zusätzlichen Instanzen)</param>
            <param name="mode">Legt fest, ob jede zusätzliche Instanz absolut oder relativ zur Hauptinstanz positioniert wird (Standard: absolut)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.RenderObject.CompareTo(KWEngine3.GameObjects.RenderObject)">
            <summary>
            Vergleicht das Objekt bzgl. seiner Entfernung zur Kamera mit einem anderen Objekt
            </summary>
            <param name="other">anderes RenderObject</param>
            <returns>1, wenn das aufrufende Objekt näher an der Kamera ist, sonst -1</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.RenderObject.SetModel(System.String)">
            <summary>
            Setzt das 3D-Modell des Objekts
            </summary>
            <param name="modelname">Name des 3D-Modells</param>
            <returns>true, wenn das Modell gesetzt werden konnte</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.RenderObject.SetPositionForInstance(System.Int32,OpenTK.Mathematics.Vector3)">
            <summary>
            Setzt die Position für eine bestimmte Instanz. Die Rotation und Skalierung der angegebenen Instanz werden zurück auf die Standardwerte gesetzt.
            </summary>
            <param name="instanceIndex">Index der Instanz (muss zwischen 1 und 1023 liegen)</param>
            <param name="position">Position der Instanz</param>
        </member>
        <member name="M:KWEngine3.GameObjects.RenderObject.SetPositionForInstance(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Position für eine bestimmte Instanz. Die Rotation und Skalierung der angegebenen Instanz werden zurück auf die Standardwerte gesetzt.
            </summary>
            <param name="instanceIndex">Index der Instanz (muss zwischen 1 und 1023 liegen)</param>
            <param name="x">X-Position der Instanz</param>
            <param name="y">Y-Position der Instanz</param>
            <param name="z">Z-Position der Instanz</param>
        </member>
        <member name="M:KWEngine3.GameObjects.RenderObject.SetPositionRotationScaleForInstance(System.Int32,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Vector3)">
            <summary>
            Setzt die Position/Rotation/Skalierung für eine bestimmte Instanz.
            </summary>
            <param name="instanceIndex">Index der Instanz (muss zwischen 1 und 1023 liegen)</param>
            <param name="position">Position der Instanz</param>
            <param name="rotation">Rotation der Instanz</param>
            <param name="scale">Skalierung der Instanz</param>
        </member>
        <member name="T:KWEngine3.GameObjects.TerrainObject">
            <summary>
            Klasse für Terrain-Objekte
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.TerrainObject.ID">
            <summary>
            Interne ID des Objekts
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.TerrainObject.IsInsideScreenSpace">
            <summary>
            Gibt an, ob das Objekt gerade auf dem Bildschirm zu sehen ist
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.TerrainObject.IsShadowCaster">
            <summary>
            Gibt an, ob das Objekt Schatten werfen und empfangen kann
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.TerrainObject.IsCollisionObject">
            <summary>
            Gibt an, ob das Objekt ein Kollisionsobjekt ist
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.TerrainObject.IsVisible">
            <summary>
            Gibt an oder setzt fest, ob die Instanz sichtbar ist (Standard: true)
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.TerrainObject.#ctor(System.String)">
            <summary>
            Standardkonstruktor für ein Terrain-Objekt
            </summary>
            <param name="modelname">Terrain-Modellname</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TerrainObject.SetModel(System.String)">
            <summary>
            Setzt das 3D-Modell des Terrains
            </summary>
            <param name="modelname">Name des Modells</param>
            <returns>true, wenn das Setzen des Modells erfolgreich war</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.TerrainObject.SetColor(System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Farbtönung des Objekts
            </summary>
            <param name="r">Rotanteil (0 bis 1)</param>
            <param name="g">Grünanteil (0 bis 1)</param>
            <param name="b">Blauanteil (0 bis 1)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TerrainObject.SetColorEmissive(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Setzt die selbstleuchtende Farbtönung des Objekts
            </summary>
            <param name="r">Rotanteil (0 bis 2)</param>
            <param name="g">Grünanteil (0 bis 2)</param>
            <param name="b">Blauanteil (0 bis 2)</param>
            <param name="intensity">Intensität der Lichtabstrahlung (0 bis 10)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TerrainObject.SetMetallic(System.Single)">
            <summary>
            Setzt fest, wie metallisch das Objekt ist
            </summary>
            <param name="m">Faktor (0 bis 1)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TerrainObject.SetMetallicType(KWEngine3.MetallicType)">
            <summary>
            Setzt den Metalltyp des Objekts
            </summary>
            <param name="type">Typ</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TerrainObject.SetRoughness(System.Single)">
            <summary>
            Setzt die Rauheit der Oberfläche (0 bis 1, Standard: 1)
            </summary>
            <param name="r">Rauheit</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TerrainObject.SetTexture(System.String,KWEngine3.TextureType,System.Int32)">
            <summary>
            Setzt die Textur des Objekts
            </summary>
            <param name="filename">Dateiname (inkl. relativem Pfad)</param>
            <param name="type">Texturtyp (Standard: Albedo)</param>
            <param name="meshId">interne Nummer des 3D-Modellteils (Standard: 0)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TerrainObject.SetTextureOffset(System.Single,System.Single)">
            <summary>
            Setzt die Texturverschiebung
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TerrainObject.SetTextureRepeat(System.Single,System.Single)">
            <summary>
            Setzt die Texturwiederholung in x-/y-Richtung (Standard: 1)
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
        </member>
        <member name="P:KWEngine3.GameObjects.TerrainObject.Name">
            <summary>
            Name des Objekts
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.TerrainObject.SetPosition(System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Position des Objekts
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="z">z</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TerrainObject.SetPosition(OpenTK.Mathematics.Vector3)">
            <summary>
            Setzt die Position des Objekts
            </summary>
            <param name="pos">Position</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TerrainObject.MoveOffset(System.Single,System.Single,System.Single)">
            <summary>
            Bewegt das Objekt relativ zur ursprünglichen Position
            </summary>
            <param name="x">x-Bewegung</param>
            <param name="y">y-Bewegung</param>
            <param name="z">z-Bewegung</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TerrainObject.MoveOffset(OpenTK.Mathematics.Vector3)">
            <summary>
            Bewegt das Objekt relativ zur ursprünglichen Position
            </summary>
            <param name="offset">Verschiebung</param>
        </member>
        <member name="T:KWEngine3.GameObjects.TextObject">
            <summary>
            Klasse zur Instanziierung von 3D-Textobjekten in der Welt
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.TextObject.Name">
            <summary>
            Name der Instanz
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.TextObject.CurrentWorld">
            <summary>
            Verweis auf die aktuelle Welt
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.TextObject.Text">
            <summary>
            Aktueller Text der Instanz
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.#ctor">
            <summary>
            Erzeugt eine neue Instanz der Klasse TextObject zur Darstellung von 3D-Text
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.#ctor(System.String)">
            <summary>
            Erzeugt eine neue Instanz der Klasse TextObject zur Darstellung von 3D-Text
            </summary>
            <param name="text">Anzuzeigender Text</param>
        </member>
        <member name="P:KWEngine3.GameObjects.TextObject.IsShadowCaster">
            <summary>
            Gibt an, ob das Objekt Schatten werfen und empfangen kann (Standard: false)
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.TextObject.IsAffectedByLight">
            <summary>
            Gibt an, ob das Objekt von Lichtquellen und dem Ambient Light beeinflusst wird (Standard: true)
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.SetText(System.String)">
            <summary>
            Setzt den anzuzeigenden Text der Instanz
            </summary>
            <param name="text">Anzuzeigender Text</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.SetCharacterDistanceFactor(System.Single)">
            <summary>
            Gibt an, wie weit die Textzeichen voneinander entfernt liegen sollen (Standard: 1)
            </summary>
            <param name="f">Entfernungsfaktor (Werte zwischen 0.75f und 2f)</param>
        </member>
        <member name="P:KWEngine3.GameObjects.TextObject.CharacterDistanceFactor">
            <summary>
            Gibt den aktuell verwendeten Distanzfaktor für den Zeichenzwischenraum an
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.SetPosition(System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Position der Instanz
            </summary>
            <param name="x">x-Koordinate</param>
            <param name="y">y-Koordinate</param>
            <param name="z">z-Koordinate</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.SetPosition(OpenTK.Mathematics.Vector3)">
            <summary>
            Setzt die Position der Instanz
            </summary>
            <param name="p">xyz-Koordinaten</param>
        </member>
        <member name="P:KWEngine3.GameObjects.TextObject.Position">
            <summary>
            Erfragt die aktuelle Position der Instanz
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.TurnTowardsXYZ(OpenTK.Mathematics.Vector3)">
            <summary>
            Dreht das Objekt, so dass es sich zur Zielkoordinate dreht
            </summary>
            <param name="target">Zielkoordinate</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.AdjustRotationToCameraRotation">
            <summary>
            Gleicht die Rotation der Instanz an die der Kamera an
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.GetRotationToTarget(OpenTK.Mathematics.Vector3)">
            <summary>
            Erfragt die Rotation, die zu einem bestimmten Ziel notwendig wäre
            </summary>
            <param name="target">Zielpunkt</param>
            <returns>Rotation (als Quaternion)</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.SetRotation(System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Orientierung der Instanz
            </summary>
            <param name="x">Drehung um lokale x-Achse (in Grad)</param>
            <param name="y">Drehung um lokale y-Achse (in Grad)</param>
            <param name="z">Drehung um lokale z-Achse (in Grad)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.SetRotation(OpenTK.Mathematics.Quaternion)">
            <summary>
            Setzt die Orientierung der Instanz
            </summary>
            <param name="q">3-Achsen-Rotation in Form eines Quaternion</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.AddRotationX(System.Single,System.Boolean)">
            <summary>
            Erhöht die Rotation um die x-Achse
            </summary>
            <param name="r">Grad</param>
            <param name="worldSpace">true, wenn um die Weltachse statt um die lokale Achse rotiert werden soll</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.AddRotationY(System.Single,System.Boolean)">
            <summary>
            Erhöht die Rotation um die y-Achse
            </summary>
            <param name="r">Grad</param>
            <param name="worldSpace">true, wenn um die Weltachse statt um die lokale Achse rotiert werden soll</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.AddRotationZ(System.Single,System.Boolean)">
            <summary>
            Erhöht die Rotation um die z-Achse
            </summary>
            <param name="r">Grad</param>
            <param name="worldSpace">true, wenn um die Weltachse statt um die lokale Achse rotiert werden soll</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.SetScale(System.Single)">
            <summary>
            Setzt die Größe der Instanz (Standard: 1)
            </summary>
            <param name="s">Größenangabe</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.SetFont(KWEngine3.FontFace)">
            <summary>
            Setzt die anzuzeigende Schriftart
            </summary>
            <param name="font">Name der zu benutzenden Schriftart</param>
        </member>
        <member name="P:KWEngine3.GameObjects.TextObject.Color">
            <summary>
            Erfragt die aktuell gewählte Farbe der Instanz
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.SetColor(System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Farbe der Instanz
            </summary>
            <param name="r">Rotanteil (zwischen 0 und 1)</param>
            <param name="g">Grünanteil (zwischen 0 und 1)</param>
            <param name="b">Blauanteil (zwischen 0 und 1)</param>
        </member>
        <member name="P:KWEngine3.GameObjects.TextObject.Scale">
            <summary>
            Erfragt den aktuellen Skalierungsfaktor der Instanz
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.TextObject.Opacity">
            <summary>
            Erfragt die aktuelle Transparenz der Instanz
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.SetOpacity(System.Single)">
            <summary>
            Steuert die Transparenz der Instanz
            </summary>
            <param name="opacity">Transparenzwert (0 = voll transparent, 1 = voll sichtbar)</param>
        </member>
        <member name="P:KWEngine3.GameObjects.TextObject.ColorEmissive">
            <summary>
            Erfragt die aktuelle selbstleuchtende Farbe der Instanz
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.SetColorEmissive(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Setzt die selbstleuchtende Farbe der Instanz
            </summary>
            <param name="r">Rotanteil (zwischen 0 und 2)</param>
            <param name="g">Grünanteil (zwischen 0 und 2)</param>
            <param name="b">Blauanteil (zwischen 0 und 2)</param>
            <param name="intensity">Intensität (zwischen 0 und 10)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.CompareTo(KWEngine3.GameObjects.TextObject)">
            <summary>
            Vergleicht das Objekt bzgl. seiner Entfernung zur Kamera mit einem anderen Objekt
            </summary>
            <param name="other">anderes Objekt</param>
            <returns>1, wenn das aufrufende Objekt näher an der Kamera ist, sonst -1</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.TextObject.Act">
            <summary>
            Methode, die von der Engine automatisch aufgerufen wird, um das Objekt zu aktualisieren
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.TextObject.IsInsideScreenSpace">
            <summary>
            Gibt an, ob sich das Objekt aktuell im Blickfeld der Kamera befindet
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.TextObject.Width">
            <summary>
            Erfragt die aktuelle Breite des Objekts (mit Rücksicht auf CharacterSpreadFactor und Skalierung)
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.TextObject.Keyboard">
            <summary>
            Verweis auf Keyboardeingaben
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.TextObject.Mouse">
            <summary>
            Verweis auf Mauseingaben
            </summary>
        </member>
        <member name="T:KWEngine3.GameObjects.ViewSpaceGameObject">
            <summary>
            Basisklasse für Objekte, die im First-Person-Modus zu sehen sind (Waffen, etc.)
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.#ctor">
            <summary>
            Standardkonstruktormethode (erzeugt einen Würfel)
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.#ctor(System.String)">
            <summary>
            Konstruktormethode, die ein ViewSpaceGameObject des angegebenen Modells erstellt
            </summary>
            <param name="modelName">Name des Modells</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.SetTextureForPrimitiveModel(System.String,KWEngine3.TextureType)">
            <summary>
            Setzt die Textur, falls das Modell des Objekts KWCube, KWSphere oder KWQuad(2D) ist
            </summary>
            <param name="file">Texturdatei (inkl. relativem Pfad)</param>
            <param name="type">Texturtyp</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.Act">
            <summary>
            Aktivitätsmethode des Objekts
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.SetModel(System.String)">
            <summary>
            Setzt das 3D-Modell
            </summary>
            <param name="modelName">Name des 3D-Modells</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.UpdatePosition">
            <summary>
            Aktualisiert die Position des Objekts anhand der aktuellen Position und Rotation des Elternobjekts
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.SetRotation(System.Single,System.Single,System.Single)">
            <summary>
            Legt die lokale Rotation fest (Reihenfolge x->y->z), die zusätzlich zur Rotation des Elternobjekts angewendet wird
            </summary>
            <param name="x">Rotation in Grad um die lokale x-Achse</param>
            <param name="y">Rotation in Grad um die lokale y-Achse</param>
            <param name="z">Rotation in Grad um die lokale z-Achse</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.GetIntersections">
            <summary>
            Lässt das Objekt auf Kollisionen mit anderen GameObject-Instanzen prüfen
            </summary>
            <returns>Liste mit Kollisionen (kann leer sein)</returns>
        </member>
        <member name="P:KWEngine3.GameObjects.ViewSpaceGameObject.CurrentWorld">
            <summary>
            Verweis auf die aktuelle Welt
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.ViewSpaceGameObject.IsCollisionObject">
            <summary>
            Setzt fest, ob das Objekt ein Kollisionsobjekt ist
            </summary>
        </member>
        <member name="P:KWEngine3.GameObjects.ViewSpaceGameObject.IsShadowCaster">
            <summary>
            Setzt fest, ob das Objekt Schatten werfen und empfangen kann
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.SetOffset(System.Single,System.Single,System.Single)">
            <summary>
            Setzt den Abstand des Objekts zur Kamera bzw. zum Elternobjekt
            </summary>
            <param name="horizontal">Abstand auf der lokalen x-Achse</param>
            <param name="vertical">Abstand auf der lokalen y-Achse</param>
            <param name="nearFar">Abstand auf der lokalen z-Achse</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.SetOffset(OpenTK.Mathematics.Vector3)">
            <summary>
            Setzt den Abstand des Objekts zur Kamera bzw. zum Elternobjekt
            </summary>
            <param name="offset">Abstand</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.SetScale(System.Single)">
            <summary>
            Setzt die Größe des Objekts (muss > 0 sein)
            </summary>
            <param name="s">Skalierung (1 = Standardgröße)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.SetAnimationID(System.Int32)">
            <summary>
            Setzt die Animation des Objekts (falls das Modell über Animationen verfügt)
            </summary>
            <param name="id">Animations-ID (>= 0)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.SetAnimationPercentage(System.Single)">
            <summary>
            Setzt den Animationsfortschritt (zwischen 0 und 1)
            </summary>
            <param name="p">Fortschritt (0 = 0%, 1 = 100%)</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.SetAnimationPercentageAdvance(System.Single)">
            <summary>
            Setzt den relativen Animationsfortschritt
            </summary>
            <param name="p">relativer Animationsfortschritt</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.AttachGameObjectToBone(KWEngine3.GameObjects.GameObject,System.String)">
            <summary>
            Bindet eine andere GameObject-Instanz an den jeweiligen Knochen des aktuell verwendeten Modells
            </summary>
            <param name="g">Anzuhängende Instanz</param>
            <param name="boneName">Name des Knochens, an den die Instanz angehängt werden soll</param>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.DetachGameObjectFromBone(System.String)">
            <summary>
            Entfernt die Bindung (Attachment) einer GameObject-Instanz 
            </summary>
            <param name="boneName">Name des Knochens</param>
        </member>
        <member name="P:KWEngine3.GameObjects.ViewSpaceGameObject.HasAttachedGameObjects">
            <summary>
            Liefert true, wenn mind. eine GameObject-Instanz an einen Knochen des aufrufenden Objekts gebunden ist
            </summary>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.GetBoneNamesForAttachedGameObject">
            <summary>
            Liefert eine Liste der Knochennamen, an die aktuell eine andere GameObject-Instanz gebunden ist
            </summary>
            <returns>Liste der verwendeten Knochennamen (für Attachments)</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.GetGameObjectThatIAmAttachedTo">
            <summary>
            Liefert die Referenz auf das Objekt, an das die aktuelle Instanz gebunden ist (kann null sein!)
            </summary>
            <returns>GameObject, an das die Instanz (via Knochen) gebunden ist</returns>
        </member>
        <member name="M:KWEngine3.GameObjects.ViewSpaceGameObject.GetAttachedGameObjectForBone(System.String)">
            <summary>
            Liefert die an einen Knochen gebundene GameObject-Instanz
            </summary>
            <param name="boneName">Knochenname</param>
            <returns>Gebundene GameObject-Instanz</returns>
        </member>
        <member name="T:KWEngine3.GLWindow">
            <summary>
            Basisklasse für das Programmfenster
            </summary>
        </member>
        <member name="M:KWEngine3.GLWindow.#ctor(System.Boolean,KWEngine3.PostProcessingQuality)">
            <summary>
            Standardkonstruktor für den Fullscreen-Modus
            </summary>
            <param name="vSync">Begrenzung der FPS an die Bildwiederholrate des Monitors?</param>
            <param name="ppQuality">Qualität der Post-Processing-Pipeline (Standard: hohe Qualität)</param>
        </member>
        <member name="M:KWEngine3.GLWindow.#ctor(System.Int32,System.Int32,System.Boolean,KWEngine3.PostProcessingQuality)">
            <summary>
            Standardkonstruktor für den Fenstermodus
            </summary>
            <param name="width">Breite des Fensterinhalts in Pixeln</param>
            <param name="height">Höhe des Fenterinhalts in Pixeln</param>
            <param name="vSync">Begrenzung der FPS an die Bildwiederholrate des Monitors?</param>
            <param name="ppQuality">Qualität der Post-Processing-Pipeline (Standard: hohe Qualität)</param>
        </member>
        <member name="P:KWEngine3.GLWindow.IsMouseInWindow">
            <summary>
            Prüft, ob der Mauszeiger aktuell innerhalb des Fensters ist
            </summary>
        </member>
        <member name="P:KWEngine3.GLWindow.Keyboard">
            <summary>
            Verweis auf Keyboardeingaben
            </summary>
        </member>
        <member name="P:KWEngine3.GLWindow.Mouse">
            <summary>
            Verweis auf Mauseingaben
            </summary>
        </member>
        <member name="M:KWEngine3.GLWindow.OnLoad">
            <summary>
            Standard-Initialisierungen
            </summary>
        </member>
        <member name="M:KWEngine3.GLWindow.OnUpdateFrame(OpenTK.Windowing.Common.FrameEventArgs)">
            <summary>
            Wird für Änderungen der Tastatureingaben und Mauseingaben verwendet
            </summary>
            <param name="args">aktuelle Angaben</param>
        </member>
        <member name="M:KWEngine3.GLWindow.OnResize(OpenTK.Windowing.Common.ResizeEventArgs)">
            <summary>
            Wird ausgeführt, wenn sich das Fenster vergrößert/verkleinert
            </summary>
            <param name="e">Parameter</param>
        </member>
        <member name="M:KWEngine3.GLWindow.OnRenderFrame(OpenTK.Windowing.Common.FrameEventArgs)">
            <summary>
            Wird ausgeführt, wenn ein neues Bild gezeichnet werden soll
            </summary>
            <param name="e">Parameter</param>
        </member>
        <member name="M:KWEngine3.GLWindow.OnTextInput(OpenTK.Windowing.Common.TextInputEventArgs)">
            <summary>
            Wird aufgerufen, wenn Text eingegeben wird
            </summary>
            <param name="e">Parameter</param>
        </member>
        <member name="M:KWEngine3.GLWindow.OnMouseDown(OpenTK.Windowing.Common.MouseButtonEventArgs)">
            <summary>
            Wird aufgerufen, wenn eine Maustaste gedrückt wird
            </summary>
            <param name="e">Parameter</param>
        </member>
        <member name="M:KWEngine3.GLWindow.OnMouseMove(OpenTK.Windowing.Common.MouseMoveEventArgs)">
            <summary>
            Wird aufgerufen, wenn sich die Maus bewegt
            </summary>
            <param name="e">Parameter</param>
        </member>
        <member name="M:KWEngine3.GLWindow.OnMouseUp(OpenTK.Windowing.Common.MouseButtonEventArgs)">
            <summary>
            Wird aufgerufen, wenn eine Maustaste losgelassen wird
            </summary>
            <param name="e">Parameter</param>
        </member>
        <member name="M:KWEngine3.GLWindow.OnMouseWheel(OpenTK.Windowing.Common.MouseWheelEventArgs)">
            <summary>
            Wird aufgerufen, wenn das Mausrad betätigt wird
            </summary>
            <param name="e">Parameter</param>
        </member>
        <member name="M:KWEngine3.GLWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Wird ausgelöst, wenn das aktuelle Fenster geschlossen wird
            </summary>
        </member>
        <member name="M:KWEngine3.GLWindow.OnKeyDown(OpenTK.Windowing.Common.KeyboardKeyEventArgs)">
            <summary>
            Event-Handler, der ausgelöst wird, wenn eine Taste im Fenster gedrückt wird
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:KWEngine3.GLWindow.SetWorld(KWEngine3.World)">
            <summary>
            Setzt eine Welt für das Fenster zur Anzeige und initialisiert diese
            </summary>
            <param name="w">zu setzende Welt</param>
        </member>
        <member name="P:KWEngine3.GLWindow.Width">
            <summary>
            Fensterbreite (Inhalt) in Pixeln
            </summary>
        </member>
        <member name="P:KWEngine3.GLWindow.Height">
            <summary>
            Fensterhöhe (Inhalt) in Pixeln
            </summary>
        </member>
        <member name="P:KWEngine3.GLWindow.Center">
            <summary>
            Gibt die (relative) Mitte des Fensters in Pixeln an
            </summary>
        </member>
        <member name="M:KWEngine3.GLWindow.SetCursor(System.String)">
            <summary>
            Ersetzt den aktuellen Mauscursor durch den angegebenen Cursor
            </summary>
            <param name="cursorName">Name, unter dem der Cursor importiert wurde (wenn dieser Wert null ist, wird der Standardcursor geladen)</param>
        </member>
        <member name="M:KWEngine3.GLWindow.LoadCursorImage(System.String,System.String,System.Single,System.Single)">
            <summary>
            Importiert eine eigene Mauscursorgrafik und legt die Grafik unter dem angegebenen Namen in der Engine-Datenbank ab (gültige Dateiformate: PNG, CUR)
            </summary>
            <param name="name">Name der Grafik</param>
            <param name="filename">Relativer Pfad zu der zu importierenden Datei</param>
            <param name="tipX">Relative X-Position der Cursorspitze (von 0 bis 1, Standardwert: 0.5f)</param>
            <param name="tipY">Relative Y-Position der Cursorspitze (von 0 bis 1, Standardwert: 0.5f)</param>
        </member>
        <member name="T:KWEngine3.Helper.FlowField">
            <summary>
            Klasse zum Erstellen einer FlowField-Instanz für KI-Navigation
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.FlowField.GridCellCount">
            <summary>
            Anzahl der Zellen im Feld (in allen drei Dimensionen, wobei nur X- und Z-Dimension zählen)
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.FlowField.CellRadius">
            <summary>
            Radius einer Zelle
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.FlowField.Center">
            <summary>
            Mittelpunkt der FlowField-Instanz
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.FlowField.IsVisible">
            <summary>
            Gibt an, ob die Instanz zu Debugging-Zwecken sichtbar gemacht werden soll
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.FlowField.TargetPosition">
            <summary>
            Gibt die letztbekannte Zielposition innerhalb des Feldes an
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.FlowField.Mode">
            <summary>
            Messmodus für die Erstellung der Streckenkosten (Simple oder Box)
            </summary>
        </member>
        <member name="M:KWEngine3.Helper.FlowField.#ctor(System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32,KWEngine3.FlowFieldMode,System.Type[])">
            <summary>
            Erzeugt ein FlowField für die angegebenen GameObject-Typen
            </summary>
            <param name="positionX">X-Koordinate des Mittelpunkts</param>
            <param name="positionY">Y-Koordinate des Mittelpunkts</param>
            <param name="positionZ">Z-Koordinate des Mittelpunkts</param>
            <param name="cellCountX">Anzahl Zellen in X-Richtung</param>
            <param name="cellCountZ">Anzahl Zellen in Z-Richtung</param>
            <param name="cellRadius">Radius je Zelle</param>
            <param name="fieldHeight">Höhe des Felds</param>
            <param name="mode">Genauigkeit bei der Messung der Hindernisse (Simple oder Box)</param>
            <param name="types">Liste der Klassen, die das FlowField scannen soll</param>
        </member>
        <member name="M:KWEngine3.Helper.FlowField.#ctor(OpenTK.Mathematics.Vector3,System.Int32,System.Int32,System.Single,System.Int32,KWEngine3.FlowFieldMode,System.Type[])">
            <summary>
            Erzeugt ein FlowField für die angegebenen GameObject-Typen
            </summary>
            <param name="center">Mittelpunkt des Felds</param>
            <param name="cellCountX">Anzahl Zellen in X-Richtung</param>
            <param name="cellCountZ">Anzahl Zellen in Z-Richtung</param>
            <param name="cellRadius">Radius je Zelle (minimum: 0.1f)</param>
            <param name="fieldHeight">Höhe des Felds</param>
            <param name="mode">Genauigkeit bei der Messung der Hindernisse (Simple oder Box)</param>
            <param name="types">Liste der Klassen, die das FlowField scannen soll</param>
            <exception cref="T:System.Exception">Eine genannte Klasse erbt nicht von GameObject</exception>
        </member>
        <member name="M:KWEngine3.Helper.FlowField.ContainsXZ(KWEngine3.GameObjects.GameObject)">
            <summary>
            Prüft anhand der XZ-Achsen, ob ein Objekt ansatzweise innerhalb des Feldes liegt
            </summary>
            <param name="g">zu prüfendes Objekt</param>
            <returns>true, wenn das Objekt im Feld liegt</returns>
        </member>
        <member name="M:KWEngine3.Helper.FlowField.ContainsXZ(OpenTK.Mathematics.Vector3)">
            <summary>
            Prüft anhand der XZ-Achsen, ob eine Position innerhalb des Feldes liegt
            </summary>
            <param name="position">zu prüfende Position</param>
            <returns>true, wenn die Position im Feld liegt</returns>
        </member>
        <member name="M:KWEngine3.Helper.FlowField.Contains(KWEngine3.GameObjects.GameObject)">
            <summary>
            Prüft, ob ein Objekt ansatzweise innerhalb des Feldes liegt
            </summary>
            <param name="g">zu prüfendes Objekt</param>
            <returns>true, wenn das Objekt im Feld liegt</returns>
        </member>
        <member name="M:KWEngine3.Helper.FlowField.Contains(OpenTK.Mathematics.Vector3)">
            <summary>
            Prüft, ob eine Position innerhalb des Feldes liegt
            </summary>
            <param name="position">zu prüfende Position</param>
            <returns>true, wenn die Position im Feld liegt</returns>
        </member>
        <member name="M:KWEngine3.Helper.FlowField.Update">
            <summary>
            Führt einen Scan über alle im FlowField liegenden Objekte durch und berechnet die Wegkosten pro Knoten neu
            </summary>
            <remarks>
            Die Ausführung dieser Methode ist immer dann notwendig, wenn sich die Position, Rotation oder Skalierung eines 
            für das FlowField relevanten Objekts ändert
            </remarks>
        </member>
        <member name="M:KWEngine3.Helper.FlowField.SetTarget(OpenTK.Mathematics.Vector3)">
            <summary>
            Berechnet die Richungsanweisungen im gesamten FlowField für die neue Zielposition
            </summary>
            <param name="position">Neue Positionsangabe</param>
        </member>
        <member name="M:KWEngine3.Helper.FlowField.GetBestDirectionForPosition(OpenTK.Mathematics.Vector3)">
            <summary>
            Gibt die bestmögliche Bewegungsrichtung gemäß der aktuellen Position zurück
            </summary>
            <param name="position">aktuelle Position</param>
            <returns>bestmögliche Bewegungsrichtung</returns>
        </member>
        <member name="M:KWEngine3.Helper.FlowField.IsPositionInsideDestinationCell(OpenTK.Mathematics.Vector3)">
            <summary>
            Gibt an, ob die übergebene Position in der Zielzelle liegt (falls festgelegt)
            </summary>
            <param name="position">Zu prüfende Position</param>
            <returns>true, wenn die Position in der Zielzelle liegt</returns>
        </member>
        <member name="P:KWEngine3.Helper.FlowField.HasTarget">
            <summary>
            Gibt an, ob derzeit ein Zielpunkt im FlowField gesetzt ist
            </summary>
        </member>
        <member name="M:KWEngine3.Helper.FlowField.UnsetTarget">
            <summary>
            Löscht ein aktuell festgesetztes Ziel im FlowField
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.HelperDDS.BitmapImage">
            <summary>
            Returns a System.Imaging.Bitmap containing the DDS image.
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.HelperDDS.IsValid">
            <summary>
            Returns the DDS image is valid format.
            </summary>
        </member>
        <member name="T:KWEngine3.Helper.HelperDDS.PixelFormat">
            <summary>
            Various pixel formats/compressors used by the DDS image.
            </summary>
        </member>
        <member name="F:KWEngine3.Helper.HelperDDS.PixelFormat.RGBA">
            <summary>
            32-bit image, with 8-bit red, green, blue and alpha.
            </summary>
        </member>
        <member name="F:KWEngine3.Helper.HelperDDS.PixelFormat.RGB">
            <summary>
            24-bit image with 8-bit red, green, blue.
            </summary>
        </member>
        <member name="F:KWEngine3.Helper.HelperDDS.PixelFormat.DXT1">
            <summary>
            16-bit DXT-1 compression, 1-bit alpha.
            </summary>
        </member>
        <member name="F:KWEngine3.Helper.HelperDDS.PixelFormat.DXT2">
            <summary>
            DXT-2 Compression
            </summary>
        </member>
        <member name="F:KWEngine3.Helper.HelperDDS.PixelFormat.DXT3">
            <summary>
            DXT-3 Compression
            </summary>
        </member>
        <member name="F:KWEngine3.Helper.HelperDDS.PixelFormat.DXT4">
            <summary>
            DXT-4 Compression
            </summary>
        </member>
        <member name="F:KWEngine3.Helper.HelperDDS.PixelFormat.DXT5">
            <summary>
            DXT-5 Compression
            </summary>
        </member>
        <member name="F:KWEngine3.Helper.HelperDDS.PixelFormat.THREEDC">
            <summary>
            3DC Compression
            </summary>
        </member>
        <member name="F:KWEngine3.Helper.HelperDDS.PixelFormat.ATI1N">
            <summary>
            ATI1n Compression
            </summary>
        </member>
        <member name="F:KWEngine3.Helper.HelperDDS.PixelFormat.UNKNOWN">
            <summary>
            Unknown pixel format.
            </summary>
        </member>
        <member name="T:KWEngine3.Helper.InvalidFileHeaderException">
            <summary>
            Thrown when an invalid file header has been encountered.
            </summary>
        </member>
        <member name="T:KWEngine3.Helper.NotADDSImageException">
            <summary>
            Thrown when the data does not contain a DDS image.
            </summary>
        </member>
        <member name="T:KWEngine3.Helper.UnknownFileFormatException">
            <summary>
            Thrown when there is an unknown compressor used in the DDS file.
            </summary>
        </member>
        <member name="T:KWEngine3.Helper.HelperGameObjectAttachment">
            <summary>
            Helferklasse für GameObject-Instanzen, die an deren GameObject-Instanzen angeheftet sind
            </summary>
        </member>
        <member name="M:KWEngine3.Helper.HelperGameObjectAttachment.SetPositionOffsetForAttachment(KWEngine3.GameObjects.GameObject,System.Single,System.Single,System.Single)">
            <summary>
            Setzt den relativen Abstand zum Elternobjekt
            </summary>
            <param name="attachedObject">Elternobjekt</param>
            <param name="x">x-Abstand</param>
            <param name="y">y-Abstand</param>
            <param name="z">z-Abstand</param>
        </member>
        <member name="M:KWEngine3.Helper.HelperGameObjectAttachment.SetPositionOffsetForAttachment(KWEngine3.GameObjects.GameObject,OpenTK.Mathematics.Vector3)">
            <summary>
            Setzt den relativen Abstand zum Elternobjekt
            </summary>
            <param name="attachedObject">Elternobjekt</param>
            <param name="offset">Abstand</param>
        </member>
        <member name="M:KWEngine3.Helper.HelperGameObjectAttachment.SetScaleForAttachment(KWEngine3.GameObjects.GameObject,System.Single)">
            <summary>
            Setzt die Größe des angehefteten Objekts, nachdem es an das Elternobjekt angeheftet wurde
            </summary>
            <param name="attachedObject">Angeheftetes Objekt</param>
            <param name="s">Gleichmäßige Skalierung in alle drei Achsenrichtungen</param>
        </member>
        <member name="M:KWEngine3.Helper.HelperGameObjectAttachment.SetScaleForAttachment(KWEngine3.GameObjects.GameObject,System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Größe des angehefteten Objekts, nachdem es an das Elternobjekt angeheftet wurde
            </summary>
            <param name="attachedObject">Angeheftetes Objekt</param>
            <param name="x">Skalierung in x-Richtung</param>
            <param name="y">Skalierung in y-Richtung</param>
            <param name="z">Skalierung in z-Richtung</param>
        </member>
        <member name="M:KWEngine3.Helper.HelperGameObjectAttachment.SetScaleForAttachment(KWEngine3.GameObjects.GameObject,OpenTK.Mathematics.Vector3)">
            <summary>
            Setzt die Größe des angehefteten Objekts, nachdem es an das Elternobjekt angeheftet wurde
            </summary>
            <param name="attachedObject">Angeheftetes Objekt</param>
            <param name="scale">Skalierung</param>
        </member>
        <member name="M:KWEngine3.Helper.HelperGameObjectAttachment.SetRotationForAttachment(KWEngine3.GameObjects.GameObject,System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Rotation des angehefteten Objekts, nachdem es an das Elternobjekt angeheftet wurde
            </summary>
            <param name="attachedObject">Angeheftetes Objekt</param>
            <param name="x">Skalierung um die lokale x-Achse in Grad</param>
            <param name="y">Skalierung um die lokale y-Achse in Grad</param>
            <param name="z">Skalierung um die lokale z-Achse in Grad</param>
        </member>
        <member name="T:KWEngine3.Helper.HelperGeneral">
            <summary>
            Helferklasse für Mathefunktionen
            </summary>
        </member>
        <member name="M:KWEngine3.Helper.HelperGeneral.IsModelFile(System.String)">
            <summary>
            Prüft, ob der Dateiname darauf hindeutet, dass ein 3D-Modell in der Datei gespeichert ist
            </summary>
            <param name="file">Dateiname (inkl. Dateiendung)</param>
            <returns>true, wenn es sich um eine Datei mit 3D-Modell handelt</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperGeneral.IsModelFile(System.IO.FileInfo)">
            <summary>
            Prüft, ob der Dateiname darauf hindeutet, dass ein 3D-Modell in der Datei gespeichert ist
            </summary>
            <param name="file">Datei als FileInfo-Objekt</param>
            <returns>true, wenn es sich um eine Datei mit 3D-Modell handelt</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperGeneral.NormalizeValueToRange(System.Single,System.Single,System.Single)">
            <summary>
            Normalisiert einen Wert innerhalb eines Bereichs auf den Wertebereich 0 bis 1
            </summary>
            <param name="value">zu normalisierender Wert</param>
            <param name="rangeMin">Bereichsminimum</param>
            <param name="rangeMax">Bereichsmaximum</param>
            <returns></returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperGeneral.ScaleToRange(System.Int32,System.Int32,System.Single[])">
            <summary>
            Skaliert die Werte innerhalb eines float-Arrays, so dass sie in den durch lowerBound und upperBound angegebenen Bereich passen
            </summary>
            <param name="lowerBound">Untergrenze</param>
            <param name="upperBound">Obergrenze</param>
            <param name="array">Werte (Achtung: Werden in-place manipuliert!)</param>
        </member>
        <member name="M:KWEngine3.Helper.HelperGeneral.Clamp(System.Single,System.Single,System.Single)">
            <summary>
            Beschneidet Werte
            </summary>
            <param name="v">Wert</param>
            <param name="l">Untergrenze</param>
            <param name="u">Obergrenze</param>
            <returns></returns>
        </member>
        <member name="T:KWEngine3.Helper.HelperIntersection">
            <summary>
            Helferklasse für Kollisionen und Schnittoperationen
            </summary>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.GetIntersectionPointOnPlaneFromScreenSpace(System.Int32,System.Int32,KWEngine3.Plane,System.Single)">
            <summary>
            Ermittelt für die angegebenen Bildschirmkoordinaten, wo diese Koordinaten in der 3D-Welt liegen
            </summary>
            <param name="screenposX">X-Bildschirmkoordinate (relativ zum Anwendungsfenster, in Pixeln)</param>
            <param name="screenposY">Y-Bildschirmkoordinate (relativ zum Anwendungsfenster, in Pixeln)</param>
            <param name="planeNormal">Gibt an, wie die Fläche ausgerichtet ist, auf die die Bildschirmkoordinate projeziert wird</param>
            <param name="planeHeight">Gibt die Höhe der Fläche an, auf die die Bildschirmkoordinate projeziert wird</param>
            <returns>Schnittpunkt in 3D-Weltkoordinaten</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.IsAnyObjectBelowPositionFast(OpenTK.Mathematics.Vector3,System.Single,System.Type[])">
            <summary>
            Schießt einen Strahl von der angegebene Position nach unten und prüft, ob die quaderförmige Hitbox eines Objekts des angegebenen Typs geschnitten wird
            </summary>
            <remarks>Diese Variante prüft nur grobe Hitbox-Werte und eignet sich, wenn ein ungenaues Ergebnis ausreicht oder die zu prüfenden Objekte allesamt achsenparallel ausgerichtet sind</remarks>
            <param name="position">Startposition des Strahls</param>
            <param name="rayLength">Positive Maximallänge des Teststrahls (0 = unendlich)</param>
            <param name="typelist">Typen für die getestet werden soll [z.B. typeof(GameObject) oder typeof(Floor)]</param>
            <returns>Ergebnis der Strahlenprüfung</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.IsAnyObjectBelowPosition(OpenTK.Mathematics.Vector3,System.Single,System.Type[])">
            <summary>
            Schießt einen Strahl von der angegebene Position nach unten und prüft, ob irgendein anderes Objekt der Welt davon getroffen wird
            </summary>
            <param name="position">Startposition des Strahls</param>
            <param name="rayLength">Positive Maximallänge des Teststrahls (0 = unendlich)</param>
            <param name="typelist">Typen für die getestet werden soll [z.B. typeof(GameObject) oder typeof(Floor)]</param>
            <returns>Ergebnis des Raytracings</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.GetIntersectionsForObjectWithOffset(KWEngine3.GameObjects.GameObject,System.Single,System.Single,System.Single)">
            <summary>
            Prüft auf Kollisionen des übergebenen Objekts mit anderen Objekten unter Berücksichtigung einer Verschiebung (offset)
            </summary>
            <param name="caller">Das Objekt für das auf Kollisionen geprüft werden soll</param>
            <param name="offsetX">Verschiebung entlang der globalen X-Achse</param>
            <param name="offsetY">Verschiebung entlang der globalen Y-Achse</param>
            <param name="offsetZ">Verschiebung entlang der globalen Z-Achse</param>
            <returns>Liste mit Kollisionsobjekten</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.GetIntersectionsForObjectWithOffset(KWEngine3.GameObjects.GameObject,OpenTK.Mathematics.Vector3)">
            <summary>
            Prüft auf Kollisionen des übergebenen Objekts mit anderen Objekten unter Berücksichtigung einer Verschiebung (offset)
            </summary>
            <param name="caller">Das Objekt für das auf Kollisionen geprüft werden soll</param>
            <param name="offset">Verschiebung entlang der globalen XYZ-Achse</param>
            <returns>Liste mit Kollisionsobjekten</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.GetPositionOnTerrainBelow(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3@,System.Single@)">
            <summary>
            Prüft die Position eines Terrain-Objekts unterhalb der angegebenen Position
            </summary>
            <param name="position">Position für die getestet werden soll</param>
            <param name="intersectionPoint">gemessener Schnittpunkt mit dem Terrain</param>
            <param name="distance">Distanz von der angegebenen Position zum Schnittpunkt</param>
            <returns>true, wenn gerade ein Terrain unter der angegebenen Position liegt, andernfalls false</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.GetPositionOnTerrainBelow(System.Single,System.Single,System.Single,OpenTK.Mathematics.Vector3@,System.Single@)">
            <summary>
            Prüft die Position eines Terrain-Objekts unterhalb der angegebenen Position
            </summary>
            <param name="positionX">X-Komponente der Position für die getestet werden soll</param>
            <param name="positionY">Y-Komponente der Position für die getestet werden soll</param>
            <param name="positionZ">Z-Komponente der Position für die getestet werden soll</param>
            <param name="intersectionPoint">gemessener Schnittpunkt mit dem Terrain</param>
            <param name="distance">Distanz von der angegebenen Position zum Schnittpunkt</param>
            <returns>true, wenn gerade ein Terrain unter der angegebenen Position liegt, andernfalls false</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.GetIntersectionsForAllObjects``1(KWEngine3.GameObjects.GameObject)">
            <summary>
            Prüft auf Kollisionen für ein Objekt g in Kombinationen mit allen (auch geplanten) anderen GameObject-Instanzen
            </summary>
            <typeparam name="T"></typeparam>
            <param name="gameObject">Instanz, für die auf Kollisionen geprüft werden soll</param>
            <returns>Liste der Kollisionen</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.GetIntersectionsForAllObjects(KWEngine3.GameObjects.GameObject,System.Type[])">
            <summary>
            Prüft auf Kollisionen für ein Objekt g in Kombinationen mit allen (auch geplanten) anderen GameObject-Instanzen
            </summary>
            <param name="gameObject">Instanz, für die auf Kollisionen geprüft werden soll</param>
            <param name="typelist">Auflistung der zu prüfenden Datentypen (müssen Unterklassen von GameObject sein)</param>
            <returns>Liste der Kollisionen</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.GetCollisionCandidateCountFor(KWEngine3.GameObjects.GameObject)">
            <summary>
            Gibt die aktuelle Anzahl potenzieller Kollisionskandidaten an, die sich in der Nähe des Objekts befinden
            </summary>
            <param name="g">zu prüfendes Objekt</param>
            <returns>Anzahl potenzieller Kollisionskandidaten</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.GetCollisionCandidateNamesFor(KWEngine3.GameObjects.GameObject)">
            <summary>
            Gibt zu Testzwecken eine Zeichenkette mit den Namen aller für die Kollsionsbehandlung 
            untersuchten GameObject-Instanzen zurück
            </summary>
            <param name="g">betroffenes GameObject</param>
            <returns>Liste der Instanznamen</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.GetMouseRay">
            <summary>
            Berechnet die Richtung von der Kameraposition zum Mauszeiger in 3D
            </summary>
            <returns>Blickrichtung der Kamera in Richtung des Mauszeigers</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.GetMouseOrigin">
            <summary>
            Gibt die aktuellen Mauszeigerursprungskoordinaten zurück (entspricht immer der Kameraposition)
            </summary>
            <returns>Mauszeigerursprungskoordinaten</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.GetMouseIntersectionPointOnAnyTerrain(OpenTK.Mathematics.Vector3@)">
            <summary>
            Berechnet den ungefähren Schnittpunkt des Mauszeigers mit einem Terrain-Objekt.
            </summary>
            <param name="intersectionPoint">Ausgabe des Schnittpunkts (wenn der Mauszeiger über einem Terrain-Objekt liegt - sonst (0|0|0))</param>
            <returns>true, wenn der Mauszeiger über einem Terrain-Objekt liegt</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.GetMouseIntersectionPointOnPlane(KWEngine3.Plane,System.Single)">
            <summary>
            Konvertiert 2D-Mauskoordinaten in 3D-Koordinaten
            </summary>
            <param name="planeNormal">Kollisionsebene (Standard: Camera)</param>
            <param name="planeHeight">Höhe der Kollisionsebene</param>
            <returns>3D-Mauskoordinaten</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.GetMouseIntersectionPointOnPlane(OpenTK.Mathematics.Vector3,KWEngine3.Plane)">
            <summary>
            Erfragt den Kollisionspunkt des Mauszeigers mit der 3D-Welt auf Höhe der angegebenen Position
            </summary>
            <param name="position">Position</param>
            <param name="plane">Kollisionsebene (Standard: Camera)</param>
            <returns></returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.IsMouseCursorOnAny``1(``0@,System.Boolean)">
            <summary>
            Prüft, ob der Mauszeiger über einem Objekt des angegebenen Typs liegt und gibt ggf. diese Instanz über den out-Parameter zurück
            </summary>
            <remarks>
            Achtung: Methode ist sehr präzise aber daher auch sehr langsam! Für schnellere Ergebnisse sollte die Methode IsMouseCursorOnAnyFast() verwendet werden
            </remarks>
            <typeparam name="T">Beliebige Unterklasse von GameObject</typeparam>
            <param name="gameObject">Gefundene GameObject-Instanz (nur gefüllt, wenn der Rückgabewert true ist)</param>
            <param name="includeNonCollisionObjects">Sollen auch Objekte einbezogen werden, die nicht als Kollisionsobjekte markiert sind?</param>
            <returns>true, wenn der Mauscursor auf einem Objekt der angegebenen Art ist</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.IsMouseCursorOnAnyFast``1(``0@,System.Boolean)">
            <summary>
            Prüft, ob der Mauszeiger über der achsenparallelen Hitbox eines Objekts des angegebenen Typs liegt und gibt ggf. diese Instanz über den out-Parameter zurück
            </summary>
            <remarks>
            Achtung: Methode ist sehr performant aber sehr ungenau! Für pixelgenaue Ergebnisse sollte stattdessen die Methode IsMouseCursorOnAny() verwendet werden.
            </remarks>
            <typeparam name="T">Beliebige Unterklasse von GameObject</typeparam>
            <param name="gameObject">Gefundene GameObject-Instanz (nur gefüllt, wenn der Rückgabewert true ist)</param>
            <param name="includeNonCollisionObjects">Sollen auch Objekte einbezogen werden, die nicht als Kollisionsobjekte markiert sind?</param>
            <returns>true, wenn der Mauscursor auf einem Objekt der angegebenen Art ist</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.RayTraceObjectsForViewVectorFast(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,KWEngine3.GameObjects.GameObject,System.Single,System.Boolean,System.Type[])">
            <summary>
            Prüft, ob der angegebene Strahl (origin, direction) auf die Hitbox von Objekten bestimmter Klassen trifft
            </summary>
            <param name="origin">Ausgangspunkt des Strahls</param>
            <param name="direction">Richtung des Strahls (MUSS normalisiert sein)</param>
            <param name="caller">Aufruferinstanz, damit die Instanz sich nicht selbst überprüft</param>
            <param name="maxDistance">maximale Länge des Strahls</param>
            <param name="typelist">Klassen, deren Objekte geprüft werden sollen (mehrere möglich)</param>
            <param name="sort">Wenn true, wird die Ergebnisliste aufsteigend nach Objektentfernung sortiert</param>
            <returns>Liste der Strahlentreffer</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.RayTraceObjectsForViewVectorFastest(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,KWEngine3.GameObjects.GameObject,System.Single,System.Boolean,System.Type[])">
            <summary>
            Prüft, ob der angegebene Strahl (origin, direction) auf die achsenparallele Hitbox von Objekten bestimmter Klassen trifft
            </summary>
            <param name="origin">Ausgangspunkt des Strahls</param>
            <param name="direction">Richtung des Strahls (MUSS normalisiert sein)</param>
            <param name="caller">Aufruferinstanz, damit die Instanz sich nicht selbst überprüft</param>
            <param name="maxDistance">maximale Länge des Strahls</param>
            <param name="typelist">Klassen, deren Objekte geprüft werden sollen (mehrere möglich)</param>
            <param name="sort">Wenn true, wird die Ergebnisliste aufsteigend nach Objektentfernung sortiert</param>
            <returns>Liste der Strahlentreffer</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.RayTraceObjectsForViewVector(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single,System.Boolean,KWEngine3.GameObjects.GameObject,System.Type[])">
            <summary>
            Prüft, welche Objekte (bzw. deren Hitboxen) in der angegebenen Blickrichtung liegen und gibt diese als Liste zurück
            </summary>
            <param name="origin">Ursprung des Strahls</param>
            <param name="direction">Blickrichtung des Strahls (MUSS normalisiert sein!)</param>
            <param name="maxDistance">Objekte weiter weg als dieser Wert werden ignoriert (Standard: 0 = unendliche Entfernung)</param>
            <param name="sort">true, falls die Objekte ihrer Entfernung nach aufsteigend sortiert werden sollen</param>
            <param name="caller">Aufrufendes Objekt, das bei Nennung ignoriert wird</param>
            <param name="typelist">Liste der Klassen, die getestet werden sollen</param>
            <returns>Liste der GameObjectDistance-Instanzen</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.RaytraceObject(KWEngine3.GameObjects.GameObject,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.String@,System.Boolean)">
            <summary>
            Berechnet den Schnittpunkt eines Strahls mit dem angegebenen GameObject
            </summary>
            <param name="g">zu prüfendes GameObject</param>
            <param name="rayOrigin">Ursprungsposition des Strahls</param>
            <param name="rayDirection">Richtung des Strahls (MUSS normalisiert sein!)</param>
            <param name="intersectionPoint">Schnittpunkt (Ausgabe)</param>
            <param name="faceNormal">Ebene des Schnittpunkts (Ausgabe)</param>
            <param name="hitboxname">Name der getroffenen Hitbox</param>
            <param name="includeNonCollisionObjects">Sollen Objekte berücksichtigt werden, die NICHT als Kollisionsobjekt markiert sind?</param>
            <returns>true, wenn der Strahl das GameObject getroffen hat</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.RaytraceObjectFast(KWEngine3.GameObjects.GameObject,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Prüft, ob ein Strahl die Hitbox der angegebenen GameObject-Instanz trifft
            </summary>
            <remarks>
            Diese Methode ist schnell aber unpräzise, da sie sich an der quaderförmigen Hitbox des Objekts orientiert.
            </remarks>
            <param name="g">zu prüfendes GameObject</param>
            <param name="rayOrigin">Ursprungsposition des Strahls</param>
            <param name="rayDirection">Richtung des Strahls (MUSS normalisiert sein!)</param>
            <returns>true, wenn der Strahl das GameObject trifft</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.RaytraceObjectFastest(KWEngine3.GameObjects.GameObject,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Prüft, ob ein Strahl die achsenparallele Hitbox der angegebenen GameObject-Instanz trifft
            </summary>
            <remarks>
            Diese Methode ist schnell aber sehr unpräzise, da sie die Rotation von Objekten nur näherungsweise einbezieht.
            Es kann vermehrt zu falsch-positiven Rückmeldungen kommen.
            </remarks>
            <param name="g">zu prüfendes GameObject</param>
            <param name="rayOrigin">Ursprungsposition des Strahls</param>
            <param name="rayDirection">Richtung des Strahls (MUSS normalisiert sein!)</param>
            <returns>true, wenn der Strahl das GameObject trifft</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.IsPointInsideBox(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single,System.Single,System.Single)">
            <summary>
            Prüft, ob ein Punkt innerhalb einer Box liegt.
            </summary>
            <param name="pos">Zu prüfender Punkt</param>
            <param name="center">Zentrum der Box</param>
            <param name="width">Breite der Box</param>
            <param name="height">Breite der Box</param>
            <param name="depth">Breite der Box</param>
            <returns>true, wenn der Punkt innerhalb der Box liegt</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.IsPointInsideRectangle(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single,System.Single)">
            <summary>
            Prüft, ob ein Punkt innerhalb eines Rechtecks auf XZ-Ebene liegt.
            </summary>
            <param name="pos">Zu prüfender Punkt</param>
            <param name="center">Zentrum des Rechtecks</param>
            <param name="width">Breite des Rechtecks</param>
            <param name="depth">Breite des Rechtecks</param>
            <returns>true, wenn der Punkt innerhalb des Rechtecks liegt</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.IsPointInsideSphere(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single)">
            <summary>
            Prüft, ob sich ein Punkt innerhalb einer Kugel befindet
            </summary>
            <param name="point">zu prüfender Punkt</param>
            <param name="sphereCenter">Zentrum der Kugel</param>
            <param name="diameter">Durchmesser der Kugel</param>
            <returns></returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.IsPointInsideGameObject(OpenTK.Mathematics.Vector3,KWEngine3.GameObjects.GameObject)">
            <summary>
            Prüft, ob sich ein Punkt innerhalb der Hitbox einer GameObject-Instanz befindet
            </summary>
            <param name="point">Zu prüfender Punkt in der Welt</param>
            <param name="g">GameObject-Instanz für die die Prüfung durchgeführt werden soll</param>
            <returns>true, wenn sich der Punkt innerhalb der Hitbox befindet</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.IsMouseCursorInsideHitbox(KWEngine3.GameObjects.GameObject,System.Boolean)">
            <summary>
            Erfragt, ob der Mauszeiger auf dem Objekt liegt (langsam, da pixelgenaue Prüfung)
            </summary>
            <param name="g">Zu untersuchendes GameObject</param>
            <param name="includeNonCollisionObjects">Sollen das Objekt auch dann untersucht werden, wenn es kein Kollisionsobjekt ist?</param>
            <returns>true, wenn der Mauszeiger auf dem Objekt liegt</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperIntersection.IsMouseCursorInsideHitboxFast(KWEngine3.GameObjects.GameObject,System.Boolean)">
            <summary>
            Erfragt, ob der Mauszeiger auf dem Objekt liegt (schnell, aber prüft dafür nur die achsenparallele Hitbox)
            </summary>
            <param name="g">Zu untersuchendes GameObject</param>
            <param name="includeNonCollisionObjects">Sollen das Objekt auch dann untersucht werden, wenn es kein Kollisionsobjekt ist?</param>
            <returns>true, wenn der Mauszeiger auf dem Objekt liegt</returns>
        </member>
        <member name="T:KWEngine3.Helper.HelperRandom">
            <summary>
            Helferklasse für Zufallszahlen
            </summary>
        </member>
        <member name="F:KWEngine3.Helper.HelperRandom.generator">
            <summary>
            Generatorfeldvariable
            </summary>
        </member>
        <member name="M:KWEngine3.Helper.HelperRandom.GetRandomNumber(System.Single,System.Single)">
            <summary>
            Berechnet eine Zufallszahl zwischen zwei Werten (beide inklusive)
            </summary>
            <param name="min">(inklusive) Untergrenze</param>
            <param name="max">(inklusive) Obergrenze</param>
            <returns>Zufallszahl</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperRandom.GetRandomNumber(System.Int32,System.Int32)">
            <summary>
            Berechnet eine Zufallszahl zwischen zwei Ganzzahlwerten (beide inklusive)
            </summary>
            <param name="min">(inklusive) Untergrenze</param>
            <param name="max">(inklusive) Obergrenze</param>
            <returns></returns>
        </member>
        <member name="T:KWEngine3.Helper.HelperRotation">
            <summary>
            Helferklasse für Rotationsberechnungen
            </summary>
        </member>
        <member name="M:KWEngine3.Helper.HelperRotation.SetMeshPreRotationYZX(KWEngine3.GameObjects.GameObject,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Vorab-Rotation eines Objekts für ein bestimmten Objektteil (Mesh) auf die angegebenen Gradzahlen (funktioniert nur für Objekte ohne Animationen)
            </summary>
            <remarks>Die Rotation wird in der Reihenfolge Y-&gt;Z-&gt;X durchgeführt</remarks>
            <param name="g">Betroffenes Objekt</param>
            <param name="meshId">Mesh-ID des 3D-Modells (beginnend bei 0)</param>
            <param name="rotX">Rotation um die X-Achse (in Grad)</param>
            <param name="rotY">Rotation um die Y-Achse (in Grad)</param>
            <param name="rotZ">Rotation um die Z-Achse (in Grad)</param>
        </member>
        <member name="M:KWEngine3.Helper.HelperRotation.AddMeshPreRotationX(KWEngine3.GameObjects.GameObject,System.Int32,System.Single)">
            <summary>
            Fügt einem bestimmten Mesh eines Objekts eine Rotation um die X-Achse zusätzlich zur bestehenden Rotation hinzu (funktioniert nur für Objekte ohne Animationen)
            </summary>
            <remarks>Die Rotation wird in der Reihenfolge Y-&gt;Z-&gt;X durchgeführt</remarks>
            <param name="g">Betroffenes GameObject</param>
            <param name="meshId">Mesh-ID des 3D-Modells (beginnend bei 0 für den ersten Mesh)</param>
            <param name="degrees">Hinzufügende Grad für die Achse</param>
        </member>
        <member name="M:KWEngine3.Helper.HelperRotation.AddMeshPreRotationY(KWEngine3.GameObjects.GameObject,System.Int32,System.Single)">
            <summary>
            Fügt einem bestimmten Mesh eines Objekts eine Rotation um die Y-Achse zusätzlich zur bestehenden Rotation hinzu (funktioniert nur für Objekte ohne Animationen)
            </summary>
            <remarks>Die Rotation wird in der Reihenfolge Y-&gt;Z-&gt;X durchgeführt</remarks>
            <param name="g">Betroffenes GameObject</param>
            <param name="meshId">Mesh-ID des 3D-Modells (beginnend bei 0 für den ersten Mesh)</param>
            <param name="degrees">Hinzufügende Grad für die Achse</param>
        </member>
        <member name="M:KWEngine3.Helper.HelperRotation.AddMeshPreRotationZ(KWEngine3.GameObjects.GameObject,System.Int32,System.Single)">
            <summary>
            Fügt einem bestimmten Mesh eines Objekts eine Rotation um die Z-Achse zusätzlich zur bestehenden Rotation hinzu (funktioniert nur für Objekte ohne Animationen)
            </summary>
            <remarks>Die Rotation wird in der Reihenfolge Y-&gt;Z-&gt;X durchgeführt</remarks>
            <param name="g">Betroffenes GameObject</param>
            <param name="meshId">Mesh-ID des 3D-Modells (beginnend bei 0 für den ersten Mesh)</param>
            <param name="degrees">Hinzufügende Grad für die Achse</param>
        </member>
        <member name="M:KWEngine3.Helper.HelperRotation.GetRotationForSlope(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Ermittelt die Rotation, die angenommen werden müsste, um sich entsprechend der durch slopeStart und slopeEnd beschriebenen Schräge auszurichten
            </summary>
            <param name="slopeStart">Anfangshöhe der Schräge</param>
            <param name="slopeEnd">Endhöhe der Schräge</param>
            <param name="currentLAV">Aktueller Look-At-Vektor des Objekts</param>
            <returns>Berechnete Rotation als Quaternion</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperRotation.GetAngleForSlope(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Erfragt den Steigungswinkel für die angegebenen beiden Punkte der Steigung
            </summary>
            <param name="slopeStart">Startpunkt der Steigung</param>
            <param name="slopeEnd">Endpunkt der Steigung</param>
            <returns>Steigungswinkel (in Grad)</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperRotation.RotateVector(OpenTK.Mathematics.Vector3,System.Single,KWEngine3.Plane)">
            <summary>
            Berechnet den Vektor, der entsteht, wenn der übergebene Vektor um die angegebenen Grad rotiert wird
            </summary>
            <param name="vector">zu rotierender Vektor</param>
            <param name="degrees">Rotation (in Grad)</param>
            <param name="plane">Einheitsvektor, um den rotiert wird</param>
            <returns>Rotierter Vektor</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperRotation.RotateVector(OpenTK.Mathematics.Vector3,System.Single,KWEngine3.Axis)">
            <summary>
            Berechnet den Vektor, der entsteht, wenn der übergebene Vektor um die angegebenen Grad rotiert wird
            </summary>
            <param name="vector">zu rotierender Vektor</param>
            <param name="degrees">Rotation (in Grad)</param>
            <param name="axis">Achse, um den rotiert wird</param>
            <returns>Rotierter Vektor</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperRotation.RotateVectorByQuaternion(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Quaternion)">
            <summary>
            Rotiert einen Vektor mit Hilfe der angegebenen Quaternion (Hamilton-Produkt)
            </summary>
            <param name="source">zu rotierender Vektor</param>
            <param name="rotation">Rotation als Quaternion</param>
            <returns>rotierter Vektor</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperRotation.ConvertQuaternionToEulerAngles(OpenTK.Mathematics.Quaternion)">
            <summary>
            Konvertiert eine in Quaternion angegebene Rotation in eine XYZ-Rotation (in Grad)
            </summary>
            <param name="q">zu konvertierendes Quaternion</param>
            <returns>XYZ-Rotation als Vector3 (in Grad)</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperRotation.CalculateRotationForArcBallCamera(OpenTK.Mathematics.Vector3,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Berechnet die neue Kameraposition in Abhängigkeit der Mausbewegung.
            </summary>
            <param name="pivot">Dreh- und Angelpunkt</param>
            <param name="distance">Distanz zum Dreh- und Angelpunkt</param>
            <param name="degreesLeftRight">Grad der Rotation nach links oder rechts</param>
            <param name="degreesUpDown">Grad der Rotation nach unten oder oben</param>
            <param name="invertX">invertiert die Links-Rechts-Rotation, wenn aktiv</param>
            <param name="invertY">invertiert die Oben-Unten-Rotation, wenn aktiv</param>
            <returns>Neue Kameraposition</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperRotation.CalculatePositionAfterRotationAroundPointOnAxis(OpenTK.Mathematics.Vector3,System.Single,System.Single,KWEngine3.Axis)">
            <summary>
            Berechnet die Position eines Punkts, der um einen angegeben Punkt entlang einer Achse rotiert wird
            </summary>
            <param name="point">Mittelpunkt der Rotation</param>
            <param name="distance">Distanz zum Mittelpunkt</param>
            <param name="degrees">Grad der Rotation</param>
            <param name="axis">Achse der Rotation (Standard: Y)</param>
            <returns>Position des rotierten Punkts</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperRotation.CalculatePositionAfterRotationAroundPointOnAxis(OpenTK.Mathematics.Vector3,System.Single,System.Single,OpenTK.Mathematics.Vector3)">
            <summary>
            Berechnet die Position eines Punkts, der um einen angegeben Punkt entlang einer Achse rotiert wird
            </summary>
            <param name="point">Mittelpunkt der Rotation</param>
            <param name="distance">Distanz zum Mittelpunkt</param>
            <param name="degrees">Grad der Rotation</param>
            <param name="axis">Achse der Rotation (normalisiert!)</param>
            <returns>Position des rotierten Punkts</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperRotation.GetRotationForPoint(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Erfragt die Rotation, die nötig wäre, damit eine Quelle zu einem Ziel guckt
            </summary>
            <param name="source">Quellposition</param>
            <param name="target">Zielposition</param>
            <returns>Rotation</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperRotation.GetQuaternionForEulerDegrees(System.Single,System.Single,System.Single)">
            <summary>
            Berechnet ein Quaternion aus den übergebenen Achsenrotationen (in Grad).
            (Die Rotationsreihenfolge ist Z -> Y -> X)
            </summary>
            <param name="x">x-Achsenrotation (in Grad)</param>
            <param name="y">y-Achsenrotation (in Grad)</param>
            <param name="z">z-Achsenrotation (in Grad)</param>
            <returns>Kombinierte Rotation als Quaternion-Instanz</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperRotation.GetRotationToMatchSurfaceNormal(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Berechnet die Rotation (als Quaternion), auf die ein GameObject gesetzt werden müsste, um entsprechend der aktuellen Ausrichtung 
            auf dem durch den Ebenenvektor (surface normal) definierten Boden gerade zu stehen
            </summary>
            <param name="lav">Aktueller Look-At-Vektor</param>
            <param name="surfaceNormal">Ebenenvektor</param>
            <returns>Neue zur Ebene passende Rotation (als Quaternion)</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperRotation.GetRotationTowardsCamera">
            <summary>
            Gibt die Rotation für ein Objekt an, die es benötigt, um in Richtung der Kamera ausgerichtet zu sein (Billboarding)
            </summary>
            <returns>Rotation</returns>
        </member>
        <member name="T:KWEngine3.Helper.HelperVector">
            <summary>
            Helferklasse für Vektoroperationen
            </summary>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.IsVectorPointingUpward(OpenTK.Mathematics.Vector3)">
            <summary>
            Prüft, ob die Richtung dieses Vektors hauptsächlich in die positive Y-Achse zeigt (also aufwärts)
            </summary>
            <param name="v">zu prüfender Vektor</param>
            <returns>true, wenn dieser Vektor hauptsächlich nach oben zeigt</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.GetDeltaBetweenVectors(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Berechnet den Vektor, der vom angegebenen Startpunkt zum angegebenen Endpunkt zeigt
            </summary>
            <param name="start">Startpunkt</param>
            <param name="end">Endpunkt</param>
            <returns>Delta-Vektor</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.GetDeltaBetweenVectorsXZ(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Berechnet den Vektor auf XZ-Ebene, der vom angegebenen Startpunkt zum angegebenen Endpunkt zeigt
            </summary>
            <param name="start">Startpunkt</param>
            <param name="end">Endpunkt</param>
            <returns>Delta-Vektor</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.GetDeltaBetweenVectorsXY(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Berechnet den Vektor auf XY-Ebene, der vom angegebenen Startpunkt zum angegebenen Endpunkt zeigt
            </summary>
            <param name="start">Startpunkt</param>
            <param name="end">Endpunkt</param>
            <returns>Delta-Vektor</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.GetDistanceBetweenVectors(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Berechnet die Distanz zwischen zwei Vektoren
            </summary>
            <param name="start">Startpunkt</param>
            <param name="end">Endpunkt</param>
            <returns>Distanz</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.GetDistanceBetweenVectorsXZ(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Berechnet die Distanz zwischen zwei Vektoren auf der XZ-Ebene
            </summary>
            <param name="start">Startpunkt</param>
            <param name="end">Endpunkt</param>
            <returns>Distanz</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.GetDistanceBetweenVectorsXY(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Berechnet die Distanz zwischen zwei Vektoren auf der XY-Ebene
            </summary>
            <param name="start">Startpunkt</param>
            <param name="end">Endpunkt</param>
            <returns>Distanz</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.GetDirectionFromVectorToVector(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Berechnet den normalisierten Richtungsvektor, der vom Startpunkt zum Endpunkt führt
            </summary>
            <param name="start">Startpunkt</param>
            <param name="end">Endpunkt</param>
            <returns>Richtungsvektor (normalisiert)</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.GetDirectionFromVectorToVectorXZ(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Berechnet den normalisierten Richtungsvektor, der auf XZ-Ebene vom Startpunkt zum Endpunkt führt
            </summary>
            <param name="start">Startpunkt</param>
            <param name="end">Endpunkt</param>
            <returns>Richtungsvektor (normalisiert)</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.GetDirectionFromVectorToVectorXY(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Berechnet den normalisierten Richtungsvektor, der auf XY-Ebene vom Startpunkt zum Endpunkt führt
            </summary>
            <param name="start">Startpunkt</param>
            <param name="end">Endpunkt</param>
            <returns>Richtungsvektor (normalisiert)</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.ReflectVector(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Reflektiert den eingehenden Vektor 'directionIn' am Ebenenvektor 'surfaceNormal'
            </summary>
            <param name="directionIn">Eingehender Vektor</param>
            <param name="surfaceNormal">Ebenenvektor</param>
            <returns>Reflektierter Vektor</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.GetRotationToMatchSurfaceNormal(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Berechnet die Rotation (als Quaternion), auf die ein GameObject gesetzt werden müsste, um entsprechend der aktuellen Ausrichtung 
            auf dem durch den Ebenenvektor (surface normal) definierten Boden gerade zu stehen
            </summary>
            <param name="lav">Aktueller Look-At-Vektor</param>
            <param name="surfaceNormal">Ebenenvektor (muss normalisiert sein!)</param>
            <returns>Neue zur Ebene passende Rotation (als Quaternion)</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.GetUpVectorFromLookAtVector(OpenTK.Mathematics.Vector3)">
            <summary>
            Berechnet den Vektor, der für den gegebenen Look-At-Vektor (LAV) "oben" darstellt (senkrecht zum LAV)
            </summary>
            <param name="lav">Look-At-Vektor</param>
            <returns>"Oben"-Vektor</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.RotateVectorByQuaternion(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Quaternion)">
            <summary>
            Rotiert einen Vektor mit Hilfe der angegebenen Quaternion (Hamilton-Produkt)
            </summary>
            <param name="source">zu rotierender Vektor</param>
            <param name="rotation">Rotation als Quaternion</param>
            <returns>rotierter Vektor</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.RotateVector(OpenTK.Mathematics.Vector3,System.Single,KWEngine3.Plane)">
            <summary>
            Berechnet den Vektor, der entsteht, wenn der übergebene Vektor um die angegebenen Grad rotiert wird
            </summary>
            <param name="vector">zu rotierender Vektor</param>
            <param name="degrees">Rotation (in Grad)</param>
            <param name="plane">Einheitsvektor, um den rotiert wird</param>
            <returns>Rotierter Vektor</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.RotateVector(OpenTK.Mathematics.Vector3,System.Single,KWEngine3.Axis)">
            <summary>
            Berechnet den Vektor, der entsteht, wenn der übergebene Vektor um die angegebenen Grad rotiert wird
            </summary>
            <param name="vector">zu rotierender Vektor</param>
            <param name="degrees">Rotation (in Grad)</param>
            <param name="axis">Achse, um den rotiert wird</param>
            <returns>Rotierter Vektor</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.GetScreenCoordinatesFor(KWEngine3.GameObjects.GameObject)">
            <summary>
            Berechnet die 2D-Bildschirmkoordinaten für die übergebene GameObject-Instanz.
            </summary>
            <param name="g">GameObject-Instanz</param>
            <returns>2D-Bildschirmkoordinaten als Vector2i-Instanz</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.GetScreenCoordinatesNormalizedFor(KWEngine3.GameObjects.GameObject)">
            <summary>
            Berechnet die normalisierten 2D-Bildschirmkoordinaten für die übergebene GameObject-Instanz.
            </summary>
            <param name="g">GameObject-Instanz</param>
            <returns>2D-Bildschirmkoordinaten als Vector2-Instanz</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.GetScreenAngleBetween(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)">
            <summary>
            Berechnet den Winkel (in Grad), der zwischen zwei 3D-Objekten auf dem Bildschirm existiert.
            Die Gradzahlen beginnen bei 0° (oben) und gehen im Uhrzeigersinn bis 359.9°.
            </summary>
            <param name="source">Quellposition (in 3D-Koordinaten)</param>
            <param name="target">Zielposition (in 3D-Koordinaten)</param>
            <returns>Winkel (in Grad)</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.GetScreenCoordinatesFor(OpenTK.Mathematics.Vector3)">
            <summary>
            Berechnet die 2D-Bildschirmkoordinaten für die übergebene 3D-Position.
            </summary>
            <param name="position">Positionsangabe in 3D</param>
            <returns>2D-Bildschirmkoordinaten als Vector2i-Instanz</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.GetScreenCoordinatesNormalizedFor(OpenTK.Mathematics.Vector3)">
            <summary>
            Berechnet die 2D-Bildschirmkoordinaten für die übergebene 3D-Position.
            </summary>
            <param name="position">Positionsangabe in 3D</param>
            <returns>Normalisierte 2D-Bildschirmkoordinaten als Vector2-Instanz</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.SmoothStep(System.Single,System.Single,System.Single)">
            <summary>
            Erzeugt einen weichen Übergang des Wertes wenn er innerhalb der Unter-/Obergrenze liegt
            </summary>
            <param name="lowerBound">Wertuntergrenze</param>
            <param name="upperBound">Wertobergrenze</param>
            <param name="value">Zu überblendender Wert</param>
            <returns>Weichgezeichneter Wert</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.SmootherStep(System.Single,System.Single,System.Single)">
            <summary>
            Erzeugt einen noch weicheren Übergang des Wertes wenn er innerhalb der Unter-/Obergrenze liegt
            </summary>
            <param name="lowerBound">Wertuntergrenze</param>
            <param name="upperBound">Wertobergrenze</param>
            <param name="value">Zu überblendender Wert</param>
            <returns>Weichgezeichneter Wert</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.SmoothStep(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single)">
            <summary>
            Erzeugt einen weichen Übergang des Wertes wenn er innerhalb der Unter-/Obergrenze liegt
            </summary>
            <param name="lowerBound">Wertuntergrenze</param>
            <param name="upperBound">Wertobergrenze</param>
            <param name="value">Zu überblendender Wert</param>
            <returns>Weichgezeichneter Wert</returns>
        </member>
        <member name="M:KWEngine3.Helper.HelperVector.SmootherStep(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single)">
            <summary>
            Erzeugt einen noch weicheren Übergang des Wertes wenn er innerhalb der Unter-/Obergrenze liegt
            </summary>
            <param name="lowerBound">Wertuntergrenze</param>
            <param name="upperBound">Wertobergrenze</param>
            <param name="value">Zu überblendender Wert</param>
            <returns>Weichgezeichneter Wert</returns>
        </member>
        <member name="T:KWEngine3.Helper.RayIntersection">
            <summary>
            Wrapper-Klasse, die die Entfernung des vom Strahl getroffenen Objekts und einen Verweis auf das getroffene Objekt selbst beinhaltet
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersection.Object">
            <summary>
            Das vom Strahl getroffene Objekt
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersection.Distance">
            <summary>
            Die Distanz vom Aufrufer zum getroffenen Objekt
            </summary>
        </member>
        <member name="F:KWEngine3.Helper.RayIntersection.IntersectionPoint">
            <summary>
            Punkt an dem der Strahl auf das Objekt trifft
            </summary>
        </member>
        <member name="M:KWEngine3.Helper.RayIntersection.#ctor">
            <summary>
            Standardkonstruktor für die Instanz
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersection.IsValid">
            <summary>
            Gibt an, ob die Messung gültig und somit verwendbar ist
            </summary>
        </member>
        <member name="M:KWEngine3.Helper.RayIntersection.CompareTo(KWEngine3.Helper.RayIntersection)">
            <summary>
            Vergleichsmethode, um zwei Objektdistanzen miteinander zu vergleichen
            </summary>
            <param name="other">Vergleichsobjekt</param>
            <returns>Sortierreihenfolge (-1 = näher, 0 = gleiche Entfernung, 1 = entfernter</returns>
        </member>
        <member name="T:KWEngine3.Helper.RayIntersectionExt">
            <summary>
            Wrapper-Klasse, die die Entfernung eines Objekts und den Schnittpunkt eines Strahls auf dem Objekt beinhaltet
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExt.Object">
            <summary>
            Das vom Strahl getroffene Objekt
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExt.HitboxName">
            <summary>
            Name der Hitbox, die getroffen wurde
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExt.Distance">
            <summary>
            Die Distanz vom Aufrufer zum getroffenen Objekt
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExt.IntersectionPoint">
            <summary>
            Der genaue Schnittpunkt des Strahls auf dem Objekt
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExt.SurfaceNormal">
            <summary>
            Der Ebenenvektor des Schnittpunkts
            </summary>
        </member>
        <member name="M:KWEngine3.Helper.RayIntersectionExt.#ctor">
            <summary>
            Standardkonstruktor für die Instanz
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExt.IsValid">
            <summary>
            Gibt an, ob die Messung gültig und somit verwendbar ist
            </summary>
        </member>
        <member name="M:KWEngine3.Helper.RayIntersectionExt.CompareTo(KWEngine3.Helper.RayIntersectionExt)">
            <summary>
            Vergleichsmethode, um zwei Objektdistanzen miteinander zu vergleichen
            </summary>
            <param name="other">Vergleichsobjekt</param>
            <returns>Sortierreihenfolge (-1 = näher, 0 = gleiche Entfernung, 1 = entfernter</returns>
        </member>
        <member name="T:KWEngine3.Helper.RayIntersectionExtSet">
            <summary>
            Wrapper-Klasse, die die Entfernung der von mehreren Strahlen getroffenen Objekte und Verweise auf diese beinhaltet
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExtSet.Objects">
            <summary>
            Liste der getroffenen Objekte
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExtSet.DistanceMin">
            <summary>
            Die kleinste Distanz vom Aufrufer zum getroffenen Objekt
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExtSet.DistanceAvg">
            <summary>
            Die durchschnittliche Distanz vom Aufrufer zum getroffenen Objekt
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExtSet.DistanceToCenter">
            <summary>
            Gibt die Distanz vom Ursprung des mittleren Teststrahls zur Oberfläche an
            </summary>
            <remarks>Sollte kein Schnittpunkt gefunden worden sein, wird stattdessen die durchschnittliche Entfernung verwendet</remarks>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExtSet.IntersectionPoints">
            <summary>
            Punkte, an dem die Strahlen auf Objekte trafen
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExtSet.SurfaceNormals">
            <summary>
            Ebenenvektoren der getroffenen Objekte
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExtSet.IntersectionPointCenter">
            <summary>
            Gibt den Schnittpunkt des mittleren Teststrahls mit der Oberfläche an
            </summary>
            <remarks>Sollte kein Schnittpunkt gefunden worden sein, wird stattdessen der durchschnittliche Schnittpunkt verwendet</remarks>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExtSet.IntersectionPointNearest">
            <summary>
            Enthält den Schnittpunkt, der von allen Strahlen am nächsten am Strahlursprung war
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExtSet.IntersectionPointAvg">
            <summary>
            Enthält den Durchschnittswert aller ermittelten Schnittpunkte
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExtSet.SurfaceNormalNearest">
            <summary>
            Enthält den Vektor der Oberfläche des am nächsten liegenden Schnittpunkts
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExtSet.SurfaceNormalAvg">
            <summary>
            Enthält den durchschnittlichen Oberflächenvektor aller ermittelten Schnittpunktflächen
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExtSet.SurfaceNormalCenter">
            <summary>
            Enthält den Oberflächenvektor der Oberfläche, die vom mittleren Teststrahl getroffen wurde
            </summary>
            <remarks>Sollte kein Schnittpunkt gefunden worden sein, wird stattdessen der durchschnittliche Ebenenvektor verwendet</remarks>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExtSet.ObjectNearest">
            <summary>
            Referenz auf das Objekt, dessen Entfernung am kürzesten zum Strahlenursprung war
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExtSet.ObjectNearestHitboxName">
            <summary>
            Name der Hitbox des Objekts, dessen Entfernung am kürzesten zum Strahlenursprung war
            </summary>
        </member>
        <member name="M:KWEngine3.Helper.RayIntersectionExtSet.#ctor">
            <summary>
            Standardkonstruktor für die Instanz
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayIntersectionExtSet.IsValid">
            <summary>
            Gibt an, ob die Messung gültig und somit verwendbar ist
            </summary>
        </member>
        <member name="T:KWEngine3.Helper.RayTerrainIntersection">
            <summary>
            Wrapper-Klasse, die die Entfernung eines Objekts und den Schnittpunkt eines Strahls auf dem Terrain-Objekt beinhaltet
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayTerrainIntersection.Object">
            <summary>
            Das vom Strahl getroffene Terrain-Objekt
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayTerrainIntersection.Distance">
            <summary>
            Die Distanz vom Aufrufer zum getroffenen Objekt
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayTerrainIntersection.IntersectionPoint">
            <summary>
            Der genaue Schnittpunkt des Strahls auf dem Objekt
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayTerrainIntersection.SurfaceNormal">
            <summary>
            Der Ebenenvektor des Schnittpunkts
            </summary>
        </member>
        <member name="M:KWEngine3.Helper.RayTerrainIntersection.#ctor">
            <summary>
            Standardkonstruktor für die Instanz
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayTerrainIntersection.IsValid">
            <summary>
            Gibt an, ob die Messung gültig und somit verwendbar ist
            </summary>
        </member>
        <member name="T:KWEngine3.Helper.RayTerrainIntersectionSet">
            <summary>
            Wrapper-Klasse, die die Entfernung der von mehreren Strahlen getroffenen Objekte und Verweise auf diese beinhaltet
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayTerrainIntersectionSet.Objects">
            <summary>
            Liste der getroffenen Objekte
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayTerrainIntersectionSet.DistanceMin">
            <summary>
            Die kleinste Distanz vom Aufrufer zum getroffenen Objekt
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayTerrainIntersectionSet.DistanceAvg">
            <summary>
            Die durchschnittliche Distanz vom Aufrufer zum getroffenen Objekt
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayTerrainIntersectionSet.IntersectionPoints">
            <summary>
            Punkte, an dem die Strahlen auf Objekte trafen
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayTerrainIntersectionSet.SurfaceNormals">
            <summary>
            Ebenenvektoren der getroffenen Objekte
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayTerrainIntersectionSet.IntersectionPointNearest">
            <summary>
            Enthält den Schnittpunkt, der von allen Strahlen am nächsten am Strahlursprung war
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayTerrainIntersectionSet.IntersectionPointAvg">
            <summary>
            Enthält den Durchschnittswert aller ermittelten Schnittpunkte
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayTerrainIntersectionSet.SurfaceNormalNearest">
            <summary>
            Enthält den Vektor der Oberfläche des am nächsten liegenden Schnittpunkts
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayTerrainIntersectionSet.SurfaceNormalAvg">
            <summary>
            Enthält den durchschnittlichen Oberflächenvektor aller ermittelten Schnittpunktflächen
            </summary>
        </member>
        <member name="M:KWEngine3.Helper.RayTerrainIntersectionSet.#ctor">
            <summary>
            Standardkonstruktor für die Instanz
            </summary>
        </member>
        <member name="P:KWEngine3.Helper.RayTerrainIntersectionSet.IsValid">
            <summary>
            Gibt an, ob die Messung gültig und somit verwendbar ist
            </summary>
        </member>
        <member name="T:KWEngine3.Helper.TimeBasedObject">
            <summary>
            Basisklasse für Explosions und Partikeleffekte
            </summary>
        </member>
        <member name="T:KWEngine3.KeyboardExt">
            <summary>
            Keyboard-Klasse für Tastatureingaben (mit Engine-Anpassungen)
            </summary>
        </member>
        <member name="M:KWEngine3.KeyboardExt.IsKeyDown(OpenTK.Windowing.GraphicsLibraryFramework.Keys)">
            <summary>
            Prüft, ob die angegebene Taste gerade gedrückt wird
            </summary>
            <param name="key">zu prüfende Taste</param>
            <returns>true, wenn Taste gedrückt wird</returns>
        </member>
        <member name="M:KWEngine3.KeyboardExt.IsKeyPressed(OpenTK.Windowing.GraphicsLibraryFramework.Keys)">
            <summary>
            Prüft, ob die angegebene Taste gerade gedrückt wird und im vorherigen Frame nicht gedrückt wurde
            </summary>
            <param name="key">zu prüfende Taste</param>
            <returns>true, wenn die Taste gedrückt und im vorherigen Frame nicht gedrückt wurde</returns>
        </member>
        <member name="T:KWEngine3.KWEngine">
            <summary>
            Kernbibliothek der Engine
            </summary>
        </member>
        <member name="F:KWEngine3.KWEngine.MAXADDITIONALINSTANCECOUNT">
            <summary>
            Gibt die maximale Anzahl der Instanzen für RenderObjects an
            </summary>
        </member>
        <member name="P:KWEngine3.KWEngine.Window">
            <summary>
            Aktuelles Fenster
            </summary>
        </member>
        <member name="P:KWEngine3.KWEngine.CurrentWorld">
            <summary>
            Aktuelle Welt
            </summary>
        </member>
        <member name="M:KWEngine3.KWEngine.PrintHitboxesForModel(System.String)">
            <summary>
            Gibt die Namen aller Hitboxen des angegebenen Modells auf der Editorkonsole aus
            </summary>
            <param name="modelname">Modellname</param>
        </member>
        <member name="M:KWEngine3.KWEngine.GetHitboxesForModel(System.String)">
            <summary>
            Gibt die Namen aller Hitboxen des angegebenen Modells auf der Editorkonsole aus
            </summary>
            <param name="modelname">Modellname</param>
            <returns>Liste der Hitboxnamen</returns>
        </member>
        <member name="P:KWEngine3.KWEngine.EditModeActive">
            <summary>
            Gibt an, ob der Edit-Modus aktiv ist
            </summary>
        </member>
        <member name="P:KWEngine3.KWEngine.SweepAndPruneTolerance">
            <summary>
            Zusätzliches Padding für die Kollisionsvorhersage (Standard: 1.0f)
            </summary>
        </member>
        <member name="P:KWEngine3.KWEngine.WorldTime">
            <summary>
            Gibt an, wie lange die aktuelle Welt bereits aktiv ist
            </summary>
        </member>
        <member name="P:KWEngine3.KWEngine.ApplicationTime">
            <summary>
            Gibt an, wie lange die Anwendung bereits aktiv ist
            </summary>
        </member>
        <member name="M:KWEngine3.KWEngine.LogWriteLine(System.Object)">
            <summary>
            Schreibt eine Log-Zeile in das Ausgabefenster des Edit-Modus (nur Debug-Modus)
            </summary>
            <param name="message">Zu schreibende Nachricht</param>
        </member>
        <member name="M:KWEngine3.KWEngine.LogClear">
            <summary>
            Löscht alle Log-Nachrichten des Edit-Modus
            </summary>
        </member>
        <member name="F:KWEngine3.KWEngine.MAX_BLOOM_BUFFERS">
            <summary>
            Anzahl der Renderschritte für den Glow-Effekt
            </summary>
        </member>
        <member name="F:KWEngine3.KWEngine.MAX_BONE_WEIGHTS">
            <summary>
            Anzahl der Gewichte pro Knochen
            </summary>
        </member>
        <member name="F:KWEngine3.KWEngine.MAX_BONES">
            <summary>
            Anzahl der Knochen pro GameObject
            </summary>
        </member>
        <member name="F:KWEngine3.KWEngine.MAX_LIGHTS">
            <summary>
            Anzahl der Lichter pro Welt
            </summary>
        </member>
        <member name="F:KWEngine3.KWEngine.MAX_SHADOWMAPS">
            <summary>
            Anzahl der Schattenlichter pro Welt (anteilig an MAX_LIGHTS)
            </summary>
        </member>
        <member name="P:KWEngine3.KWEngine.GlowRadius">
            <summary>
            Steuert das Ausmaß des durch Überbelichtung erzeugten Glow-Effekts (von 0 bis 1, Standard: 1.0)
            </summary>
        </member>
        <member name="P:KWEngine3.KWEngine.GlowStyleFactor1">
            <summary>
            Steuert den Stil des Glühens (Faktor 1, erlaubte Werte zwischen 0 und 1, Standard: 0.2)
            </summary>
        </member>
        <member name="P:KWEngine3.KWEngine.GlowStyleFactor2">
            <summary>
            Steuert den Stil des Glühens (Faktor 2, erlaubte Werte zwischen 0 und 1, Standard: 0.8)
            </summary>
        </member>
        <member name="P:KWEngine3.KWEngine.WorldUp">
            <summary>
            Welt-Vektor, der angibt, wo 'oben' ist
            </summary>
        </member>
        <member name="P:KWEngine3.KWEngine.MouseSensitivity">
            <summary>
            Empfindlichkeit des Mauszeigers im First-Person-Modus (Standard: 0.05f, negative Werte für die Invertierung der y-Achse)
            </summary>
        </member>
        <member name="M:KWEngine3.KWEngine.BuildTerrainModel(System.String,System.String,System.String,System.Single,System.Single,System.Single)">
            <summary>
            Baut ein Terrain-Modell
            </summary>
            <param name="name">Name des Modells</param>
            <param name="heightmap">Height Map Textur</param>
            <param name="texture">Textur der Oberfläche</param>
            <param name="width">Breite</param>
            <param name="height">Höhe</param>
            <param name="depth">Tiefe</param>
        </member>
        <member name="M:KWEngine3.KWEngine.LoadAnimationIntoModel(System.String,System.String)">
            <summary>
            Lädt die unter dem Dateinamen zu findenden Animationen in das (zuvor unter dem Namen angegebenen) 3D-Modell
            </summary>
            <param name="modelname">Name des bereits importierten Modells</param>
            <param name="filename">Dateiname der zu importierenden Datei</param>
        </member>
        <member name="M:KWEngine3.KWEngine.LoadCollider(System.String,System.String,KWEngine3.ColliderType)">
            <summary>
            Importiert ein 3D-Collider-Modell unter dem angegebenen Namen
            </summary>
            <param name="name">Name, unter dem das Collider-Modell gespeichert werden soll</param>
            <param name="filename">Dateiname des Collider-Modells</param>
            <param name="colliderType">Art des Collider-Modells</param>
        </member>
        <member name="M:KWEngine3.KWEngine.LoadModel(System.String,System.String)">
            <summary>
            Lädt ein Modell aus einer Datei
            </summary>
            <param name="name">Name des Modells</param>
            <param name="filename">Datei des Modells</param>
        </member>
        <member name="M:KWEngine3.KWEngine.GetModelBoneNames(System.String)">
            <summary>
            Erstellt eine Liste der im 3D-Modell verfügbaren Knochennamen
            </summary>
            <param name="modelname">Name des Modells (muss zuvor importiert worden sein)</param>
            <returns>Liste der Knochennamen</returns>
        </member>
        <member name="T:KWEngine3.Model.GeoAnimation">
            <summary>
            Animationsklasse
            </summary>
        </member>
        <member name="P:KWEngine3.Model.GeoAnimation.Name">
            <summary>
            Name der Animation
            </summary>
        </member>
        <member name="P:KWEngine3.Model.GeoAnimation.DurationInTicks">
            <summary>
            Dauer der Animation
            </summary>
        </member>
        <member name="P:KWEngine3.Model.GeoAnimation.TicksPerSecond">
            <summary>
            Ticks pro Sekunde
            </summary>
        </member>
        <member name="P:KWEngine3.Model.GeoAnimation.AnimationChannels">
            <summary>
            Animationskanäle
            </summary>
        </member>
        <member name="T:KWEngine3.Model.GeoModel">
            <summary>
            Modellklasse
            </summary>
        </member>
        <member name="M:KWEngine3.Model.GeoModel.ToString">
            <summary>
            Gibt Auskunft über den Modellnamen
            </summary>
            <returns>Modellname</returns>
        </member>
        <member name="P:KWEngine3.Model.GeoModel.Root">
            <summary>
            Wurzelknoten
            </summary>
        </member>
        <member name="P:KWEngine3.Model.GeoModel.Path">
            <summary>
            Pfad zur Modelldatei
            </summary>
        </member>
        <member name="P:KWEngine3.Model.GeoModel.PathAbsolute">
            <summary>
            Absoluter Pfad zur Modelldatei
            </summary>
        </member>
        <member name="P:KWEngine3.Model.GeoModel.Animations">
            <summary>
            Animationsliste
            </summary>
        </member>
        <member name="P:KWEngine3.Model.GeoModel.HasBones">
            <summary>
            Verfügt das Modell über Knochen für Animationen?
            </summary>
        </member>
        <member name="P:KWEngine3.Model.GeoModel.Armature">
            <summary>
            Knoten des Skeletts
            </summary>
        </member>
        <member name="P:KWEngine3.Model.GeoModel.IsValid">
            <summary>
            Validität des Modells
            </summary>
        </member>
        <member name="P:KWEngine3.Model.GeoModel.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:KWEngine3.Model.GeoModel.Filename">
            <summary>
            Dateiname
            </summary>
        </member>
        <member name="P:KWEngine3.Model.GeoModel.TransformGlobalInverse">
            <summary>
            Globale Transformationsinvers-Matrix
            </summary>
        </member>
        <member name="P:KWEngine3.Model.GeoModel.IsTerrain">
            <summary>
            Handelt es sich bei dem Modell um Terrain?
            </summary>
        </member>
        <member name="T:KWEngine3.MouseExt">
            <summary>
            Mouse-Klasse für Mauseingaben (mit Engine-Anpassungen)
            </summary>
        </member>
        <member name="P:KWEngine3.MouseExt.Position">
            <summary>
            Gibt die aktuelle Mauscursorposition an
            </summary>
        </member>
        <member name="M:KWEngine3.MouseExt.IsButtonDown(OpenTK.Windowing.GraphicsLibraryFramework.MouseButton)">
            <summary>
            Prüft, ob die angegebene Maustaste gerade gedrückt wird
            </summary>
            <param name="button">zu prüfende Taste</param>
            <returns>true, wenn Taste gedrückt wird</returns>
        </member>
        <member name="M:KWEngine3.MouseExt.IsButtonPressed(OpenTK.Windowing.GraphicsLibraryFramework.MouseButton)">
            <summary>
            Prüft, ob die angegebene Maustaste gerade gedrückt wird und im vorherigen Frame nicht gedrückt wurde
            </summary>
            <param name="button">zu prüfende Taste</param>
            <returns>true, wenn die Taste gedrückt und im vorherigen Frame nicht gedrückt wurde</returns>
        </member>
        <member name="T:KWEngine3.World">
            <summary>
            Basisklasse für Spielwelten
            </summary>
        </member>
        <member name="P:KWEngine3.World.IsPrepared">
            <summary>
            Gibt an, ob die Welt bereits via Prepare()-Methode abschließend vorbereitet wurde
            </summary>
        </member>
        <member name="P:KWEngine3.World.MouseMovement">
            <summary>
            Gibt die Strecke an, die der Mauszeiger seit der letzten Überprüfung zurückgelegt hat
            </summary>
        </member>
        <member name="P:KWEngine3.World.ColorAmbient">
            <summary>
            Gibt Auskunft über das aktuell gewählte Umgebungslicht
            </summary>
        </member>
        <member name="P:KWEngine3.World.ColorBackground">
            <summary>
            Gibt Auskunft über die aktuell gewählte Hintergrundfarbe
            </summary>
        </member>
        <member name="M:KWEngine3.World.SetColorAmbient(System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Farbe des Umgebungslichts (dort wo kein Licht scheint)
            </summary>
            <param name="r">Rotanteil (0 bis 1)</param>
            <param name="g">Grünanteil (0 bis 1)</param>
            <param name="b">Blauanteil (0 bis 1)</param>
        </member>
        <member name="M:KWEngine3.World.SetColorAmbient(OpenTK.Mathematics.Vector3)">
            <summary>
            Setzt die Farbe des Umgebungslichts (dort wo kein Licht scheint)
            </summary>
            <param name="a">Rot-/Grün-/Blauanteil</param>
        </member>
        <member name="P:KWEngine3.World.IsViewSpaceGameObjectAttached">
            <summary>
            Gibt an, ob aktuell ein ViewSpaceGameObject verwendet wird
            </summary>
        </member>
        <member name="M:KWEngine3.World.SetViewSpaceGameObject(KWEngine3.GameObjects.ViewSpaceGameObject)">
            <summary>
            Heftet ein Objekt als ViewSpaceGameObject an die aktuelle Welt bzw. dessen Kamera an
            </summary>
            <param name="vsg">Anzuheftende Instanz</param>
        </member>
        <member name="M:KWEngine3.World.GetViewSpaceGameObject">
            <summary>
            Gibt das aktuell verwendete ViewSpaceGameObject zurück
            </summary>
            <returns>ViewSpaceGameObject-Instanz</returns>
        </member>
        <member name="M:KWEngine3.World.GetViewSpaceGameObjectPosition">
            <summary>
            Erfragt die Position des aktuell angehefteten ViewSpaceGameObject
            </summary>
            <returns>Position (aber falls kein Objekt angeheftet ist: (0|0|0))</returns>
        </member>
        <member name="M:KWEngine3.World.SetBackgroundFillColor(System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Hintergrundfarbe der Welt
            </summary>
            <param name="r">Rotanteil (zwischen 0 und 1)</param>
            <param name="g">Grünanteil (zwischen 0 und 1)</param>
            <param name="b">Blauanteil (zwischen 0 und 1)</param>
        </member>
        <member name="M:KWEngine3.World.SetBackgroundFillColor(OpenTK.Mathematics.Vector3)">
            <summary>
            Setzt die Hintergrundfarbe der Welt
            </summary>
            <param name="color">Farbwerte (RGB, jeweils zwischen 0 und 1)</param>
        </member>
        <member name="M:KWEngine3.World.GetBackgroundImageSize">
            <summary>
            Erfragt die Auflösung der aktuell gewählten Hintergrundtextur
            </summary>
            <returns>Auflösung der Hintergrundtextur in Pixeln</returns>
            <remarks>Wenn kein Hintergrundbild festgelegt wurde, wird der Nullvektor (0|0) zurückgegeben</remarks>
        </member>
        <member name="M:KWEngine3.World.SetBackgroundSkybox(System.String,System.Single,KWEngine3.SkyboxType)">
            <summary>
            Setzt die Skybox für den 3D-Hintergrund
            </summary>
            <param name="filename">Dateiname inkl. relativem Pfad</param>
            <param name="rotationY">Startrotation des Hintergrunds um die Y-Achse (Standard: 0)</param>
            <param name="type">Typ der Skybox [CubeMap oder Gleichwinkelbild (Equirectangular), Standard: CubeMap]</param>
        </member>
        <member name="M:KWEngine3.World.SetBackgroundBrightnessMultiplier(System.Single)">
            <summary>
            Setzt den Helligkeitsverstärker für einen Hintergrund
            </summary>
            <param name="m">Verstärkerwert (muss >= 0 sein)</param>
        </member>
        <member name="M:KWEngine3.World.SetBackground2D(System.String)">
            <summary>
            Setzt ein 2D-Hintergrundbild
            </summary>
            <param name="filename">Dateiname inkl. relativem Pfad</param>
        </member>
        <member name="M:KWEngine3.World.SetBackground2DOffset(System.Single,System.Single)">
            <summary>
            Verschiebt das 2D-Hintergrundbild um die angegebenen Werte
            </summary>
            <param name="x">x-Verschiebung</param>
            <param name="y">y-Verschiebung</param>
        </member>
        <member name="M:KWEngine3.World.SetBackground2DRepeat(System.Single,System.Single)">
            <summary>
            Setzt die Texturwiederholung des 2D-Hintergrundbilds
            </summary>
            <param name="x">x-Wiederholung</param>
            <param name="y">y-Wiederholung</param>
        </member>
        <member name="M:KWEngine3.World.SetBackground2DClip(System.Single,System.Single)">
            <summary>
            Beschneidet die 2D-Hintergrundtextur
            </summary>
            <param name="x">Beschneidung in x-Richtung</param>
            <param name="y">Beschneidung in y-Richtung</param>
        </member>
        <member name="M:KWEngine3.World.SetFlowField(KWEngine3.Helper.FlowField)">
            <summary>
            Setzt das FlowField-Objekt (es kann aktuell immer nur ein FlowField pro Welt existieren)
            </summary>
            <param name="f">FlowField-Objekt</param>
        </member>
        <member name="M:KWEngine3.World.GetFlowField">
            <summary>
            Erfragt die Referenz auf das aktuelle FlowField
            </summary>
            <returns>Referenz auf das FlowField - wenn keines vorhanden ist: null</returns>
        </member>
        <member name="M:KWEngine3.World.AddExplosionObject(KWEngine3.GameObjects.ExplosionObject)">
            <summary>
            Fügt ein Explosionsobjekt hinzu
            </summary>
            <param name="ex">Objekt</param>
        </member>
        <member name="M:KWEngine3.World.AddParticleObject(KWEngine3.GameObjects.ParticleObject)">
            <summary>
            Fügt ein Partikelobjekt hinzu
            </summary>
            <param name="po">Objekt</param>
        </member>
        <member name="M:KWEngine3.World.AddFoliageObject(KWEngine3.GameObjects.FoliageObject)">
            <summary>
            Fügt ein Gewächsobjekt (z.B. Gras) hinzu
            </summary>
            <param name="f">hinzuzufügendes Objekt</param>
        </member>
        <member name="M:KWEngine3.World.RemoveFoliageObject(KWEngine3.GameObjects.FoliageObject)">
            <summary>
            Löscht ein Gewächsobjekt (z.B. Gras) aus der Welt
            </summary>
            <param name="f">zu entfernendes Objekt</param>
        </member>
        <member name="M:KWEngine3.World.AddGameObject(KWEngine3.GameObjects.GameObject)">
            <summary>
            Fügt ein GameObject der Welt hinzu
            </summary>
            <param name="g">Objekt</param>
        </member>
        <member name="M:KWEngine3.World.RemoveGameObject(KWEngine3.GameObjects.GameObject)">
            <summary>
            Löscht das angegebene Objekt aus der Welt
            </summary>
            <param name="g">Objekt</param>
        </member>
        <member name="M:KWEngine3.World.RemoveGameObjectsOfType``1(System.Boolean)">
            <summary>
            Löscht alle aktuell in der Welt befindlichen GameObject-Instanzen des angegebenen Typs
            </summary>
            <typeparam name="T">Zu suchender Datentyp (Klasse)</typeparam>
            <param name="includeSubtypes">wenn true, werden auch Unterklassen des angegebenen Typs berücksichtigt (Standard: true)</param>
        </member>
        <member name="M:KWEngine3.World.AddRenderObject(KWEngine3.GameObjects.RenderObject)">
            <summary>
            Löscht das angegebene Objekt aus der Welt
            </summary>
            <param name="r">Hinzuzufügendes Objekt</param>
        </member>
        <member name="M:KWEngine3.World.RemoveRenderObject(KWEngine3.GameObjects.RenderObject)">
            <summary>
            Löscht das angegebene Objekt aus der Welt
            </summary>
            <param name="r">Zu löschendes Objekt</param>
        </member>
        <member name="M:KWEngine3.World.AddLightObject(KWEngine3.GameObjects.LightObject)">
            <summary>
            Fügt das angegebene Lichtobjekt der Welt hinzu
            </summary>
            <param name="l">Objekt</param>
        </member>
        <member name="M:KWEngine3.World.RemoveLightObject(KWEngine3.GameObjects.LightObject)">
            <summary>
            Löscht das angegebene Licht-Objekt aus der Welt
            </summary>
            <param name="l">Objekt</param>
        </member>
        <member name="M:KWEngine3.World.AddTerrainObject(KWEngine3.GameObjects.TerrainObject)">
            <summary>
            Fügt das angegebene Terrain-Objekt der Welt hinzu
            </summary>
            <param name="t">Objekt</param>
        </member>
        <member name="M:KWEngine3.World.RemoveTerrainObject(KWEngine3.GameObjects.TerrainObject)">
            <summary>
            Löscht das angegebene Terrain-Objekt aus der Welt
            </summary>
            <param name="t">Objekt</param>
        </member>
        <member name="M:KWEngine3.World.AddHUDObject(KWEngine3.GameObjects.HUDObject)">
            <summary>
            Fügt ein HUD-Objekt der Welt hinzu
            </summary>
            <param name="h">Objekt</param>
        </member>
        <member name="M:KWEngine3.World.RemoveHUDObject(KWEngine3.GameObjects.HUDObject)">
            <summary>
            Löscht das angegebene HUD-Objekt aus der Welt
            </summary>
            <param name="h">Objekt</param>
        </member>
        <member name="M:KWEngine3.World.AddTextObject(KWEngine3.GameObjects.TextObject)">
            <summary>
            Fügt ein Textobjekt der Welt hinzu
            </summary>
            <param name="t">Objekt</param>
        </member>
        <member name="M:KWEngine3.World.RemoveTextObject(KWEngine3.GameObjects.TextObject)">
            <summary>
            Löscht das angegebene Textobjekt aus der Welt
            </summary>
            <param name="t">Objekt</param>
        </member>
        <member name="M:KWEngine3.World.SetCameraRenderDistance(System.Single)">
            <summary>
            Ändert die Renderdistanz der Kamera (Standard: 500, Maximal 10000)
            </summary>
            <param name="renderDistance">neue Renderdistanz (muss größer oder gleich 1 sein)</param>
        </member>
        <member name="M:KWEngine3.World.SetCameraPosition(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Setzt die Kameraposition
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="z">z</param>
            <param name="offsetY">(optional: Verschiebung in y-Richtung)</param>
        </member>
        <member name="M:KWEngine3.World.SetCameraPosition(OpenTK.Mathematics.Vector3,System.Single)">
            <summary>
            Setzt die Kameraposition
            </summary>
            <param name="position">Positionswert in 3D</param>
            <param name="offsetY">(optional: Verschiebung in y-Richtung)</param>
        </member>
        <member name="M:KWEngine3.World.UpdateCameraPositionForFirstPersonView(OpenTK.Mathematics.Vector3,System.Single)">
            <summary>
            Aktualisiert die Kameraperspektive für den First-Person-Modus
            </summary>
            <param name="position">Zielposition</param>
            <param name="offsetY">optionaler vertikaler Offset</param>
        </member>
        <member name="M:KWEngine3.World.SetCameraTarget(System.Single,System.Single,System.Single)">
            <summary>
            Setzt das Ziel der Kamera
            </summary>
            <param name="x">x</param>
            <param name="y">y</param>
            <param name="z">z</param>
        </member>
        <member name="M:KWEngine3.World.SetCameraTarget(OpenTK.Mathematics.Vector3)">
            <summary>
            Setzt das Ziel der Kamera
            </summary>
            <param name="target">Zielposition</param>
        </member>
        <member name="M:KWEngine3.World.SetCameraToFirstPersonGameObject(KWEngine3.GameObjects.GameObject,System.Single)">
            <summary>
            Verschiebt die Kamera einmalig auf die Position des angegebenen GameObject
            </summary>
            <param name="g">GameObject-Instanz</param>
            <param name="offsetY">Relative Verschiebung der Kamera in y-Richtung</param>
        </member>
        <member name="M:KWEngine3.World.AddCameraRotationFromMouseDelta">
            <summary>
            Rotiert die Kamera gemäß der gegebenen Mausbewegung
            </summary>
        </member>
        <member name="M:KWEngine3.World.AddCameraRotation(OpenTK.Mathematics.Vector2)">
            <summary>
            Rotiert die Kamera gemäß des gegebenen Bewegungsdeltas
            </summary>
            <param name="yawPitch">Bewegung in x-/y-Richtung (Delta)</param>
        </member>
        <member name="M:KWEngine3.World.GetTerrainObjectByName(System.String)">
            <summary>
            Durchsucht alle TerrainObject-Instanzen und gibt das erste Suchergebnis zum angegebenen Namen zurück
            </summary>
            <param name="name">gesuchter Name</param>
            <returns>gefundenes Objekt (oder null)</returns>
        </member>
        <member name="M:KWEngine3.World.GetTextObjectByName(System.String)">
            <summary>
            Durchsucht alle TextObject-Instanzen und gibt das erste Suchergebnis zum angegebenen Namen zurück
            </summary>
            <param name="name">gesuchter Name</param>
            <returns>gefundenes Objekt (oder null)</returns>
        </member>
        <member name="M:KWEngine3.World.GetGameObjectsByName(System.String)">
            <summary>
            Erstellt eine Liste aller GameObject-Instanzen mit einem bestimmten Namen
            </summary>
            <param name="name">gesuchter Name</param>
            <returns>Liste der gefundenen Instanzen</returns>
        </member>
        <member name="M:KWEngine3.World.GetGameObjectsByName``1(System.String)">
            <summary>
            Durchsucht die Liste der GameObject-Instanzen nach Objekten des gegebenen Typs mit dem gegebenen Namen
            </summary>
            <typeparam name="T">Klassenname</typeparam>
            <param name="name">Name der gesuchten Objekte</param>
            <returns>Liste der gefundenen Objekte</returns>
        </member>
        <member name="M:KWEngine3.World.GetGameObjectsByType``1">
            <summary>
            Durchsucht die Liste der GameObject-Instanzen nach Objekten des gegebenen Typs
            </summary>
            <typeparam name="T">Klassenname</typeparam>
            <returns>Liste der gefundenen Objekte</returns>
        </member>
        <member name="M:KWEngine3.World.GetGameObjectByName``1(System.String)">
            <summary>
            Durchsucht die Liste der GameObject-Instanzen nach einem Objekt des gegebenen Typs mit dem gegebenen Namen
            </summary>
            <typeparam name="T">Klasse des gesuchten Objekts</typeparam>
            <param name="name">Name des gesuchten Objekts</param>
            <returns>Gesuchtes Objekt oder null (falls nicht gefunden)</returns>
        </member>
        <member name="M:KWEngine3.World.GetGameObjectByName(System.String)">
            <summary>
            Durchsucht die Liste der GameObject-Instanzen nach einem Objekt mit dem gegebenen Namen
            </summary>
            <param name="name">Name des gesuchten Objekts</param>
            <returns>Gesuchtes Objekt oder null (falls nicht gefunden)</returns>
        </member>
        <member name="M:KWEngine3.World.GetLightObjectByName(System.String)">
            <summary>
            Durchsucht die Liste der LightObject-Instanzen nach einem Objekt mit dem gegebenen Namen
            </summary>
            <param name="name">Name des gesuchten Objekts</param>
            <returns>Gesuchtes Objekt oder null (falls nicht gefunden)</returns>
        </member>
        <member name="M:KWEngine3.World.GetHUDObjectByName(System.String)">
            <summary>
            Durchsucht die Liste der HUDObject-Instanzen nach einem Objekt mit dem gegebenen Namen
            </summary>
            <param name="name">Name des gesuchten Objekts</param>
            <returns>Gesuchtes Objekt oder null (falls nicht gefunden)</returns>
        </member>
        <member name="M:KWEngine3.World.GetHUDObjectsByName(System.String)">
            <summary>
            Durchsucht die Liste der HUDObject-Instanzen nach Objekten, die die angegebene Zeichenkette enthalten
            </summary>
            <param name="name">Zu suchende Zeichenkette</param>
            <returns>Liste der gefundenen Objekte</returns>
        </member>
        <member name="M:KWEngine3.World.GetHUDObjectTextByName(System.String)">
            <summary>
            Durchsucht die Liste der HUDObject-Instanzen nach einem Textobjekt mit dem gegebenen Namen
            </summary>
            <param name="name">Name des gesuchten Objekts</param>
            <returns>Gesuchtes Objekt oder null (falls nicht gefunden)</returns>
        </member>
        <member name="M:KWEngine3.World.GetHUDObjectTextsByName(System.String)">
            <summary>
            Durchsucht die Liste der HUDObject-Instanzen nach HUDObjectText-Objekten, die die angegebene Zeichenkette enthalten
            </summary>
            <param name="name">Zu suchende Zeichenkette</param>
            <returns>Liste der gefundenen Objekte</returns>
        </member>
        <member name="M:KWEngine3.World.GetHUDObjectImageByName(System.String)">
            <summary>
            Durchsucht die Liste der HUDObject-Instanzen nach einem Bildobjekt mit dem gegebenen Namen
            </summary>
            <param name="name">Name des gesuchten Objekts</param>
            <returns>Gesuchtes Objekt oder null (falls nicht gefunden)</returns>
        </member>
        <member name="M:KWEngine3.World.GetHUDObjectImagesByName(System.String)">
            <summary>
            Durchsucht die Liste der HUDObject-Instanzen nach HUDObjectImage-Objekten, die die angegebene Zeichenkette enthalten
            </summary>
            <param name="name">Zu suchende Zeichenkette</param>
            <returns>Liste der gefundenen Objekte</returns>
        </member>
        <member name="P:KWEngine3.World.ApplicationTime">
            <summary>
            Zeit in Sekunden, die die Applikation bereits geöffnet ist
            </summary>
        </member>
        <member name="P:KWEngine3.World.WorldTime">
            <summary>
            Zeit in Sekunden, die die aktuelle Welt bereits läuft
            </summary>
        </member>
        <member name="M:KWEngine3.World.ResetWorldTime(System.Single)">
            <summary>
            Setzt die vergangene Weltzeit zurück auf 0 Sekunden (ACHTUNG: Löscht alle vorhandenen Explosions- und Partikelobjekte sowie geplante Events in der Welt)
            </summary>
            <param name="initialTime">optional: setzt die Weltzeit auf die angegebene Sekundenzahl</param>
        </member>
        <member name="P:KWEngine3.World.Keyboard">
            <summary>
            Verweis auf Keyboardeingaben
            </summary>
        </member>
        <member name="P:KWEngine3.World.Mouse">
            <summary>
            Verweis auf Mauseingaben
            </summary>
        </member>
        <member name="P:KWEngine3.World.Window">
            <summary>
            Verweis auf das aktuelle Programmfenster
            </summary>
        </member>
        <member name="P:KWEngine3.World.CameraLookAtVector">
            <summary>
            Blickrichtung der Kamera
            </summary>
        </member>
        <member name="P:KWEngine3.World.CameraLookAtVectorXZ">
            <summary>
            Blickrichtung der Kamera ohne die Y-Achse zu berücksichtigen
            </summary>
        </member>
        <member name="P:KWEngine3.World.CameraLookAtVectorLocalUpXZ">
            <summary>
            Blickrichtung der Kamera nach oben ohne die Y-Achse zu berücksichtigen
            </summary>
        </member>
        <member name="P:KWEngine3.World.CameraLookAtVectorLocalUp">
            <summary>
            Blickrichtung der Kamera nach oben
            </summary>
        </member>
        <member name="P:KWEngine3.World.CameraLookAtVectorLocalRightXZ">
            <summary>
            Blickrichtung der Kamera nach rechts ohne die Y-Achse zu berücksichtigen
            </summary>
        </member>
        <member name="P:KWEngine3.World.CameraLookAtVectorLocalRight">
            <summary>
            Blickrichtung der Kamera nach rechts
            </summary>
        </member>
        <member name="P:KWEngine3.World.CameraPosition">
            <summary>
            Kameraposition
            </summary>
        </member>
        <member name="P:KWEngine3.World.CameraTarget">
            <summary>
            Kameraziel
            </summary>
        </member>
        <member name="M:KWEngine3.World.MouseCursorGrab">
            <summary>
            Fange den Mauszeiger und blende ihn aus (für First-Person-Modus)
            </summary>
        </member>
        <member name="M:KWEngine3.World.MouseCursorHide">
            <summary>
            Verstecke den Mauszeiger
            </summary>
        </member>
        <member name="M:KWEngine3.World.MouseCursorReset">
            <summary>
            Setzt den Mauszeiger wieder auf seinen Normalzustand (sichtbar) zurück
            </summary>
        </member>
        <member name="M:KWEngine3.World.MouseCursorResetPosition">
            <summary>
            Setze den Mauszeiger in die Mitte des Fensters
            </summary>
        </member>
        <member name="M:KWEngine3.World.SetCameraFOV(System.Single)">
            <summary>
            Setze den Blickwinkel der Kamera
            </summary>
            <param name="fov">Blickwinkel in Grad (zwischen 10 und 180)</param>
        </member>
        <member name="M:KWEngine3.World.GetGameObjects">
            <summary>
            Erfragt die Liste der aktuellen GameObject-Instanzen der Welt
            </summary>
            <returns>Liste</returns>
        </member>
        <member name="M:KWEngine3.World.GetLightObjects">
            <summary>
            Erfragt die Liste der aktuellen LightObject-Instanzen der Welt
            </summary>
            <returns>Liste</returns>
        </member>
        <member name="M:KWEngine3.World.LoadJSON(System.String)">
            <summary>
            Lade eine Weltkonfiguation aus der angegebenen JSON-Datei
            </summary>
            <param name="filename">Dateiname (inkl. relativem Pfad)</param>
        </member>
        <member name="M:KWEngine3.World.Prepare">
            <summary>
            Vorbereitungsmethode der Welt
            </summary>
        </member>
        <member name="M:KWEngine3.World.Act">
            <summary>
            Act-Methode der Welt
            </summary>
        </member>
        <member name="M:KWEngine3.World.OnWorldEvent(KWEngine3.WorldEvent)">
            <summary>
            Diese Methode wird im Falle eines geplanten Ereignisses aufgerufen, so dass das jeweilige Ereignis indidivuell verarbeitet werden kann.
            </summary>
            <param name="e">Ereignisinstanz</param>
        </member>
        <member name="M:KWEngine3.World.AddWorldEvent(KWEngine3.WorldEvent)">
            <summary>
            Fügt ein geplantes Weltereignis der weltinternen Ereignisliste hinzu
            </summary>
            <param name="e">Hinzufügendes Ereignisobjekt</param>
        </member>
        <member name="T:KWEngine3.WorldEvent">
            <summary>
            Ereignisklasse für World-Instanzen
            </summary>
        </member>
        <member name="P:KWEngine3.WorldEvent.Timestamp">
            <summary>
            Zeitstempel (in Sekunden) seit Beginn der aktuellen Weltzeit. Zu diesem Zeitpunkt wird das Event ausgeführt.
            </summary>
        </member>
        <member name="P:KWEngine3.WorldEvent.Tag">
            <summary>
            Wert des Ereignisses (Objekttyp frei wählbar)
            </summary>
        </member>
        <member name="P:KWEngine3.WorldEvent.Description">
            <summary>
            Beschreibung (oder Schlüsselwort) des Ereignisses
            </summary>
        </member>
        <member name="M:KWEngine3.WorldEvent.#ctor(System.Single,System.String,System.Object)">
            <summary>
            Konstruktormethode eines Ereignisses
            </summary>
            <param name="timestamp"></param>
            <param name="description"></param>
            <param name="tag"></param>
        </member>
        <member name="M:KWEngine3.WorldEvent.CompareTo(KWEngine3.WorldEvent)">
            <summary>
            Standardvergleichmethode für das Sortieren der Ereignisobjekte (wird intern benötigt)
            </summary>
            <param name="other">Vergleichsereignis</param>
            <returns>Vergleichsergebnis (-1, 0 oder 1)</returns>
        </member>
    </members>
</doc>
